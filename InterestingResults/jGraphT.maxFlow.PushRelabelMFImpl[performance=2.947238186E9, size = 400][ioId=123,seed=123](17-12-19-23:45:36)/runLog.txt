[Configuration]
[sizePolicy] FixedEvalSize(400)

stateTypes = Vector(EInt, EGraph(EInt))
argConstRatio = 0.5900879589211547
constMap: Map(EInt -> ExprGen(EInt,patsyn.GPEnvGenerator$$Lambda$59/1908143486@553a3d88), EGraph(EInt) -> ExprGen(EGraph(EInt),patsyn.GPEnvGenerator$$Lambda$59/1908143486@7a30d1e6))
functions: Vector(inc: (EInt) => EInt, dec: (EInt) => EInt, neg: (EInt) => EInt, plus: (EInt,EInt) => EInt, minus: (EInt,EInt) => EInt, times: (EInt,EInt) => EInt, divide: (EInt,EInt) => EInt, modular: (EInt,EInt) => EInt, append[1], prepend[1], access[1], concat[1], length[1], emptyGraph[1], addNode[1], addEdge[1], growEdge[1], growSelfLoop[1], bridgeEdge[1], deleteEdge[1], mergeGraph[1], updateEdge[1], pair1[2], pair2[2], mkPair[2])
     

[Runner config]

ioId: 123
randomSeed: 123
previewPatternLen: 7
       
[GP config]

populationSize: 418
tournamentSize: 4
evaluationTrials：1
totalSizeTolerance：40
singleSizeTolerance：20
crossoverP: 0.5
mutateP: 0.4
copyP: 0.29989874792891025
     
[execution config]

sizeOfInterest: FixedEvalSize(400)
threadNum：1
timeLimitInMillis：120000
maxNonIncreaseGen：Some(150)
maxFuzzingTimeSec: None
     
       
[End of Configuration]

[Function map]
EGraph(EInt) -> {emptyGraph: () => EGraph(EInt), addNode: (EGraph(EInt)) => EGraph(EInt), addEdge: (EGraph(EInt),EInt) => EGraph(EInt), growEdge: (EGraph(EInt),EInt,EInt) => EGraph(EInt), growSelfLoop: (EGraph(EInt),EInt,EInt) => EGraph(EInt), bridgeEdge: (EGraph(EInt),EInt,EInt,EInt) => EGraph(EInt), deleteEdge: (EGraph(EInt),EInt) => EGraph(EInt), mergeGraph: (EGraph(EInt),EGraph(EInt)) => EGraph(EInt), updateEdge: (EGraph(EInt),EInt,EInt) => EGraph(EInt)}
EInt -> {inc: (EInt) => EInt, dec: (EInt) => EInt, neg: (EInt) => EInt, plus: (EInt,EInt) => EInt, minus: (EInt,EInt) => EInt, times: (EInt,EInt) => EInt, divide: (EInt,EInt) => EInt, modular: (EInt,EInt) => EInt}
[End of Function map]

new eval size = (400,MemoryUsage(3200))
Last fitness increase: 1 generations ago.
------------
[0.132s]Generation 1
Best Result: (fitness: 10986.8, performance: 11065.0), Created by Init
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> #0
[O2: EInt] -> #0
*
[S0: EInt]{ seed: 1 ; iter: 23; seedExpr: divide(45, 23) }
[S1: EGraph(EInt)]{ seed: GraphValue(0,Vector()) ; iter: addEdge(#1, inc(#0)); seedExpr: GraphValue(0,Vector()) }
Best Individual Pattern: Vector(GraphValue(0,Vector()), 1, 1), Vector(GraphValue(2,Vector((0,1,2))), 23, 23), Vector(GraphValue(4,Vector((0,1,2), (2,3,24))), 23, 23), Vector(GraphValue(6,Vector((0,1,2), (2,3,24), (4,5,24))), 23, 23), Vector(GraphValue(8,Vector((0,1,2), (2,3,24), (4,5,24), (6,7,24))), 23, 23), Vector(GraphValue(10,Vector((0,1,2), (2,3,24), (4,5,24), (6,7,24), (8,9,24))), 23, 23), Vector(GraphValue(12,Vector((0,1,2), (2,3,24), (4,5,24), (6,7,24), (8,9,24), (10,11,24))), 23, 23), ...
Average Size: 24.4688995215311
Average Fitness: 95.12858729105932
Fitness Variation: 902.3273112159096
Distribution: #0 -> 0.241, GraphValue(0,Vector()) -> 0.059, #1 -> 0.036, times -> 0.034, modular -> 0.034, neg -> 0.033, minus -> 0.033, plus -> 0.031, divide -> 0.031, inc -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 2 generations ago.
------------
[0.750s]Generation 2
Best Result: (fitness: 10986.8, performance: 11065.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> #0
[O2: EInt] -> #0
*
[S0: EInt]{ seed: 1 ; iter: 23; seedExpr: divide(45, 23) }
[S1: EGraph(EInt)]{ seed: GraphValue(0,Vector()) ; iter: addEdge(#1, inc(#0)); seedExpr: GraphValue(0,Vector()) }
Best Individual Pattern: Vector(GraphValue(0,Vector()), 1, 1), Vector(GraphValue(2,Vector((0,1,2))), 23, 23), Vector(GraphValue(4,Vector((0,1,2), (2,3,24))), 23, 23), Vector(GraphValue(6,Vector((0,1,2), (2,3,24), (4,5,24))), 23, 23), Vector(GraphValue(8,Vector((0,1,2), (2,3,24), (4,5,24), (6,7,24))), 23, 23), Vector(GraphValue(10,Vector((0,1,2), (2,3,24), (4,5,24), (6,7,24), (8,9,24))), 23, 23), Vector(GraphValue(12,Vector((0,1,2), (2,3,24), (4,5,24), (6,7,24), (8,9,24), (10,11,24))), 23, 23), ...
Average Size: 34.495215311004785
Average Fitness: 296.00441623563717
Fitness Variation: 1569.735861755497
Distribution: #0 -> 0.242, GraphValue(0,Vector()) -> 0.048, modular -> 0.037, divide -> 0.036, times -> 0.036, minus -> 0.035, neg -> 0.034, #1 -> 0.032, plus -> 0.031, dec -> 0.029
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[1.301s]Generation 3
Best Result: (fitness: 34544.1, performance: 100579.0), Created by Crossover
[O0: EGraph(EInt)] -> bridgeEdge(#1, #0, 31, #0)
[O1: EInt] -> plus(43, times(minus(40, #0), modular(12, modular(#0, #0))))
[O2: EInt] -> #0
*
[S0: EInt]{ seed: 17 ; iter: times(10, 7); seedExpr: dec(neg(minus(6, 24))) }
[S1: EGraph(EInt)]{ seed: GraphValue(0,Vector()) ; iter: bridgeEdge(addEdge(#1, 37), 33, neg(38), modular(inc(8), #0)); seedExpr: mergeGraph(growSelfLoop(GraphValue(0,Vector()), neg(34), 14), GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(0,Vector()), 66, 17), Vector(GraphValue(2,Vector((0,1,37), (1,0,9), (0,1,70))), 13, 70), Vector(GraphValue(4,Vector((0,1,37), (1,0,9), (2,3,37), (1,2,9), (2,3,70))), 13, 70), Vector(GraphValue(6,Vector((0,1,37), (1,0,9), (2,3,37), (1,2,9), (4,5,37), (3,4,9), (4,1,70))), 13, 70), Vector(GraphValue(8,Vector((0,1,37), (1,0,9), (2,3,37), (1,2,9), (4,5,37), (3,4,9), (6,7,37), (1,2,9), (6,7,70))), 13, 70), Vector(GraphValue(10,Vector((0,1,37), (1,0,9), (2,3,37), (1,2,9), (4,5,37), (3,4,9), (6,7,37), (1,2,9), (8,9,37), (3,2,9), (0,1,70))), 13, 70), Vector(GraphValue(12,Vector((0,1,37), (1,0,9), (2,3,37), (1,2,9), (4,5,37), (3,4,9), (6,7,37), (1,2,9), (8,9,37), (3,2,9), (10,11,37), (9,10,9), (10,7,70))), 13, 70), ...
Average Size: 38.35167464114833
Average Fitness: 998.0587770680563
Fitness Variation: 3167.1283082469313
Distribution: #0 -> 0.247, GraphValue(0,Vector()) -> 0.040, #1 -> 0.039, times -> 0.039, divide -> 0.037, minus -> 0.036, modular -> 0.035, neg -> 0.034, plus -> 0.031, dec -> 0.027
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[2.167s]Generation 4
Best Result: (fitness: 667652.5, performance: 1605010.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: -26 ; iter: #0; seedExpr: times(neg(modular(27, 2)), 26) }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, #0, modular(22, #0)), plus(divide(#0, #0), #0), #0, minus(#0, minus(#0, #0))); seedExpr: addNode(bridgeEdge(emptyGraph(), 28, dec(25), 38)) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(2,Vector((0,1,22), (1,0,-26))), 10, 39), Vector(GraphValue(3,Vector((0,1,22), (1,0,-26), (0,2,22), (2,1,-26))), 10, 39), Vector(GraphValue(4,Vector((0,1,22), (1,0,-26), (0,2,22), (2,1,-26), (1,3,22), (3,2,-26))), 10, 39), Vector(GraphValue(5,Vector((0,1,22), (1,0,-26), (0,2,22), (2,1,-26), (1,3,22), (3,2,-26), (2,4,22), (0,4,-26))), 10, 39), Vector(GraphValue(6,Vector((0,1,22), (1,0,-26), (0,2,22), (2,1,-26), (1,3,22), (3,2,-26), (2,4,22), (0,4,-26), (4,5,22), (5,4,-26))), 10, 39), Vector(GraphValue(7,Vector((0,1,22), (1,0,-26), (0,2,22), (2,1,-26), (1,3,22), (3,2,-26), (2,4,22), (0,4,-26), (4,5,22), (5,4,-26), (4,6,22), (3,2,-26))), 10, 39), ...
Average Size: 33.22727272727273
Average Fitness: 4360.939930353741
Fitness Variation: 32837.45280174007
Distribution: #0 -> 0.254, #1 -> 0.052, times -> 0.041, minus -> 0.040, divide -> 0.037, modular -> 0.037, neg -> 0.037, GraphValue(0,Vector()) -> 0.034, plus -> 0.031, dec -> 0.028
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 1 generations ago.
------------
[3.068s]Generation 5
Best Result: (fitness: 667652.5, performance: 1605010.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: -26 ; iter: #0; seedExpr: times(neg(modular(27, 2)), 26) }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, #0, modular(22, #0)), plus(divide(#0, #0), #0), #0, minus(#0, minus(#0, #0))); seedExpr: addNode(bridgeEdge(emptyGraph(), 28, dec(25), 38)) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(2,Vector((0,1,22), (1,0,-26))), 10, 39), Vector(GraphValue(3,Vector((0,1,22), (1,0,-26), (0,2,22), (2,1,-26))), 10, 39), Vector(GraphValue(4,Vector((0,1,22), (1,0,-26), (0,2,22), (2,1,-26), (1,3,22), (3,2,-26))), 10, 39), Vector(GraphValue(5,Vector((0,1,22), (1,0,-26), (0,2,22), (2,1,-26), (1,3,22), (3,2,-26), (2,4,22), (0,4,-26))), 10, 39), Vector(GraphValue(6,Vector((0,1,22), (1,0,-26), (0,2,22), (2,1,-26), (1,3,22), (3,2,-26), (2,4,22), (0,4,-26), (4,5,22), (5,4,-26))), 10, 39), Vector(GraphValue(7,Vector((0,1,22), (1,0,-26), (0,2,22), (2,1,-26), (1,3,22), (3,2,-26), (2,4,22), (0,4,-26), (4,5,22), (5,4,-26), (4,6,22), (3,2,-26))), 10, 39), ...
Average Size: 26.44736842105263
Average Fitness: 8916.349800709857
Fitness Variation: 38389.21582060891
Distribution: #0 -> 0.255, #1 -> 0.068, modular -> 0.051, minus -> 0.040, dec -> 0.035, GraphValue(0,Vector()) -> 0.035, times -> 0.034, divide -> 0.031, neg -> 0.028, plus -> 0.024
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 2 generations ago.
------------
[3.644s]Generation 6
Best Result: (fitness: 667652.5, performance: 1605010.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: -26 ; iter: #0; seedExpr: times(neg(modular(27, 2)), 26) }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, #0, modular(22, #0)), plus(divide(#0, #0), #0), #0, minus(#0, minus(#0, #0))); seedExpr: addNode(bridgeEdge(emptyGraph(), 28, dec(25), 38)) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(2,Vector((0,1,22), (1,0,-26))), 10, 39), Vector(GraphValue(3,Vector((0,1,22), (1,0,-26), (0,2,22), (2,1,-26))), 10, 39), Vector(GraphValue(4,Vector((0,1,22), (1,0,-26), (0,2,22), (2,1,-26), (1,3,22), (3,2,-26))), 10, 39), Vector(GraphValue(5,Vector((0,1,22), (1,0,-26), (0,2,22), (2,1,-26), (1,3,22), (3,2,-26), (2,4,22), (0,4,-26))), 10, 39), Vector(GraphValue(6,Vector((0,1,22), (1,0,-26), (0,2,22), (2,1,-26), (1,3,22), (3,2,-26), (2,4,22), (0,4,-26), (4,5,22), (5,4,-26))), 10, 39), Vector(GraphValue(7,Vector((0,1,22), (1,0,-26), (0,2,22), (2,1,-26), (1,3,22), (3,2,-26), (2,4,22), (0,4,-26), (4,5,22), (5,4,-26), (4,6,22), (3,2,-26))), 10, 39), ...
Average Size: 21.598086124401913
Average Fitness: 13456.290903403025
Fitness Variation: 47346.824909834184
Distribution: #0 -> 0.244, #1 -> 0.076, modular -> 0.046, dec -> 0.041, minus -> 0.039, inc -> 0.036, GraphValue(0,Vector()) -> 0.036, divide -> 0.033, neg -> 0.027, times -> 0.024
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 3 generations ago.
------------
[4.281s]Generation 7
Best Result: (fitness: 563872.1, performance: 1754134.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 130 ; iter: #0; seedExpr: times(inc(modular(4, minus(minus(33, 8), 34))), 26) }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, #0, modular(22, #0)), plus(divide(#0, #0), #0), #0, minus(#0, minus(#0, #0))); seedExpr: addNode(bridgeEdge(emptyGraph(), 28, dec(28), 38)) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(2,Vector((0,1,22), (1,0,130))), 10, 39), Vector(GraphValue(3,Vector((0,1,22), (1,0,130), (0,2,22), (2,1,130))), 10, 39), Vector(GraphValue(4,Vector((0,1,22), (1,0,130), (0,2,22), (2,1,130), (1,3,22), (3,2,130))), 10, 39), Vector(GraphValue(5,Vector((0,1,22), (1,0,130), (0,2,22), (2,1,130), (1,3,22), (3,2,130), (2,4,22), (1,0,130))), 10, 39), Vector(GraphValue(6,Vector((0,1,22), (1,0,130), (0,2,22), (2,1,130), (1,3,22), (3,2,130), (2,4,22), (1,0,130), (0,5,22), (5,4,130))), 10, 39), Vector(GraphValue(7,Vector((0,1,22), (1,0,130), (0,2,22), (2,1,130), (1,3,22), (3,2,130), (2,4,22), (1,0,130), (0,5,22), (5,4,130), (4,6,22), (5,4,130))), 10, 39), ...
Average Size: 18.985645933014354
Average Fitness: 29586.85245600912
Fitness Variation: 87183.7906129115
Distribution: #0 -> 0.258, #1 -> 0.082, inc -> 0.044, dec -> 0.043, minus -> 0.039, GraphValue(0,Vector()) -> 0.038, divide -> 0.034, modular -> 0.034, 23 -> 0.029, neg -> 0.025
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[5.319s]Generation 8
Best Result: (fitness: 2293699.1, performance: 4547961.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 23 ; iter: #0; seedExpr: 23 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, #0, modular(22, #0)), plus(divide(#0, #0), #0), #0, minus(#0, minus(#0, #0))); seedExpr: addNode(bridgeEdge(emptyGraph(), 28, dec(28), 38)) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(2,Vector((0,1,22), (0,1,23))), 10, 39), Vector(GraphValue(3,Vector((0,1,22), (0,1,23), (1,2,22), (0,2,23))), 10, 39), Vector(GraphValue(4,Vector((0,1,22), (0,1,23), (1,2,22), (0,2,23), (2,3,22), (0,3,23))), 10, 39), Vector(GraphValue(5,Vector((0,1,22), (0,1,23), (1,2,22), (0,2,23), (2,3,22), (0,3,23), (3,4,22), (4,3,23))), 10, 39), Vector(GraphValue(6,Vector((0,1,22), (0,1,23), (1,2,22), (0,2,23), (2,3,22), (0,3,23), (3,4,22), (4,3,23), (3,5,22), (0,5,23))), 10, 39), Vector(GraphValue(7,Vector((0,1,22), (0,1,23), (1,2,22), (0,2,23), (2,3,22), (0,3,23), (3,4,22), (4,3,23), (3,5,22), (0,5,23), (5,6,22), (3,2,23))), 10, 39), ...
Average Size: 24.002392344497608
Average Fitness: 94312.59646081812
Fitness Variation: 226879.5503436009
Distribution: #0 -> 0.269, #1 -> 0.064, minus -> 0.044, modular -> 0.041, GraphValue(0,Vector()) -> 0.035, inc -> 0.033, divide -> 0.029, dec -> 0.028, neg -> 0.025, 28 -> 0.022
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[6.931s]Generation 9
Best Result: (fitness: 2369704.2, performance: 4547961.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 23 ; iter: #0; seedExpr: 23 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, #0, modular(22, #0)), plus(divide(#0, #0), #0), #0, minus(#0, minus(#0, #0))); seedExpr: addNode(bridgeEdge(emptyGraph(), 28, 48, 38)) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(2,Vector((0,1,22), (0,1,23))), 10, 39), Vector(GraphValue(3,Vector((0,1,22), (0,1,23), (1,2,22), (0,2,23))), 10, 39), Vector(GraphValue(4,Vector((0,1,22), (0,1,23), (1,2,22), (0,2,23), (2,3,22), (0,3,23))), 10, 39), Vector(GraphValue(5,Vector((0,1,22), (0,1,23), (1,2,22), (0,2,23), (2,3,22), (0,3,23), (3,4,22), (4,3,23))), 10, 39), Vector(GraphValue(6,Vector((0,1,22), (0,1,23), (1,2,22), (0,2,23), (2,3,22), (0,3,23), (3,4,22), (4,3,23), (3,5,22), (0,5,23))), 10, 39), Vector(GraphValue(7,Vector((0,1,22), (0,1,23), (1,2,22), (0,2,23), (2,3,22), (0,3,23), (3,4,22), (4,3,23), (3,5,22), (0,5,23), (5,6,22), (3,2,23))), 10, 39), ...
Average Size: 31.708133971291865
Average Fitness: 237823.20702545057
Fitness Variation: 412165.96836578863
Distribution: #0 -> 0.290, minus -> 0.053, #1 -> 0.047, modular -> 0.046, 28 -> 0.034, divide -> 0.028, GraphValue(0,Vector()) -> 0.028, dec -> 0.027, bridgeEdge -> 0.026, inc -> 0.026
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[8.934s]Generation 10
Best Result: (fitness: 3491945.4, performance: 4716363.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, #0, modular(22, 47)), plus(divide(#0, #0), #0), #0, 40); seedExpr: addNode(bridgeEdge(emptyGraph(), 28, dec(25), 38)) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(2,Vector((0,1,22), (1,0,40))), 10, 39), Vector(GraphValue(3,Vector((0,1,22), (1,0,40), (0,2,22), (2,1,40))), 10, 39), Vector(GraphValue(4,Vector((0,1,22), (1,0,40), (0,2,22), (2,1,40), (1,3,22), (3,2,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,22), (1,0,40), (0,2,22), (2,1,40), (1,3,22), (3,2,40), (2,4,22), (3,2,40))), 10, 39), Vector(GraphValue(6,Vector((0,1,22), (1,0,40), (0,2,22), (2,1,40), (1,3,22), (3,2,40), (2,4,22), (3,2,40), (2,5,22), (5,4,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,22), (1,0,40), (0,2,22), (2,1,40), (1,3,22), (3,2,40), (2,4,22), (3,2,40), (2,5,22), (5,4,40), (4,6,22), (2,1,40))), 10, 39), ...
Average Size: 34.1267942583732
Average Fitness: 459287.2744250922
Fitness Variation: 592421.1942248561
Distribution: #0 -> 0.307, minus -> 0.057, 28 -> 0.044, #1 -> 0.043, modular -> 0.040, divide -> 0.036, 22 -> 0.033, dec -> 0.032, bridgeEdge -> 0.030, 38 -> 0.028
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[11.231s]Generation 11
Best Result: (fitness: 3560971.0, performance: 6257542.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 28
*
[S0: EInt]{ seed: 48 ; iter: #0; seedExpr: 48 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, dec(6), 21), plus(divide(#0, #0), #0), #0, minus(#0, minus(#0, #0))); seedExpr: addNode(bridgeEdge(emptyGraph(), 28, dec(28), 14)) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 28), Vector(GraphValue(2,Vector((0,1,21), (1,0,48))), 10, 28), Vector(GraphValue(3,Vector((0,1,21), (1,0,48), (1,2,21), (1,0,48))), 10, 28), Vector(GraphValue(4,Vector((0,1,21), (1,0,48), (1,2,21), (1,0,48), (2,3,21), (1,0,48))), 10, 28), Vector(GraphValue(5,Vector((0,1,21), (1,0,48), (1,2,21), (1,0,48), (2,3,21), (1,0,48), (1,4,21), (4,3,48))), 10, 28), Vector(GraphValue(6,Vector((0,1,21), (1,0,48), (1,2,21), (1,0,48), (2,3,21), (1,0,48), (1,4,21), (4,3,48), (0,5,21), (1,0,48))), 10, 28), Vector(GraphValue(7,Vector((0,1,21), (1,0,48), (1,2,21), (1,0,48), (2,3,21), (1,0,48), (1,4,21), (4,3,48), (0,5,21), (1,0,48), (5,6,21), (0,6,48))), 10, 28), ...
Average Size: 32.64114832535885
Average Fitness: 735497.9057895587
Fitness Variation: 774509.8440960139
Distribution: #0 -> 0.311, minus -> 0.057, 28 -> 0.050, #1 -> 0.045, divide -> 0.042, dec -> 0.037, modular -> 0.035, 22 -> 0.035, bridgeEdge -> 0.033, 38 -> 0.030
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[13.559s]Generation 12
Best Result: (fitness: 3983008.5, performance: 6257542.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 28
*
[S0: EInt]{ seed: 48 ; iter: #0; seedExpr: 48 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, dec(6), 21), plus(divide(#0, #0), #0), #0, minus(#0, minus(#0, #0))); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 28), Vector(GraphValue(2,Vector((0,1,21), (1,0,48))), 10, 28), Vector(GraphValue(3,Vector((0,1,21), (1,0,48), (1,2,21), (1,0,48))), 10, 28), Vector(GraphValue(4,Vector((0,1,21), (1,0,48), (1,2,21), (1,0,48), (2,3,21), (1,0,48))), 10, 28), Vector(GraphValue(5,Vector((0,1,21), (1,0,48), (1,2,21), (1,0,48), (2,3,21), (1,0,48), (1,4,21), (4,3,48))), 10, 28), Vector(GraphValue(6,Vector((0,1,21), (1,0,48), (1,2,21), (1,0,48), (2,3,21), (1,0,48), (1,4,21), (4,3,48), (0,5,21), (1,0,48))), 10, 28), Vector(GraphValue(7,Vector((0,1,21), (1,0,48), (1,2,21), (1,0,48), (2,3,21), (1,0,48), (1,4,21), (4,3,48), (0,5,21), (1,0,48), (5,6,21), (0,6,48))), 10, 28), ...
Average Size: 32.782296650717704
Average Fitness: 1081528.5450887042
Fitness Variation: 935113.4314437887
Distribution: #0 -> 0.323, minus -> 0.060, 28 -> 0.051, #1 -> 0.045, divide -> 0.044, modular -> 0.034, 22 -> 0.034, dec -> 0.033, bridgeEdge -> 0.033, emptyGraph -> 0.029
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[16.115s]Generation 13
Best Result: (fitness: 4054512.5, performance: 6369879.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 28
*
[S0: EInt]{ seed: 48 ; iter: #0; seedExpr: 48 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, dec(6), 21), plus(divide(#0, #0), #0), #0, minus(#0, minus(21, #0))); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 28), Vector(GraphValue(2,Vector((0,1,21), (1,0,75))), 10, 28), Vector(GraphValue(3,Vector((0,1,21), (1,0,75), (1,2,21), (1,0,75))), 10, 28), Vector(GraphValue(4,Vector((0,1,21), (1,0,75), (1,2,21), (1,0,75), (2,3,21), (1,0,75))), 10, 28), Vector(GraphValue(5,Vector((0,1,21), (1,0,75), (1,2,21), (1,0,75), (2,3,21), (1,0,75), (1,4,21), (4,3,75))), 10, 28), Vector(GraphValue(6,Vector((0,1,21), (1,0,75), (1,2,21), (1,0,75), (2,3,21), (1,0,75), (1,4,21), (4,3,75), (0,5,21), (1,0,75))), 10, 28), Vector(GraphValue(7,Vector((0,1,21), (1,0,75), (1,2,21), (1,0,75), (2,3,21), (1,0,75), (1,4,21), (4,3,75), (0,5,21), (1,0,75), (5,6,21), (0,6,75))), 10, 28), ...
Average Size: 31.385167464114833
Average Fitness: 1396154.8414695412
Fitness Variation: 1125710.2796908275
Distribution: #0 -> 0.338, minus -> 0.060, 28 -> 0.053, #1 -> 0.047, divide -> 0.043, 22 -> 0.035, modular -> 0.035, bridgeEdge -> 0.035, emptyGraph -> 0.031, dec -> 0.030
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[18.741s]Generation 14
Best Result: (fitness: 4831554.4, performance: 6707675.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 25 ; iter: #0; seedExpr: 25 }
[S1: EGraph(EInt)]{ seed: GraphValue(2,Vector()) ; iter: bridgeEdge(growEdge(#1, 2, modular(22, #0)), plus(divide(#0, #0), #0), #0, 28); seedExpr: addNode(addNode(bridgeEdge(emptyGraph(), 28, dec(28), 38))) }
Best Individual Pattern: Vector(GraphValue(2,Vector()), 10, 39), Vector(GraphValue(3,Vector((0,2,22), (2,1,28))), 10, 39), Vector(GraphValue(4,Vector((0,2,22), (2,1,28), (2,3,22), (2,1,28))), 10, 39), Vector(GraphValue(5,Vector((0,2,22), (2,1,28), (2,3,22), (2,1,28), (2,4,22), (1,0,28))), 10, 39), Vector(GraphValue(6,Vector((0,2,22), (2,1,28), (2,3,22), (2,1,28), (2,4,22), (1,0,28), (2,5,22), (2,1,28))), 10, 39), Vector(GraphValue(7,Vector((0,2,22), (2,1,28), (2,3,22), (2,1,28), (2,4,22), (1,0,28), (2,5,22), (2,1,28), (2,6,22), (5,4,28))), 10, 39), Vector(GraphValue(8,Vector((0,2,22), (2,1,28), (2,3,22), (2,1,28), (2,4,22), (1,0,28), (2,5,22), (2,1,28), (2,6,22), (5,4,28), (2,7,22), (2,1,28))), 10, 39), ...
Average Size: 29.483253588516746
Average Fitness: 1620092.367397132
Fitness Variation: 1311850.066799437
Distribution: #0 -> 0.342, 28 -> 0.058, minus -> 0.053, #1 -> 0.051, divide -> 0.044, 22 -> 0.037, bridgeEdge -> 0.036, modular -> 0.033, plus -> 0.032, emptyGraph -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[21.160s]Generation 15
Best Result: (fitness: 5294368.3, performance: 6257542.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 28
*
[S0: EInt]{ seed: 48 ; iter: #0; seedExpr: 48 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, dec(6), 21), plus(divide(#0, #0), #0), #0, #0); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 28), Vector(GraphValue(2,Vector((0,1,21), (1,0,48))), 10, 28), Vector(GraphValue(3,Vector((0,1,21), (1,0,48), (1,2,21), (1,0,48))), 10, 28), Vector(GraphValue(4,Vector((0,1,21), (1,0,48), (1,2,21), (1,0,48), (2,3,21), (1,0,48))), 10, 28), Vector(GraphValue(5,Vector((0,1,21), (1,0,48), (1,2,21), (1,0,48), (2,3,21), (1,0,48), (1,4,21), (4,3,48))), 10, 28), Vector(GraphValue(6,Vector((0,1,21), (1,0,48), (1,2,21), (1,0,48), (2,3,21), (1,0,48), (1,4,21), (4,3,48), (0,5,21), (1,0,48))), 10, 28), Vector(GraphValue(7,Vector((0,1,21), (1,0,48), (1,2,21), (1,0,48), (2,3,21), (1,0,48), (1,4,21), (4,3,48), (0,5,21), (1,0,48), (5,6,21), (0,6,48))), 10, 28), ...
Average Size: 28.023923444976077
Average Fitness: 1789987.416910475
Fitness Variation: 1516142.6117499794
Distribution: #0 -> 0.331, 28 -> 0.057, #1 -> 0.053, minus -> 0.046, divide -> 0.044, 22 -> 0.036, plus -> 0.036, bridgeEdge -> 0.035, dec -> 0.034, modular -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[23.687s]Generation 16
Best Result: (fitness: 5586173.6, performance: 8667319.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, #0, modular(22, 47)), plus(divide(neg(39), #0), #0), #0, 40); seedExpr: addNode(bridgeEdge(emptyGraph(), 28, dec(25), plus(0, 17))) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(2,Vector((0,1,22), (1,0,40))), 10, 39), Vector(GraphValue(3,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40))), 10, 39), Vector(GraphValue(4,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40))), 10, 39), Vector(GraphValue(6,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40), (2,5,22), (3,4,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40), (2,5,22), (3,4,40), (4,6,22), (0,1,40))), 10, 39), ...
Average Size: 27.066985645933013
Average Fitness: 2013110.2228053673
Fitness Variation: 1700528.9016185415
Distribution: #0 -> 0.307, #1 -> 0.055, 28 -> 0.053, divide -> 0.045, minus -> 0.041, dec -> 0.038, plus -> 0.036, 22 -> 0.034, bridgeEdge -> 0.034, modular -> 0.029
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[26.278s]Generation 17
Best Result: (fitness: 5965106.6, performance: 8667319.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, #0, modular(22, 47)), plus(divide(neg(39), #0), #0), #0, 40); seedExpr: addNode(bridgeEdge(emptyGraph(), 28, dec(25), 25)) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(2,Vector((0,1,22), (1,0,40))), 10, 39), Vector(GraphValue(3,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40))), 10, 39), Vector(GraphValue(4,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40))), 10, 39), Vector(GraphValue(6,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40), (2,5,22), (3,4,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40), (2,5,22), (3,4,40), (4,6,22), (0,1,40))), 10, 39), ...
Average Size: 26.04066985645933
Average Fitness: 2286531.9329069084
Fitness Variation: 1936045.3797338556
Distribution: #0 -> 0.307, #1 -> 0.059, 28 -> 0.056, divide -> 0.046, dec -> 0.041, plus -> 0.038, minus -> 0.034, bridgeEdge -> 0.033, 22 -> 0.032, growEdge -> 0.030
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[29.226s]Generation 18
Best Result: (fitness: 6446195.4, performance: 8667319.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, #0, 22), plus(divide(neg(39), #0), #0), #0, 40); seedExpr: addNode(bridgeEdge(emptyGraph(), 28, dec(25), plus(0, 17))) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(2,Vector((0,1,22), (1,0,40))), 10, 39), Vector(GraphValue(3,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40))), 10, 39), Vector(GraphValue(4,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40))), 10, 39), Vector(GraphValue(6,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40), (2,5,22), (3,4,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40), (2,5,22), (3,4,40), (4,6,22), (0,1,40))), 10, 39), ...
Average Size: 25.574162679425836
Average Fitness: 2389616.2801501756
Fitness Variation: 2124092.6696425257
Distribution: #0 -> 0.290, #1 -> 0.059, 28 -> 0.052, divide -> 0.048, dec -> 0.045, plus -> 0.040, bridgeEdge -> 0.032, 22 -> 0.031, minus -> 0.030, 6 -> 0.030
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[32.436s]Generation 19
Best Result: (fitness: 6818498.9, performance: 8667319.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, #0, #0), plus(divide(neg(39), #0), #0), #0, 40); seedExpr: addNode(bridgeEdge(emptyGraph(), 28, dec(25), 25)) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(2,Vector((0,1,22), (1,0,40))), 10, 39), Vector(GraphValue(3,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40))), 10, 39), Vector(GraphValue(4,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40))), 10, 39), Vector(GraphValue(6,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40), (2,5,22), (3,4,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40), (2,5,22), (3,4,40), (4,6,22), (0,1,40))), 10, 39), ...
Average Size: 25.52153110047847
Average Fitness: 2942802.3289041943
Fitness Variation: 2240207.20841282
Distribution: #0 -> 0.265, #1 -> 0.059, 28 -> 0.053, divide -> 0.047, dec -> 0.046, plus -> 0.039, 22 -> 0.037, bridgeEdge -> 0.034, 39 -> 0.034, growEdge -> 0.030
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 1 generations ago.
------------
[35.614s]Generation 20
Best Result: (fitness: 6532078.2, performance: 8667319.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, #0, modular(22, 47)), plus(divide(neg(39), #0), #0), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(2,Vector((0,1,22), (1,0,40))), 10, 39), Vector(GraphValue(3,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40))), 10, 39), Vector(GraphValue(4,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40))), 10, 39), Vector(GraphValue(6,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40), (2,5,22), (3,4,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40), (2,5,22), (3,4,40), (4,6,22), (0,1,40))), 10, 39), ...
Average Size: 24.794258373205743
Average Fitness: 3085838.9619156914
Fitness Variation: 2408735.814790629
Distribution: #0 -> 0.259, #1 -> 0.062, 28 -> 0.051, divide -> 0.049, dec -> 0.043, plus -> 0.040, 39 -> 0.038, 22 -> 0.037, bridgeEdge -> 0.033, growEdge -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[38.591s]Generation 21
Best Result: (fitness: 7112980.3, performance: 8667319.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, #0, modular(22, 47)), dec(#0), #0, 40); seedExpr: addNode(bridgeEdge(emptyGraph(), 28, dec(25), plus(0, 17))) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(2,Vector((0,1,22), (1,0,40))), 10, 39), Vector(GraphValue(3,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40))), 10, 39), Vector(GraphValue(4,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40))), 10, 39), Vector(GraphValue(6,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40), (2,5,22), (3,4,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,22), (1,0,40), (0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40), (2,5,22), (3,4,40), (4,6,22), (0,1,40))), 10, 39), ...
Average Size: 24.50956937799043
Average Fitness: 3140163.36059058
Fitness Variation: 2568257.5107052275
Distribution: #0 -> 0.254, #1 -> 0.062, divide -> 0.053, 39 -> 0.044, 28 -> 0.044, plus -> 0.040, dec -> 0.039, 22 -> 0.036, bridgeEdge -> 0.033, growEdge -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[41.744s]Generation 22
Best Result: (fitness: 7447239.9, performance: 8802073.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, #0, 10), plus(divide(neg(39), #0), #0), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(2,Vector((0,1,10), (1,0,40))), 10, 39), Vector(GraphValue(3,Vector((0,1,10), (1,0,40), (0,2,10), (0,1,40))), 10, 39), Vector(GraphValue(4,Vector((0,1,10), (1,0,40), (0,2,10), (0,1,40), (1,3,10), (1,2,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,10), (1,0,40), (0,2,10), (0,1,40), (1,3,10), (1,2,40), (2,4,10), (1,2,40))), 10, 39), Vector(GraphValue(6,Vector((0,1,10), (1,0,40), (0,2,10), (0,1,40), (1,3,10), (1,2,40), (2,4,10), (1,2,40), (2,5,10), (3,4,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,10), (1,0,40), (0,2,10), (0,1,40), (1,3,10), (1,2,40), (2,4,10), (1,2,40), (2,5,10), (3,4,40), (4,6,10), (0,1,40))), 10, 39), ...
Average Size: 25.05263157894737
Average Fitness: 3314221.5739308526
Fitness Variation: 2688307.8754142704
Distribution: #0 -> 0.240, #1 -> 0.060, 39 -> 0.059, divide -> 0.052, neg -> 0.043, plus -> 0.039, 28 -> 0.036, dec -> 0.036, 22 -> 0.035, bridgeEdge -> 0.033
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[45.192s]Generation 23
Best Result: (fitness: 7721397.5, performance: 8525665.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(2,Vector()) ; iter: bridgeEdge(growEdge(#1, #0, modular(22, 47)), dec(#0), #0, 40); seedExpr: addNode(addNode(GraphValue(0,Vector()))) }
Best Individual Pattern: Vector(GraphValue(2,Vector()), 10, 39), Vector(GraphValue(3,Vector((0,2,22), (0,1,40))), 10, 39), Vector(GraphValue(4,Vector((0,2,22), (0,1,40), (1,3,22), (1,2,40))), 10, 39), Vector(GraphValue(5,Vector((0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40))), 10, 39), Vector(GraphValue(6,Vector((0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40), (2,5,22), (3,4,40))), 10, 39), Vector(GraphValue(7,Vector((0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40), (2,5,22), (3,4,40), (4,6,22), (0,1,40))), 10, 39), Vector(GraphValue(8,Vector((0,2,22), (0,1,40), (1,3,22), (1,2,40), (2,4,22), (1,2,40), (2,5,22), (3,4,40), (4,6,22), (0,1,40), (1,7,22), (5,6,40))), 10, 39), ...
Average Size: 25.4688995215311
Average Fitness: 3397257.317825457
Fitness Variation: 2854938.687494965
Distribution: #0 -> 0.220, 39 -> 0.076, #1 -> 0.059, neg -> 0.054, divide -> 0.051, 22 -> 0.038, plus -> 0.038, bridgeEdge -> 0.034, 25 -> 0.033, modular -> 0.030
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[48.652s]Generation 24
Best Result: (fitness: 7977727.8, performance: 8831009.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, #0, modular(6, 47)), 21, #0, 40); seedExpr: addNode(bridgeEdge(GraphValue(0,Vector()), 11, 6, 43)) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(2,Vector((0,1,6), (1,0,40))), 10, 39), Vector(GraphValue(3,Vector((0,1,6), (1,0,40), (0,2,6), (0,1,40))), 10, 39), Vector(GraphValue(4,Vector((0,1,6), (1,0,40), (0,2,6), (0,1,40), (1,3,6), (1,2,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,6), (1,0,40), (0,2,6), (0,1,40), (1,3,6), (1,2,40), (2,4,6), (1,2,40))), 10, 39), Vector(GraphValue(6,Vector((0,1,6), (1,0,40), (0,2,6), (0,1,40), (1,3,6), (1,2,40), (2,4,6), (1,2,40), (2,5,6), (3,4,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,6), (1,0,40), (0,2,6), (0,1,40), (1,3,6), (1,2,40), (2,4,6), (1,2,40), (2,5,6), (3,4,40), (4,6,6), (0,1,40))), 10, 39), ...
Average Size: 25.25598086124402
Average Fitness: 3527539.49716379
Fitness Variation: 2984504.295371531
Distribution: #0 -> 0.208, 39 -> 0.089, neg -> 0.066, #1 -> 0.060, divide -> 0.051, 22 -> 0.039, plus -> 0.037, bridgeEdge -> 0.034, 25 -> 0.031, 40 -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 1 generations ago.
------------
[52.372s]Generation 25
Best Result: (fitness: 7977727.8, performance: 8831009.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, #0, modular(6, 47)), 21, #0, 40); seedExpr: addNode(bridgeEdge(GraphValue(0,Vector()), 11, 6, 43)) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(2,Vector((0,1,6), (1,0,40))), 10, 39), Vector(GraphValue(3,Vector((0,1,6), (1,0,40), (0,2,6), (0,1,40))), 10, 39), Vector(GraphValue(4,Vector((0,1,6), (1,0,40), (0,2,6), (0,1,40), (1,3,6), (1,2,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,6), (1,0,40), (0,2,6), (0,1,40), (1,3,6), (1,2,40), (2,4,6), (1,2,40))), 10, 39), Vector(GraphValue(6,Vector((0,1,6), (1,0,40), (0,2,6), (0,1,40), (1,3,6), (1,2,40), (2,4,6), (1,2,40), (2,5,6), (3,4,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,6), (1,0,40), (0,2,6), (0,1,40), (1,3,6), (1,2,40), (2,4,6), (1,2,40), (2,5,6), (3,4,40), (4,6,6), (0,1,40))), 10, 39), ...
Average Size: 24.832535885167463
Average Fitness: 3837235.6634859364
Fitness Variation: 3132950.5038413275
Distribution: #0 -> 0.209, 39 -> 0.091, neg -> 0.066, #1 -> 0.061, divide -> 0.046, 22 -> 0.041, plus -> 0.037, bridgeEdge -> 0.035, 40 -> 0.035, growEdge -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[56.049s]Generation 26
Best Result: (fitness: 8266757.9, performance: 8831009.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(#1, #0, modular(6, 47)), 21, #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(2,Vector((0,1,6), (1,0,40))), 10, 39), Vector(GraphValue(3,Vector((0,1,6), (1,0,40), (0,2,6), (0,1,40))), 10, 39), Vector(GraphValue(4,Vector((0,1,6), (1,0,40), (0,2,6), (0,1,40), (1,3,6), (1,2,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,6), (1,0,40), (0,2,6), (0,1,40), (1,3,6), (1,2,40), (2,4,6), (1,2,40))), 10, 39), Vector(GraphValue(6,Vector((0,1,6), (1,0,40), (0,2,6), (0,1,40), (1,3,6), (1,2,40), (2,4,6), (1,2,40), (2,5,6), (3,4,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,6), (1,0,40), (0,2,6), (0,1,40), (1,3,6), (1,2,40), (2,4,6), (1,2,40), (2,5,6), (3,4,40), (4,6,6), (0,1,40))), 10, 39), ...
Average Size: 23.523923444976077
Average Fitness: 4196951.79077754
Fitness Variation: 3284951.618493748
Distribution: #0 -> 0.210, 39 -> 0.086, #1 -> 0.068, neg -> 0.063, 22 -> 0.046, divide -> 0.039, 40 -> 0.039, plus -> 0.037, bridgeEdge -> 0.035, growEdge -> 0.034
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[59.720s]Generation 27
Best Result: (fitness: 8903453.3, performance: 11813862.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, #0, modular(22, 47)), #0, modular(6, 47)), 21, #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(3,Vector((0,1,22), (0,2,6), (0,1,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,22), (0,2,6), (0,1,40), (1,3,22), (2,4,6), (1,2,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,22), (0,2,6), (0,1,40), (1,3,22), (2,4,6), (1,2,40), (2,5,22), (4,6,6), (0,1,40))), 10, 39), Vector(GraphValue(9,Vector((0,1,22), (0,2,6), (0,1,40), (1,3,22), (2,4,6), (1,2,40), (2,5,22), (4,6,6), (0,1,40), (1,7,22), (6,8,6), (3,4,40))), 10, 39), Vector(GraphValue(11,Vector((0,1,22), (0,2,6), (0,1,40), (1,3,22), (2,4,6), (1,2,40), (2,5,22), (4,6,6), (0,1,40), (1,7,22), (6,8,6), (3,4,40), (4,9,22), (2,10,6), (10,0,40))), 10, 39), Vector(GraphValue(13,Vector((0,1,22), (0,2,6), (0,1,40), (1,3,22), (2,4,6), (1,2,40), (2,5,22), (4,6,6), (0,1,40), (1,7,22), (6,8,6), (3,4,40), (4,9,22), (2,10,6), (10,0,40), (0,11,22), (10,12,6), (8,9,40))), 10, 39), ...
Average Size: 22.476076555023923
Average Fitness: 4398429.39806575
Fitness Variation: 3496295.607141498
Distribution: #0 -> 0.207, #1 -> 0.073, 39 -> 0.068, 22 -> 0.052, neg -> 0.045, 40 -> 0.042, 47 -> 0.038, growEdge -> 0.036, GraphValue(0,Vector()) -> 0.036, bridgeEdge -> 0.034
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[63.311s]Generation 28
Best Result: (fitness: 9488686.4, performance: 11813862.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, #0, #0), #0, modular(22, 8)), dec(#0), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(3,Vector((0,1,22), (0,2,6), (0,1,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,22), (0,2,6), (0,1,40), (1,3,22), (2,4,6), (1,2,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,22), (0,2,6), (0,1,40), (1,3,22), (2,4,6), (1,2,40), (2,5,22), (4,6,6), (0,1,40))), 10, 39), Vector(GraphValue(9,Vector((0,1,22), (0,2,6), (0,1,40), (1,3,22), (2,4,6), (1,2,40), (2,5,22), (4,6,6), (0,1,40), (1,7,22), (6,8,6), (3,4,40))), 10, 39), Vector(GraphValue(11,Vector((0,1,22), (0,2,6), (0,1,40), (1,3,22), (2,4,6), (1,2,40), (2,5,22), (4,6,6), (0,1,40), (1,7,22), (6,8,6), (3,4,40), (4,9,22), (2,10,6), (10,0,40))), 10, 39), Vector(GraphValue(13,Vector((0,1,22), (0,2,6), (0,1,40), (1,3,22), (2,4,6), (1,2,40), (2,5,22), (4,6,6), (0,1,40), (1,7,22), (6,8,6), (3,4,40), (4,9,22), (2,10,6), (10,0,40), (0,11,22), (10,12,6), (8,9,40))), 10, 39), ...
Average Size: 21.49043062200957
Average Fitness: 4313186.043134481
Fitness Variation: 3666708.081003457
Distribution: #0 -> 0.206, #1 -> 0.079, 22 -> 0.059, 47 -> 0.056, modular -> 0.045, 39 -> 0.045, GraphValue(0,Vector()) -> 0.043, 40 -> 0.041, growEdge -> 0.040, bridgeEdge -> 0.036
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 1 generations ago.
------------
[66.839s]Generation 29
Best Result: (fitness: 9488686.4, performance: 11813862.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, #0, #0), #0, modular(#0, 8)), dec(#0), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(3,Vector((0,1,22), (0,2,6), (0,1,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,22), (0,2,6), (0,1,40), (1,3,22), (2,4,6), (1,2,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,22), (0,2,6), (0,1,40), (1,3,22), (2,4,6), (1,2,40), (2,5,22), (4,6,6), (0,1,40))), 10, 39), Vector(GraphValue(9,Vector((0,1,22), (0,2,6), (0,1,40), (1,3,22), (2,4,6), (1,2,40), (2,5,22), (4,6,6), (0,1,40), (1,7,22), (6,8,6), (3,4,40))), 10, 39), Vector(GraphValue(11,Vector((0,1,22), (0,2,6), (0,1,40), (1,3,22), (2,4,6), (1,2,40), (2,5,22), (4,6,6), (0,1,40), (1,7,22), (6,8,6), (3,4,40), (4,9,22), (2,10,6), (10,0,40))), 10, 39), Vector(GraphValue(13,Vector((0,1,22), (0,2,6), (0,1,40), (1,3,22), (2,4,6), (1,2,40), (2,5,22), (4,6,6), (0,1,40), (1,7,22), (6,8,6), (3,4,40), (4,9,22), (2,10,6), (10,0,40), (0,11,22), (10,12,6), (8,9,40))), 10, 39), ...
Average Size: 20.741626794258373
Average Fitness: 4619537.946487499
Fitness Variation: 3760522.928941893
Distribution: #0 -> 0.203, #1 -> 0.085, 22 -> 0.059, 47 -> 0.057, modular -> 0.052, GraphValue(0,Vector()) -> 0.050, 6 -> 0.046, 40 -> 0.044, growEdge -> 0.044, bridgeEdge -> 0.039
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[69.640s]Generation 30
Best Result: (fitness: 10442928.1, performance: 11835857.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, #0, #0), #0, 39), dec(#0), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(3,Vector((0,1,22), (0,2,39), (0,1,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,22), (0,2,39), (0,1,40), (1,3,22), (2,4,39), (1,2,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,22), (0,2,39), (0,1,40), (1,3,22), (2,4,39), (1,2,40), (2,5,22), (4,6,39), (0,1,40))), 10, 39), Vector(GraphValue(9,Vector((0,1,22), (0,2,39), (0,1,40), (1,3,22), (2,4,39), (1,2,40), (2,5,22), (4,6,39), (0,1,40), (1,7,22), (6,8,39), (3,4,40))), 10, 39), Vector(GraphValue(11,Vector((0,1,22), (0,2,39), (0,1,40), (1,3,22), (2,4,39), (1,2,40), (2,5,22), (4,6,39), (0,1,40), (1,7,22), (6,8,39), (3,4,40), (4,9,22), (2,10,39), (10,0,40))), 10, 39), Vector(GraphValue(13,Vector((0,1,22), (0,2,39), (0,1,40), (1,3,22), (2,4,39), (1,2,40), (2,5,22), (4,6,39), (0,1,40), (1,7,22), (6,8,39), (3,4,40), (4,9,22), (2,10,39), (10,0,40), (0,11,22), (10,12,39), (8,9,40))), 10, 39), ...
Average Size: 19.497607655502392
Average Fitness: 4701546.130260479
Fitness Variation: 3863181.8712481405
Distribution: #0 -> 0.207, #1 -> 0.092, 6 -> 0.060, GraphValue(0,Vector()) -> 0.058, 22 -> 0.054, modular -> 0.051, 47 -> 0.050, growEdge -> 0.049, 40 -> 0.048, bridgeEdge -> 0.041
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 1 generations ago.
------------
[71.916s]Generation 31
Best Result: (fitness: 10442928.1, performance: 11835857.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, #0, #0), #0, 39), dec(#0), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(3,Vector((0,1,22), (0,2,39), (0,1,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,22), (0,2,39), (0,1,40), (1,3,22), (2,4,39), (1,2,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,22), (0,2,39), (0,1,40), (1,3,22), (2,4,39), (1,2,40), (2,5,22), (4,6,39), (0,1,40))), 10, 39), Vector(GraphValue(9,Vector((0,1,22), (0,2,39), (0,1,40), (1,3,22), (2,4,39), (1,2,40), (2,5,22), (4,6,39), (0,1,40), (1,7,22), (6,8,39), (3,4,40))), 10, 39), Vector(GraphValue(11,Vector((0,1,22), (0,2,39), (0,1,40), (1,3,22), (2,4,39), (1,2,40), (2,5,22), (4,6,39), (0,1,40), (1,7,22), (6,8,39), (3,4,40), (4,9,22), (2,10,39), (10,0,40))), 10, 39), Vector(GraphValue(13,Vector((0,1,22), (0,2,39), (0,1,40), (1,3,22), (2,4,39), (1,2,40), (2,5,22), (4,6,39), (0,1,40), (1,7,22), (6,8,39), (3,4,40), (4,9,22), (2,10,39), (10,0,40), (0,11,22), (10,12,39), (8,9,40))), 10, 39), ...
Average Size: 18.75358851674641
Average Fitness: 4713785.207857941
Fitness Variation: 3968704.575192165
Distribution: #0 -> 0.215, #1 -> 0.096, 6 -> 0.062, GraphValue(0,Vector()) -> 0.061, growEdge -> 0.051, 40 -> 0.050, 22 -> 0.049, modular -> 0.046, 47 -> 0.041, bridgeEdge -> 0.039
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 2 generations ago.
------------
[75.132s]Generation 32
Best Result: (fitness: 10442928.1, performance: 11835857.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, #0, #0), #0, 39), dec(#0), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(3,Vector((0,1,22), (0,2,39), (0,1,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,22), (0,2,39), (0,1,40), (1,3,22), (2,4,39), (1,2,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,22), (0,2,39), (0,1,40), (1,3,22), (2,4,39), (1,2,40), (2,5,22), (4,6,39), (0,1,40))), 10, 39), Vector(GraphValue(9,Vector((0,1,22), (0,2,39), (0,1,40), (1,3,22), (2,4,39), (1,2,40), (2,5,22), (4,6,39), (0,1,40), (1,7,22), (6,8,39), (3,4,40))), 10, 39), Vector(GraphValue(11,Vector((0,1,22), (0,2,39), (0,1,40), (1,3,22), (2,4,39), (1,2,40), (2,5,22), (4,6,39), (0,1,40), (1,7,22), (6,8,39), (3,4,40), (4,9,22), (2,10,39), (10,0,40))), 10, 39), Vector(GraphValue(13,Vector((0,1,22), (0,2,39), (0,1,40), (1,3,22), (2,4,39), (1,2,40), (2,5,22), (4,6,39), (0,1,40), (1,7,22), (6,8,39), (3,4,40), (4,9,22), (2,10,39), (10,0,40), (0,11,22), (10,12,39), (8,9,40))), 10, 39), ...
Average Size: 18.44736842105263
Average Fitness: 5142188.729293072
Fitness Variation: 3977020.744718408
Distribution: #0 -> 0.230, #1 -> 0.102, GraphValue(0,Vector()) -> 0.064, growEdge -> 0.057, 6 -> 0.054, 40 -> 0.052, 22 -> 0.050, modular -> 0.041, 21 -> 0.039, addNode -> 0.038
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[78.344s]Generation 33
Best Result: (fitness: 10938222.0, performance: 11991582.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 27
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, #0, 10), #0, 26), 21, #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 27), Vector(GraphValue(3,Vector((0,1,10), (0,2,26), (0,1,40))), 10, 27), Vector(GraphValue(5,Vector((0,1,10), (0,2,26), (0,1,40), (1,3,10), (2,4,26), (1,2,40))), 10, 27), Vector(GraphValue(7,Vector((0,1,10), (0,2,26), (0,1,40), (1,3,10), (2,4,26), (1,2,40), (2,5,10), (4,6,26), (0,1,40))), 10, 27), Vector(GraphValue(9,Vector((0,1,10), (0,2,26), (0,1,40), (1,3,10), (2,4,26), (1,2,40), (2,5,10), (4,6,26), (0,1,40), (1,7,10), (6,8,26), (3,4,40))), 10, 27), Vector(GraphValue(11,Vector((0,1,10), (0,2,26), (0,1,40), (1,3,10), (2,4,26), (1,2,40), (2,5,10), (4,6,26), (0,1,40), (1,7,10), (6,8,26), (3,4,40), (4,9,10), (2,10,26), (10,0,40))), 10, 27), Vector(GraphValue(13,Vector((0,1,10), (0,2,26), (0,1,40), (1,3,10), (2,4,26), (1,2,40), (2,5,10), (4,6,26), (0,1,40), (1,7,10), (6,8,26), (3,4,40), (4,9,10), (2,10,26), (10,0,40), (0,11,10), (10,12,26), (8,9,40))), 10, 27), ...
Average Size: 18.188995215311003
Average Fitness: 4769113.129842295
Fitness Variation: 4182165.0798794054
Distribution: #0 -> 0.257, #1 -> 0.105, growEdge -> 0.064, GraphValue(0,Vector()) -> 0.063, 40 -> 0.052, 22 -> 0.049, 6 -> 0.045, addNode -> 0.041, 21 -> 0.035, 39 -> 0.034
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 1 generations ago.
------------
[80.880s]Generation 34
Best Result: (fitness: 10938222.0, performance: 11991582.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 27
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, #0, 10), #0, 26), 21, #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 27), Vector(GraphValue(3,Vector((0,1,10), (0,2,26), (0,1,40))), 10, 27), Vector(GraphValue(5,Vector((0,1,10), (0,2,26), (0,1,40), (1,3,10), (2,4,26), (1,2,40))), 10, 27), Vector(GraphValue(7,Vector((0,1,10), (0,2,26), (0,1,40), (1,3,10), (2,4,26), (1,2,40), (2,5,10), (4,6,26), (0,1,40))), 10, 27), Vector(GraphValue(9,Vector((0,1,10), (0,2,26), (0,1,40), (1,3,10), (2,4,26), (1,2,40), (2,5,10), (4,6,26), (0,1,40), (1,7,10), (6,8,26), (3,4,40))), 10, 27), Vector(GraphValue(11,Vector((0,1,10), (0,2,26), (0,1,40), (1,3,10), (2,4,26), (1,2,40), (2,5,10), (4,6,26), (0,1,40), (1,7,10), (6,8,26), (3,4,40), (4,9,10), (2,10,26), (10,0,40))), 10, 27), Vector(GraphValue(13,Vector((0,1,10), (0,2,26), (0,1,40), (1,3,10), (2,4,26), (1,2,40), (2,5,10), (4,6,26), (0,1,40), (1,7,10), (6,8,26), (3,4,40), (4,9,10), (2,10,26), (10,0,40), (0,11,10), (10,12,26), (8,9,40))), 10, 27), ...
Average Size: 18.452153110047846
Average Fitness: 5003681.551652382
Fitness Variation: 4418415.053018903
Distribution: #0 -> 0.279, #1 -> 0.105, growEdge -> 0.073, GraphValue(0,Vector()) -> 0.063, 22 -> 0.053, 40 -> 0.047, 39 -> 0.037, addNode -> 0.036, 10 -> 0.035, 6 -> 0.033
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 2 generations ago.
------------
[83.241s]Generation 35
Best Result: (fitness: 10938222.0, performance: 11991582.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 27
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, #0, 10), #0, 26), 21, #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 27), Vector(GraphValue(3,Vector((0,1,10), (0,2,26), (0,1,40))), 10, 27), Vector(GraphValue(5,Vector((0,1,10), (0,2,26), (0,1,40), (1,3,10), (2,4,26), (1,2,40))), 10, 27), Vector(GraphValue(7,Vector((0,1,10), (0,2,26), (0,1,40), (1,3,10), (2,4,26), (1,2,40), (2,5,10), (4,6,26), (0,1,40))), 10, 27), Vector(GraphValue(9,Vector((0,1,10), (0,2,26), (0,1,40), (1,3,10), (2,4,26), (1,2,40), (2,5,10), (4,6,26), (0,1,40), (1,7,10), (6,8,26), (3,4,40))), 10, 27), Vector(GraphValue(11,Vector((0,1,10), (0,2,26), (0,1,40), (1,3,10), (2,4,26), (1,2,40), (2,5,10), (4,6,26), (0,1,40), (1,7,10), (6,8,26), (3,4,40), (4,9,10), (2,10,26), (10,0,40))), 10, 27), Vector(GraphValue(13,Vector((0,1,10), (0,2,26), (0,1,40), (1,3,10), (2,4,26), (1,2,40), (2,5,10), (4,6,26), (0,1,40), (1,7,10), (6,8,26), (3,4,40), (4,9,10), (2,10,26), (10,0,40), (0,11,10), (10,12,26), (8,9,40))), 10, 27), ...
Average Size: 18.911483253588518
Average Fitness: 5071722.893530628
Fitness Variation: 4502675.701570106
Distribution: #0 -> 0.292, #1 -> 0.107, growEdge -> 0.087, 22 -> 0.061, GraphValue(0,Vector()) -> 0.055, 39 -> 0.050, 40 -> 0.045, 10 -> 0.040, modular -> 0.037, addNode -> 0.030
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[85.620s]Generation 36
Best Result: (fitness: 11008201.0, performance: 12068300.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 27
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, #0, 10), #0, 26), 21, #0, #0); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 27), Vector(GraphValue(3,Vector((0,1,10), (0,2,26), (0,1,22))), 10, 27), Vector(GraphValue(5,Vector((0,1,10), (0,2,26), (0,1,22), (1,3,10), (2,4,26), (1,2,22))), 10, 27), Vector(GraphValue(7,Vector((0,1,10), (0,2,26), (0,1,22), (1,3,10), (2,4,26), (1,2,22), (2,5,10), (4,6,26), (0,1,22))), 10, 27), Vector(GraphValue(9,Vector((0,1,10), (0,2,26), (0,1,22), (1,3,10), (2,4,26), (1,2,22), (2,5,10), (4,6,26), (0,1,22), (1,7,10), (6,8,26), (3,4,22))), 10, 27), Vector(GraphValue(11,Vector((0,1,10), (0,2,26), (0,1,22), (1,3,10), (2,4,26), (1,2,22), (2,5,10), (4,6,26), (0,1,22), (1,7,10), (6,8,26), (3,4,22), (4,9,10), (2,10,26), (10,0,22))), 10, 27), Vector(GraphValue(13,Vector((0,1,10), (0,2,26), (0,1,22), (1,3,10), (2,4,26), (1,2,22), (2,5,10), (4,6,26), (0,1,22), (1,7,10), (6,8,26), (3,4,22), (4,9,10), (2,10,26), (10,0,22), (0,11,10), (10,12,26), (8,9,22))), 10, 27), ...
Average Size: 19.267942583732058
Average Fitness: 5430617.651254532
Fitness Variation: 4661042.716214404
Distribution: #0 -> 0.307, #1 -> 0.103, growEdge -> 0.091, 22 -> 0.059, GraphValue(0,Vector()) -> 0.055, 39 -> 0.052, 40 -> 0.041, 10 -> 0.041, modular -> 0.033, dec -> 0.029
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 0 generations ago.
------------
[98.033s]Generation 37
Best Result: (fitness: 2600385957.3, performance: 2947238186.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 0 ; iter: #0; seedExpr: 0 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, #0, #0), #0, 39), dec(#0), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(3,Vector((0,1,0), (0,2,39), (2,0,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,0), (0,2,39), (2,0,40), (0,3,0), (0,4,39), (4,0,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,0), (0,2,39), (2,0,40), (0,3,0), (0,4,39), (4,0,40), (0,5,0), (0,6,39), (6,0,40))), 10, 39), Vector(GraphValue(9,Vector((0,1,0), (0,2,39), (2,0,40), (0,3,0), (0,4,39), (4,0,40), (0,5,0), (0,6,39), (6,0,40), (0,7,0), (0,8,39), (8,0,40))), 10, 39), Vector(GraphValue(11,Vector((0,1,0), (0,2,39), (2,0,40), (0,3,0), (0,4,39), (4,0,40), (0,5,0), (0,6,39), (6,0,40), (0,7,0), (0,8,39), (8,0,40), (0,9,0), (0,10,39), (10,0,40))), 10, 39), Vector(GraphValue(13,Vector((0,1,0), (0,2,39), (2,0,40), (0,3,0), (0,4,39), (4,0,40), (0,5,0), (0,6,39), (6,0,40), (0,7,0), (0,8,39), (8,0,40), (0,9,0), (0,10,39), (10,0,40), (0,11,0), (0,12,39), (12,0,40))), 10, 39), ...
Average Size: 19.741626794258373
Average Fitness: 1.235781100757385E7
Fitness Variation: 1.2682388297103961E8
Distribution: #0 -> 0.315, #1 -> 0.103, growEdge -> 0.100, 39 -> 0.060, 22 -> 0.057, GraphValue(0,Vector()) -> 0.050, 10 -> 0.043, 40 -> 0.041, dec -> 0.033, modular -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 1 generations ago.
------------
[100.806s]Generation 38
Best Result: (fitness: 11669946.9, performance: 13923273.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> dec(#0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, #0, #0), #0, #0), dec(#0), #0, dec(#0)); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 21, 39), Vector(GraphValue(3,Vector((0,1,22), (0,2,22), (0,1,21))), 21, 39), Vector(GraphValue(5,Vector((0,1,22), (0,2,22), (0,1,21), (1,3,22), (2,4,22), (1,2,21))), 21, 39), Vector(GraphValue(7,Vector((0,1,22), (0,2,22), (0,1,21), (1,3,22), (2,4,22), (1,2,21), (2,5,22), (4,6,22), (0,1,21))), 21, 39), Vector(GraphValue(9,Vector((0,1,22), (0,2,22), (0,1,21), (1,3,22), (2,4,22), (1,2,21), (2,5,22), (4,6,22), (0,1,21), (1,7,22), (6,8,22), (3,4,21))), 21, 39), Vector(GraphValue(11,Vector((0,1,22), (0,2,22), (0,1,21), (1,3,22), (2,4,22), (1,2,21), (2,5,22), (4,6,22), (0,1,21), (1,7,22), (6,8,22), (3,4,21), (4,9,22), (2,10,22), (10,0,21))), 21, 39), Vector(GraphValue(13,Vector((0,1,22), (0,2,22), (0,1,21), (1,3,22), (2,4,22), (1,2,21), (2,5,22), (4,6,22), (0,1,21), (1,7,22), (6,8,22), (3,4,21), (4,9,22), (2,10,22), (10,0,21), (0,11,22), (10,12,22), (8,9,21))), 21, 39), ...
Average Size: 19.811004784688997
Average Fitness: 5915188.049587067
Fitness Variation: 4878220.772756919
Distribution: #0 -> 0.319, #1 -> 0.105, growEdge -> 0.102, 39 -> 0.056, 22 -> 0.054, 10 -> 0.050, GraphValue(0,Vector()) -> 0.050, 40 -> 0.040, dec -> 0.032, modular -> 0.027
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 2 generations ago.
------------
[103.421s]Generation 39
Best Result: (fitness: 11669946.9, performance: 13923273.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> dec(#0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, #0, #0), #0, #0), dec(#0), #0, dec(#0)); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 21, 39), Vector(GraphValue(3,Vector((0,1,22), (0,2,22), (0,1,21))), 21, 39), Vector(GraphValue(5,Vector((0,1,22), (0,2,22), (0,1,21), (1,3,22), (2,4,22), (1,2,21))), 21, 39), Vector(GraphValue(7,Vector((0,1,22), (0,2,22), (0,1,21), (1,3,22), (2,4,22), (1,2,21), (2,5,22), (4,6,22), (0,1,21))), 21, 39), Vector(GraphValue(9,Vector((0,1,22), (0,2,22), (0,1,21), (1,3,22), (2,4,22), (1,2,21), (2,5,22), (4,6,22), (0,1,21), (1,7,22), (6,8,22), (3,4,21))), 21, 39), Vector(GraphValue(11,Vector((0,1,22), (0,2,22), (0,1,21), (1,3,22), (2,4,22), (1,2,21), (2,5,22), (4,6,22), (0,1,21), (1,7,22), (6,8,22), (3,4,21), (4,9,22), (2,10,22), (10,0,21))), 21, 39), Vector(GraphValue(13,Vector((0,1,22), (0,2,22), (0,1,21), (1,3,22), (2,4,22), (1,2,21), (2,5,22), (4,6,22), (0,1,21), (1,7,22), (6,8,22), (3,4,21), (4,9,22), (2,10,22), (10,0,21), (0,11,22), (10,12,22), (8,9,21))), 21, 39), ...
Average Size: 19.545454545454547
Average Fitness: 5681179.083121732
Fitness Variation: 4878581.293874174
Distribution: #0 -> 0.310, #1 -> 0.108, growEdge -> 0.106, 10 -> 0.066, GraphValue(0,Vector()) -> 0.051, 22 -> 0.050, 39 -> 0.046, 40 -> 0.039, 21 -> 0.027, dec -> 0.026
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 3 generations ago.
------------
[105.464s]Generation 40
Best Result: (fitness: 11707856.1, performance: 13968502.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> dec(#0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: 24; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, #0, #0), #0, #0), dec(#0), #0, dec(#0)); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 21, 39), Vector(GraphValue(3,Vector((0,1,22), (0,2,22), (0,1,21))), 23, 39), Vector(GraphValue(5,Vector((0,1,22), (0,2,22), (0,1,21), (0,3,24), (0,4,24), (3,4,23))), 23, 39), Vector(GraphValue(7,Vector((0,1,22), (0,2,22), (0,1,21), (0,3,24), (0,4,24), (3,4,23), (4,5,24), (0,6,24), (2,3,23))), 23, 39), Vector(GraphValue(9,Vector((0,1,22), (0,2,22), (0,1,21), (0,3,24), (0,4,24), (3,4,23), (4,5,24), (0,6,24), (2,3,23), (3,7,24), (0,8,24), (5,6,23))), 23, 39), Vector(GraphValue(11,Vector((0,1,22), (0,2,22), (0,1,21), (0,3,24), (0,4,24), (3,4,23), (4,5,24), (0,6,24), (2,3,23), (3,7,24), (0,8,24), (5,6,23), (6,9,24), (4,10,24), (1,2,23))), 23, 39), Vector(GraphValue(13,Vector((0,1,22), (0,2,22), (0,1,21), (0,3,24), (0,4,24), (3,4,23), (4,5,24), (0,6,24), (2,3,23), (3,7,24), (0,8,24), (5,6,23), (6,9,24), (4,10,24), (1,2,23), (2,11,24), (0,12,24), (10,11,23))), 23, 39), ...
Average Size: 19.442583732057415
Average Fitness: 5675103.47943619
Fitness Variation: 5041678.650795411
Distribution: #0 -> 0.310, #1 -> 0.111, growEdge -> 0.107, 10 -> 0.071, GraphValue(0,Vector()) -> 0.049, 22 -> 0.048, 39 -> 0.040, 40 -> 0.033, 21 -> 0.032, dec -> 0.024
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 4 generations ago.
------------
[108.109s]Generation 41
Best Result: (fitness: 11780009.2, performance: 14603009.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> dec(#0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: modular(44, inc(15)); seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, #0, #0), #0, #0), dec(#0), #0, dec(#0)); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 21, 39), Vector(GraphValue(3,Vector((0,1,22), (0,2,22), (0,1,21))), 11, 39), Vector(GraphValue(5,Vector((0,1,22), (0,2,22), (0,1,21), (0,3,12), (0,4,12), (1,2,11))), 11, 39), Vector(GraphValue(7,Vector((0,1,22), (0,2,22), (0,1,21), (0,3,12), (0,4,12), (1,2,11), (2,5,12), (0,6,12), (4,5,11))), 11, 39), Vector(GraphValue(9,Vector((0,1,22), (0,2,22), (0,1,21), (0,3,12), (0,4,12), (1,2,11), (2,5,12), (0,6,12), (4,5,11), (5,7,12), (4,8,12), (2,3,11))), 11, 39), Vector(GraphValue(11,Vector((0,1,22), (0,2,22), (0,1,21), (0,3,12), (0,4,12), (1,2,11), (2,5,12), (0,6,12), (4,5,11), (5,7,12), (4,8,12), (2,3,11), (3,9,12), (2,10,12), (0,1,11))), 11, 39), Vector(GraphValue(13,Vector((0,1,22), (0,2,22), (0,1,21), (0,3,12), (0,4,12), (1,2,11), (2,5,12), (0,6,12), (4,5,11), (5,7,12), (4,8,12), (2,3,11), (3,9,12), (2,10,12), (0,1,11), (1,11,12), (0,12,12), (11,12,11))), 11, 39), ...
Average Size: 19.516746411483254
Average Fitness: 5741511.561854283
Fitness Variation: 5126324.053855982
Distribution: #0 -> 0.317, #1 -> 0.108, growEdge -> 0.106, 10 -> 0.070, GraphValue(0,Vector()) -> 0.050, 22 -> 0.044, 21 -> 0.036, 39 -> 0.028, 40 -> 0.028, addNode -> 0.026
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 5 generations ago.
------------
[110.599s]Generation 42
Best Result: (fitness: 11840157.1, performance: 14814598.0), Created by Crossover
[O0: EGraph(EInt)] -> growEdge(growEdge(#1, #0, #0), #0, #0)
[O1: EInt] -> dec(#0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, #0, #0), #0, #0), dec(#0), #0, #0); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(3,Vector((0,1,22), (0,2,22))), 21, 39), Vector(GraphValue(5,Vector((0,1,22), (0,2,22), (0,1,22), (1,3,22), (2,4,22))), 21, 39), Vector(GraphValue(7,Vector((0,1,22), (0,2,22), (0,1,22), (1,3,22), (2,4,22), (1,2,22), (2,5,22), (4,6,22))), 21, 39), Vector(GraphValue(9,Vector((0,1,22), (0,2,22), (0,1,22), (1,3,22), (2,4,22), (1,2,22), (2,5,22), (4,6,22), (0,1,22), (1,7,22), (6,8,22))), 21, 39), Vector(GraphValue(11,Vector((0,1,22), (0,2,22), (0,1,22), (1,3,22), (2,4,22), (1,2,22), (2,5,22), (4,6,22), (0,1,22), (1,7,22), (6,8,22), (3,4,22), (4,9,22), (2,10,22))), 21, 39), Vector(GraphValue(13,Vector((0,1,22), (0,2,22), (0,1,22), (1,3,22), (2,4,22), (1,2,22), (2,5,22), (4,6,22), (0,1,22), (1,7,22), (6,8,22), (3,4,22), (4,9,22), (2,10,22), (10,0,22), (0,11,22), (10,12,22))), 21, 39), Vector(GraphValue(15,Vector((0,1,22), (0,2,22), (0,1,22), (1,3,22), (2,4,22), (1,2,22), (2,5,22), (4,6,22), (0,1,22), (1,7,22), (6,8,22), (3,4,22), (4,9,22), (2,10,22), (10,0,22), (0,11,22), (10,12,22), (8,9,22), (9,13,22), (8,14,22))), 21, 39), ...
Average Size: 19.75358851674641
Average Fitness: 6050425.160026314
Fitness Variation: 5218847.154553416
Distribution: #0 -> 0.358, #1 -> 0.108, growEdge -> 0.107, 10 -> 0.062, GraphValue(0,Vector()) -> 0.052, 21 -> 0.034, dec -> 0.033, 22 -> 0.032, addNode -> 0.027, bridgeEdge -> 0.024
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 6 generations ago.
------------
[113.236s]Generation 43
Best Result: (fitness: 59040639.3, performance: 78340161.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 39), dec(#0), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(3,Vector((0,1,7), (0,2,39), (0,1,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,7), (0,2,39), (0,1,40), (2,3,7), (2,4,39), (1,2,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,7), (0,2,39), (0,1,40), (2,3,7), (2,4,39), (1,2,40), (4,5,7), (4,6,39), (0,1,40))), 10, 39), Vector(GraphValue(9,Vector((0,1,7), (0,2,39), (0,1,40), (2,3,7), (2,4,39), (1,2,40), (4,5,7), (4,6,39), (0,1,40), (6,7,7), (6,8,39), (3,4,40))), 10, 39), Vector(GraphValue(11,Vector((0,1,7), (0,2,39), (0,1,40), (2,3,7), (2,4,39), (1,2,40), (4,5,7), (4,6,39), (0,1,40), (6,7,7), (6,8,39), (3,4,40), (8,9,7), (2,10,39), (10,0,40))), 10, 39), Vector(GraphValue(13,Vector((0,1,7), (0,2,39), (0,1,40), (2,3,7), (2,4,39), (1,2,40), (4,5,7), (4,6,39), (0,1,40), (6,7,7), (6,8,39), (3,4,40), (8,9,7), (2,10,39), (10,0,40), (10,11,7), (10,12,39), (8,9,40))), 10, 39), ...
Average Size: 20.126794258373206
Average Fitness: 6585122.253178362
Fitness Variation: 5827013.260882297
Distribution: #0 -> 0.376, #1 -> 0.107, growEdge -> 0.104, 10 -> 0.053, GraphValue(0,Vector()) -> 0.050, dec -> 0.048, 22 -> 0.029, 21 -> 0.028, addNode -> 0.025, bridgeEdge -> 0.022
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 7 generations ago.
------------
[116.098s]Generation 44
Best Result: (fitness: 59040639.3, performance: 78340161.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 39), dec(#0), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(3,Vector((0,1,7), (0,2,39), (0,1,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,7), (0,2,39), (0,1,40), (2,3,7), (2,4,39), (1,2,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,7), (0,2,39), (0,1,40), (2,3,7), (2,4,39), (1,2,40), (4,5,7), (4,6,39), (0,1,40))), 10, 39), Vector(GraphValue(9,Vector((0,1,7), (0,2,39), (0,1,40), (2,3,7), (2,4,39), (1,2,40), (4,5,7), (4,6,39), (0,1,40), (6,7,7), (6,8,39), (3,4,40))), 10, 39), Vector(GraphValue(11,Vector((0,1,7), (0,2,39), (0,1,40), (2,3,7), (2,4,39), (1,2,40), (4,5,7), (4,6,39), (0,1,40), (6,7,7), (6,8,39), (3,4,40), (8,9,7), (2,10,39), (10,0,40))), 10, 39), Vector(GraphValue(13,Vector((0,1,7), (0,2,39), (0,1,40), (2,3,7), (2,4,39), (1,2,40), (4,5,7), (4,6,39), (0,1,40), (6,7,7), (6,8,39), (3,4,40), (8,9,7), (2,10,39), (10,0,40), (10,11,7), (10,12,39), (8,9,40))), 10, 39), ...
Average Size: 20.992822966507177
Average Fitness: 7516618.099438641
Fitness Variation: 7671775.553906715
Distribution: #0 -> 0.427, #1 -> 0.105, growEdge -> 0.103, dec -> 0.068, GraphValue(0,Vector()) -> 0.048, 10 -> 0.032, 22 -> 0.029, addNode -> 0.026, bridgeEdge -> 0.022, 39 -> 0.020
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 8 generations ago.
------------
[118.602s]Generation 45
Best Result: (fitness: 59356343.3, performance: 78759064.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 39), dec(#0), #0, 31); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(3,Vector((0,1,7), (0,2,39), (0,1,31))), 10, 39), Vector(GraphValue(5,Vector((0,1,7), (0,2,39), (0,1,31), (2,3,7), (2,4,39), (1,2,31))), 10, 39), Vector(GraphValue(7,Vector((0,1,7), (0,2,39), (0,1,31), (2,3,7), (2,4,39), (1,2,31), (4,5,7), (4,6,39), (0,1,31))), 10, 39), Vector(GraphValue(9,Vector((0,1,7), (0,2,39), (0,1,31), (2,3,7), (2,4,39), (1,2,31), (4,5,7), (4,6,39), (0,1,31), (6,7,7), (6,8,39), (3,4,31))), 10, 39), Vector(GraphValue(11,Vector((0,1,7), (0,2,39), (0,1,31), (2,3,7), (2,4,39), (1,2,31), (4,5,7), (4,6,39), (0,1,31), (6,7,7), (6,8,39), (3,4,31), (8,9,7), (2,10,39), (10,0,31))), 10, 39), Vector(GraphValue(13,Vector((0,1,7), (0,2,39), (0,1,31), (2,3,7), (2,4,39), (1,2,31), (4,5,7), (4,6,39), (0,1,31), (6,7,7), (6,8,39), (3,4,31), (8,9,7), (2,10,39), (10,0,31), (10,11,7), (10,12,39), (8,9,31))), 10, 39), ...
Average Size: 21.71291866028708
Average Fitness: 7678598.675655602
Fitness Variation: 9345939.509940946
Distribution: #0 -> 0.456, growEdge -> 0.100, #1 -> 0.099, dec -> 0.083, GraphValue(0,Vector()) -> 0.046, 22 -> 0.026, addNode -> 0.024, 39 -> 0.023, bridgeEdge -> 0.021, 10 -> 0.014
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 9 generations ago.
------------
[121.380s]Generation 46
Best Result: (fitness: 59356343.3, performance: 78759064.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 39), dec(#0), #0, 31); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(3,Vector((0,1,7), (0,2,39), (0,1,31))), 10, 39), Vector(GraphValue(5,Vector((0,1,7), (0,2,39), (0,1,31), (2,3,7), (2,4,39), (1,2,31))), 10, 39), Vector(GraphValue(7,Vector((0,1,7), (0,2,39), (0,1,31), (2,3,7), (2,4,39), (1,2,31), (4,5,7), (4,6,39), (0,1,31))), 10, 39), Vector(GraphValue(9,Vector((0,1,7), (0,2,39), (0,1,31), (2,3,7), (2,4,39), (1,2,31), (4,5,7), (4,6,39), (0,1,31), (6,7,7), (6,8,39), (3,4,31))), 10, 39), Vector(GraphValue(11,Vector((0,1,7), (0,2,39), (0,1,31), (2,3,7), (2,4,39), (1,2,31), (4,5,7), (4,6,39), (0,1,31), (6,7,7), (6,8,39), (3,4,31), (8,9,7), (2,10,39), (10,0,31))), 10, 39), Vector(GraphValue(13,Vector((0,1,7), (0,2,39), (0,1,31), (2,3,7), (2,4,39), (1,2,31), (4,5,7), (4,6,39), (0,1,31), (6,7,7), (6,8,39), (3,4,31), (8,9,7), (2,10,39), (10,0,31), (10,11,7), (10,12,39), (8,9,31))), 10, 39), ...
Average Size: 22.27751196172249
Average Fitness: 8180257.141210931
Fitness Variation: 9549793.118969392
Distribution: #0 -> 0.475, growEdge -> 0.099, #1 -> 0.099, dec -> 0.093, GraphValue(0,Vector()) -> 0.043, 22 -> 0.024, addNode -> 0.022, 39 -> 0.021, bridgeEdge -> 0.020, neg -> 0.010
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 10 generations ago.
------------
[125.377s]Generation 47
Best Result: (fitness: 59040639.3, performance: 78340161.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 39), dec(#0), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(3,Vector((0,1,7), (0,2,39), (0,1,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,7), (0,2,39), (0,1,40), (2,3,7), (2,4,39), (1,2,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,7), (0,2,39), (0,1,40), (2,3,7), (2,4,39), (1,2,40), (4,5,7), (4,6,39), (0,1,40))), 10, 39), Vector(GraphValue(9,Vector((0,1,7), (0,2,39), (0,1,40), (2,3,7), (2,4,39), (1,2,40), (4,5,7), (4,6,39), (0,1,40), (6,7,7), (6,8,39), (3,4,40))), 10, 39), Vector(GraphValue(11,Vector((0,1,7), (0,2,39), (0,1,40), (2,3,7), (2,4,39), (1,2,40), (4,5,7), (4,6,39), (0,1,40), (6,7,7), (6,8,39), (3,4,40), (8,9,7), (2,10,39), (10,0,40))), 10, 39), Vector(GraphValue(13,Vector((0,1,7), (0,2,39), (0,1,40), (2,3,7), (2,4,39), (1,2,40), (4,5,7), (4,6,39), (0,1,40), (6,7,7), (6,8,39), (3,4,40), (8,9,7), (2,10,39), (10,0,40), (10,11,7), (10,12,39), (8,9,40))), 10, 39), ...
Average Size: 22.94736842105263
Average Fitness: 1.00488211597905E7
Fitness Variation: 1.2813990316048441E7
Distribution: #0 -> 0.474, growEdge -> 0.099, #1 -> 0.097, dec -> 0.089, GraphValue(0,Vector()) -> 0.044, 39 -> 0.024, addNode -> 0.022, 22 -> 0.021, bridgeEdge -> 0.019, neg -> 0.014
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 11 generations ago.
------------
[130.711s]Generation 48
Best Result: (fitness: 62207650.6, performance: 82542422.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44), dec(#0), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(3,Vector((0,1,7), (0,2,44), (0,1,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40))), 10, 39), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40))), 10, 39), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40))), 10, 39), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40), (10,11,7), (10,12,44), (8,9,40))), 10, 39), ...
Average Size: 23.715311004784688
Average Fitness: 1.3689831260879977E7
Fitness Variation: 1.7290574874380097E7
Distribution: #0 -> 0.448, growEdge -> 0.096, #1 -> 0.091, dec -> 0.078, GraphValue(0,Vector()) -> 0.040, 39 -> 0.031, neg -> 0.025, divide -> 0.021, 7 -> 0.020, bridgeEdge -> 0.019
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 12 generations ago.
------------
[138.175s]Generation 49
Best Result: (fitness: 62207650.6, performance: 82542422.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44), dec(#0), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(3,Vector((0,1,7), (0,2,44), (0,1,40))), 10, 39), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40))), 10, 39), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40))), 10, 39), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40))), 10, 39), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40))), 10, 39), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40), (10,11,7), (10,12,44), (8,9,40))), 10, 39), ...
Average Size: 24.19377990430622
Average Fitness: 1.7534868577220194E7
Fitness Variation: 2.066681672159604E7
Distribution: #0 -> 0.402, growEdge -> 0.086, #1 -> 0.085, dec -> 0.061, neg -> 0.043, 39 -> 0.042, GraphValue(0,Vector()) -> 0.039, divide -> 0.037, 7 -> 0.033, addNode -> 0.018
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 13 generations ago.
------------
[147.017s]Generation 50
Best Result: (fitness: 62921440.6, performance: 78340161.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 39), 21, #0, 43); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 39), Vector(GraphValue(3,Vector((0,1,7), (0,2,39), (0,1,43))), 10, 39), Vector(GraphValue(5,Vector((0,1,7), (0,2,39), (0,1,43), (2,3,7), (2,4,39), (1,2,43))), 10, 39), Vector(GraphValue(7,Vector((0,1,7), (0,2,39), (0,1,43), (2,3,7), (2,4,39), (1,2,43), (4,5,7), (4,6,39), (0,1,43))), 10, 39), Vector(GraphValue(9,Vector((0,1,7), (0,2,39), (0,1,43), (2,3,7), (2,4,39), (1,2,43), (4,5,7), (4,6,39), (0,1,43), (6,7,7), (6,8,39), (3,4,43))), 10, 39), Vector(GraphValue(11,Vector((0,1,7), (0,2,39), (0,1,43), (2,3,7), (2,4,39), (1,2,43), (4,5,7), (4,6,39), (0,1,43), (6,7,7), (6,8,39), (3,4,43), (8,9,7), (2,10,39), (10,0,43))), 10, 39), Vector(GraphValue(13,Vector((0,1,7), (0,2,39), (0,1,43), (2,3,7), (2,4,39), (1,2,43), (4,5,7), (4,6,39), (0,1,43), (6,7,7), (6,8,39), (3,4,43), (8,9,7), (2,10,39), (10,0,43), (10,11,7), (10,12,39), (8,9,43))), 10, 39), ...
Average Size: 24.0622009569378
Average Fitness: 2.019776508618236E7
Fitness Variation: 2.2602134562953144E7
Distribution: #0 -> 0.372, #1 -> 0.081, growEdge -> 0.079, neg -> 0.062, dec -> 0.053, divide -> 0.052, 39 -> 0.049, 7 -> 0.044, GraphValue(0,Vector()) -> 0.038, bridgeEdge -> 0.017
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 14 generations ago.
------------
[153.241s]Generation 51
Best Result: (fitness: 62253081.8, performance: 82602704.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44), dec(#0), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 45), Vector(GraphValue(3,Vector((0,1,7), (0,2,44), (0,1,40))), 10, 45), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40))), 10, 45), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40))), 10, 45), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40))), 10, 45), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40))), 10, 45), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40), (10,11,7), (10,12,44), (8,9,40))), 10, 45), ...
Average Size: 24.66507177033493
Average Fitness: 2.483332135620669E7
Fitness Variation: 2.437097640476947E7
Distribution: #0 -> 0.362, #1 -> 0.078, growEdge -> 0.076, neg -> 0.069, divide -> 0.060, 39 -> 0.051, 7 -> 0.048, dec -> 0.045, GraphValue(0,Vector()) -> 0.035, 40 -> 0.018
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 15 generations ago.
------------
[160.755s]Generation 52
Best Result: (fitness: 62253081.8, performance: 82602704.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44), dec(#0), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 45), Vector(GraphValue(3,Vector((0,1,7), (0,2,44), (0,1,40))), 10, 45), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40))), 10, 45), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40))), 10, 45), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40))), 10, 45), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40))), 10, 45), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40), (10,11,7), (10,12,44), (8,9,40))), 10, 45), ...
Average Size: 24.282296650717704
Average Fitness: 2.5711162144657787E7
Fitness Variation: 2.580443530130206E7
Distribution: #0 -> 0.359, #1 -> 0.080, growEdge -> 0.079, neg -> 0.075, divide -> 0.063, 7 -> 0.055, 39 -> 0.055, dec -> 0.042, GraphValue(0,Vector()) -> 0.034, 40 -> 0.022
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 16 generations ago.
------------
[168.241s]Generation 53
Best Result: (fitness: 62253081.8, performance: 82602704.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44), dec(#0), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 45), Vector(GraphValue(3,Vector((0,1,7), (0,2,44), (0,1,40))), 10, 45), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40))), 10, 45), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40))), 10, 45), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40))), 10, 45), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40))), 10, 45), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40), (10,11,7), (10,12,44), (8,9,40))), 10, 45), ...
Average Size: 23.61004784688995
Average Fitness: 2.8020228443130106E7
Fitness Variation: 2.6634633927095663E7
Distribution: #0 -> 0.343, #1 -> 0.081, growEdge -> 0.079, neg -> 0.077, divide -> 0.063, 7 -> 0.060, 39 -> 0.056, dec -> 0.041, GraphValue(0,Vector()) -> 0.036, 40 -> 0.025
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 17 generations ago.
------------
[175.688s]Generation 54
Best Result: (fitness: 62253081.8, performance: 82602704.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44), dec(#0), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 45), Vector(GraphValue(3,Vector((0,1,7), (0,2,44), (0,1,40))), 10, 45), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40))), 10, 45), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40))), 10, 45), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40))), 10, 45), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40))), 10, 45), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40), (10,11,7), (10,12,44), (8,9,40))), 10, 45), ...
Average Size: 22.91866028708134
Average Fitness: 2.6912524802518476E7
Fitness Variation: 2.7214721491934985E7
Distribution: #0 -> 0.339, #1 -> 0.082, growEdge -> 0.080, neg -> 0.078, divide -> 0.065, 7 -> 0.061, 39 -> 0.054, dec -> 0.038, GraphValue(0,Vector()) -> 0.037, 40 -> 0.025
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 18 generations ago.
------------
[183.124s]Generation 55
Best Result: (fitness: 62253081.8, performance: 82602704.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44), dec(22), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 45), Vector(GraphValue(3,Vector((0,1,7), (0,2,44), (0,1,40))), 10, 45), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40))), 10, 45), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40))), 10, 45), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40))), 10, 45), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40))), 10, 45), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40), (10,11,7), (10,12,44), (8,9,40))), 10, 45), ...
Average Size: 22.854066985645932
Average Fitness: 2.8019473026934374E7
Fitness Variation: 2.7852180080643475E7
Distribution: #0 -> 0.336, #1 -> 0.081, growEdge -> 0.081, neg -> 0.078, divide -> 0.066, 7 -> 0.061, 39 -> 0.050, GraphValue(0,Vector()) -> 0.038, dec -> 0.037, 40 -> 0.026
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 19 generations ago.
------------
[190.143s]Generation 56
Best Result: (fitness: 62253081.8, performance: 82602704.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44), dec(#0), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 45), Vector(GraphValue(3,Vector((0,1,7), (0,2,44), (0,1,40))), 10, 45), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40))), 10, 45), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40))), 10, 45), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40))), 10, 45), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40))), 10, 45), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40), (10,11,7), (10,12,44), (8,9,40))), 10, 45), ...
Average Size: 22.416267942583733
Average Fitness: 2.7368947789688274E7
Fitness Variation: 2.805589549320555E7
Distribution: #0 -> 0.333, #1 -> 0.082, growEdge -> 0.081, neg -> 0.078, divide -> 0.066, 7 -> 0.061, 39 -> 0.049, GraphValue(0,Vector()) -> 0.037, dec -> 0.036, 40 -> 0.026
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 20 generations ago.
------------
[198.635s]Generation 57
Best Result: (fitness: 62253081.8, performance: 82602704.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44), dec(#0), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 45), Vector(GraphValue(3,Vector((0,1,7), (0,2,44), (0,1,40))), 10, 45), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40))), 10, 45), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40))), 10, 45), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40))), 10, 45), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40))), 10, 45), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40), (10,11,7), (10,12,44), (8,9,40))), 10, 45), ...
Average Size: 22.89952153110048
Average Fitness: 2.587073931969746E7
Fitness Variation: 2.7804564824791487E7
Distribution: #0 -> 0.331, #1 -> 0.081, growEdge -> 0.080, neg -> 0.079, divide -> 0.066, 7 -> 0.061, 39 -> 0.040, dec -> 0.039, GraphValue(0,Vector()) -> 0.037, 40 -> 0.027
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 21 generations ago.
------------
[205.430s]Generation 58
Best Result: (fitness: 62253081.8, performance: 82602704.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, divide(#0, neg(13)), 7), #0, 44), dec(22), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 45), Vector(GraphValue(3,Vector((0,1,7), (0,2,44), (0,1,40))), 10, 45), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40))), 10, 45), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40))), 10, 45), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40))), 10, 45), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40))), 10, 45), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40), (10,11,7), (10,12,44), (8,9,40))), 10, 45), ...
Average Size: 22.818181818181817
Average Fitness: 2.4833742521979045E7
Fitness Variation: 2.7913003671572544E7
Distribution: #0 -> 0.326, growEdge -> 0.081, #1 -> 0.080, neg -> 0.077, divide -> 0.064, 7 -> 0.060, dec -> 0.038, GraphValue(0,Vector()) -> 0.037, 44 -> 0.035, 39 -> 0.030
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 22 generations ago.
------------
[212.312s]Generation 59
Best Result: (fitness: 62253081.8, performance: 82602704.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, divide(#0, neg(13)), 7), #0, 44), dec(22), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 45), Vector(GraphValue(3,Vector((0,1,7), (0,2,44), (0,1,40))), 10, 45), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40))), 10, 45), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40))), 10, 45), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40))), 10, 45), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40))), 10, 45), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40), (10,11,7), (10,12,44), (8,9,40))), 10, 45), ...
Average Size: 22.995215311004785
Average Fitness: 2.716852262363678E7
Fitness Variation: 2.8348809450702168E7
Distribution: #0 -> 0.320, growEdge -> 0.081, #1 -> 0.080, neg -> 0.078, divide -> 0.066, 7 -> 0.058, GraphValue(0,Vector()) -> 0.038, dec -> 0.038, 44 -> 0.037, 22 -> 0.032
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 23 generations ago.
------------
[219.358s]Generation 60
Best Result: (fitness: 62253081.8, performance: 82602704.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 10
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: bridgeEdge(growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44), dec(22), #0, 40); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 10, 45), Vector(GraphValue(3,Vector((0,1,7), (0,2,44), (0,1,40))), 10, 45), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40))), 10, 45), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40))), 10, 45), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40))), 10, 45), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40))), 10, 45), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (0,1,40), (2,3,7), (2,4,44), (1,2,40), (4,5,7), (4,6,44), (0,1,40), (6,7,7), (6,8,44), (3,4,40), (8,9,7), (2,10,44), (10,0,40), (10,11,7), (10,12,44), (8,9,40))), 10, 45), ...
Average Size: 22.555023923444978
Average Fitness: 2.5800270782438353E7
Fitness Variation: 2.8237872845071297E7
Distribution: #0 -> 0.314, growEdge -> 0.081, #1 -> 0.081, neg -> 0.076, divide -> 0.065, 7 -> 0.060, 44 -> 0.041, GraphValue(0,Vector()) -> 0.038, dec -> 0.037, 22 -> 0.033
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 24 generations ago.
------------
[227.200s]Generation 61
Best Result: (fitness: 107331194.9, performance: 116159515.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,7), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44), (6,7,7), (6,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44), (6,7,7), (6,8,44), (8,9,7), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44), (6,7,7), (6,8,44), (8,9,7), (2,10,44), (10,11,7), (10,12,44))), 0, 39), ...
Average Size: 22.557416267942585
Average Fitness: 2.9784742128815252E7
Fitness Variation: 2.9377656670034777E7
Distribution: #0 -> 0.307, growEdge -> 0.082, #1 -> 0.081, neg -> 0.078, divide -> 0.064, 7 -> 0.061, 44 -> 0.044, 22 -> 0.039, GraphValue(0,Vector()) -> 0.037, dec -> 0.037
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 25 generations ago.
------------
[235.520s]Generation 62
Best Result: (fitness: 107331194.9, performance: 116159515.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,7), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44), (6,7,7), (6,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44), (6,7,7), (6,8,44), (8,9,7), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44), (6,7,7), (6,8,44), (8,9,7), (2,10,44), (10,11,7), (10,12,44))), 0, 39), ...
Average Size: 22.11004784688995
Average Fitness: 2.9330684821486052E7
Fitness Variation: 2.9191877181112852E7
Distribution: #0 -> 0.311, #1 -> 0.083, growEdge -> 0.081, neg -> 0.078, divide -> 0.066, 7 -> 0.058, 44 -> 0.047, 22 -> 0.041, GraphValue(0,Vector()) -> 0.038, dec -> 0.036
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 26 generations ago.
------------
[242.697s]Generation 63
Best Result: (fitness: 107331194.9, performance: 116159515.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,7), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44), (6,7,7), (6,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44), (6,7,7), (6,8,44), (8,9,7), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44), (6,7,7), (6,8,44), (8,9,7), (2,10,44), (10,11,7), (10,12,44))), 0, 39), ...
Average Size: 22.588516746411482
Average Fitness: 2.804988077879667E7
Fitness Variation: 2.9359187176681273E7
Distribution: #0 -> 0.308, growEdge -> 0.081, #1 -> 0.080, neg -> 0.079, divide -> 0.066, 7 -> 0.057, 44 -> 0.048, 22 -> 0.042, GraphValue(0,Vector()) -> 0.038, dec -> 0.036
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 27 generations ago.
------------
[250.802s]Generation 64
Best Result: (fitness: 107331194.9, performance: 116159515.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,7), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44), (6,7,7), (6,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44), (6,7,7), (6,8,44), (8,9,7), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44), (6,7,7), (6,8,44), (8,9,7), (2,10,44), (10,11,7), (10,12,44))), 0, 39), ...
Average Size: 22.461722488038276
Average Fitness: 2.7312076808209177E7
Fitness Variation: 2.9406170104067985E7
Distribution: #0 -> 0.302, growEdge -> 0.081, #1 -> 0.081, neg -> 0.078, divide -> 0.065, 7 -> 0.059, 44 -> 0.049, 22 -> 0.045, GraphValue(0,Vector()) -> 0.037, dec -> 0.036
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 28 generations ago.
------------
[257.522s]Generation 65
Best Result: (fitness: 107331194.9, performance: 116159515.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,7), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44), (6,7,7), (6,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44), (6,7,7), (6,8,44), (8,9,7), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44), (6,7,7), (6,8,44), (8,9,7), (2,10,44), (10,11,7), (10,12,44))), 0, 39), ...
Average Size: 22.270334928229666
Average Fitness: 2.7543325568119016E7
Fitness Variation: 3.0249999747422427E7
Distribution: #0 -> 0.303, growEdge -> 0.081, #1 -> 0.081, neg -> 0.080, divide -> 0.065, 7 -> 0.059, 44 -> 0.048, 22 -> 0.046, GraphValue(0,Vector()) -> 0.038, dec -> 0.037
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 29 generations ago.
------------
[267.042s]Generation 66
Best Result: (fitness: 107331194.9, performance: 116159515.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 22 ; iter: #0; seedExpr: 22 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,7), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44), (6,7,7), (6,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44), (6,7,7), (6,8,44), (8,9,7), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (4,6,44), (6,7,7), (6,8,44), (8,9,7), (2,10,44), (10,11,7), (10,12,44))), 0, 39), ...
Average Size: 22.33732057416268
Average Fitness: 2.8507988988551363E7
Fitness Variation: 3.098959392389616E7
Distribution: #0 -> 0.296, neg -> 0.082, #1 -> 0.082, growEdge -> 0.081, divide -> 0.065, 7 -> 0.059, 22 -> 0.048, 44 -> 0.047, GraphValue(0,Vector()) -> 0.038, dec -> 0.036
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 30 generations ago.
------------
[276.141s]Generation 67
Best Result: (fitness: 125412775.9, performance: 144143854.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 8 ; iter: #0; seedExpr: modular(8, neg(modular(18, 41))) }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), 10), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,10), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,10), (0,2,44), (2,3,10), (0,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,10), (0,2,44), (2,3,10), (0,4,44), (4,5,10), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,10), (0,2,44), (2,3,10), (0,4,44), (4,5,10), (2,6,44), (6,7,10), (0,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,10), (0,2,44), (2,3,10), (0,4,44), (4,5,10), (2,6,44), (6,7,10), (0,8,44), (8,9,10), (8,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,10), (0,2,44), (2,3,10), (0,4,44), (4,5,10), (2,6,44), (6,7,10), (0,8,44), (8,9,10), (8,10,44), (10,11,10), (8,12,44))), 0, 39), ...
Average Size: 22.732057416267942
Average Fitness: 2.940007730940806E7
Fitness Variation: 3.3015600676138423E7
Distribution: #0 -> 0.298, neg -> 0.084, #1 -> 0.082, growEdge -> 0.081, divide -> 0.068, 7 -> 0.062, 22 -> 0.051, 44 -> 0.045, GraphValue(0,Vector()) -> 0.036, dec -> 0.034
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 31 generations ago.
------------
[285.505s]Generation 68
Best Result: (fitness: 125412775.9, performance: 144143854.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 8 ; iter: #0; seedExpr: modular(8, neg(modular(18, 41))) }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), 10), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,10), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,10), (0,2,44), (2,3,10), (0,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,10), (0,2,44), (2,3,10), (0,4,44), (4,5,10), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,10), (0,2,44), (2,3,10), (0,4,44), (4,5,10), (2,6,44), (6,7,10), (0,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,10), (0,2,44), (2,3,10), (0,4,44), (4,5,10), (2,6,44), (6,7,10), (0,8,44), (8,9,10), (8,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,10), (0,2,44), (2,3,10), (0,4,44), (4,5,10), (2,6,44), (6,7,10), (0,8,44), (8,9,10), (8,10,44), (10,11,10), (8,12,44))), 0, 39), ...
Average Size: 22.428229665071772
Average Fitness: 3.2962431068973996E7
Fitness Variation: 3.548208087648E7
Distribution: #0 -> 0.302, neg -> 0.084, #1 -> 0.081, growEdge -> 0.078, divide -> 0.071, 7 -> 0.059, 44 -> 0.045, 22 -> 0.045, GraphValue(0,Vector()) -> 0.038, dec -> 0.030
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 32 generations ago.
------------
[296.064s]Generation 69
Best Result: (fitness: 128008632.5, performance: 141298044.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(divide(#0, 40), #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), 10), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,10), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,10), (0,2,44), (2,3,10), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,10), (0,2,44), (2,3,10), (2,4,44), (4,5,10), (4,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,10), (0,2,44), (2,3,10), (2,4,44), (4,5,10), (4,6,44), (6,7,10), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,10), (0,2,44), (2,3,10), (2,4,44), (4,5,10), (4,6,44), (6,7,10), (2,8,44), (8,9,10), (0,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,10), (0,2,44), (2,3,10), (2,4,44), (4,5,10), (4,6,44), (6,7,10), (2,8,44), (8,9,10), (0,10,44), (10,11,10), (10,12,44))), 0, 39), ...
Average Size: 22.5
Average Fitness: 3.7482018625033535E7
Fitness Variation: 3.908670182613444E7
Distribution: #0 -> 0.309, neg -> 0.088, #1 -> 0.079, growEdge -> 0.075, divide -> 0.073, 7 -> 0.056, 44 -> 0.043, 22 -> 0.041, GraphValue(0,Vector()) -> 0.036, dec -> 0.030
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 33 generations ago.
------------
[307.419s]Generation 70
Best Result: (fitness: 137092510.3, performance: 157568020.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 8 ; iter: #0; seedExpr: modular(8, neg(modular(18, 41))) }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), 10), 2, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,10), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,10), (0,2,44), (2,3,10), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,10), (0,2,44), (2,3,10), (2,4,44), (4,5,10), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,10), (0,2,44), (2,3,10), (2,4,44), (4,5,10), (2,6,44), (6,7,10), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,10), (0,2,44), (2,3,10), (2,4,44), (4,5,10), (2,6,44), (6,7,10), (2,8,44), (8,9,10), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,10), (0,2,44), (2,3,10), (2,4,44), (4,5,10), (2,6,44), (6,7,10), (2,8,44), (8,9,10), (2,10,44), (10,11,10), (2,12,44))), 0, 39), ...
Average Size: 22.56937799043062
Average Fitness: 3.990589576063078E7
Fitness Variation: 4.433770107261428E7
Distribution: #0 -> 0.328, neg -> 0.090, #1 -> 0.076, divide -> 0.074, growEdge -> 0.068, 7 -> 0.052, GraphValue(0,Vector()) -> 0.037, 44 -> 0.037, 22 -> 0.031, dec -> 0.025
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 34 generations ago.
------------
[320.922s]Generation 71
Best Result: (fitness: 130559153.1, performance: 141298044.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), 10), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,10), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,10), (0,2,44), (2,3,10), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,10), (0,2,44), (2,3,10), (2,4,44), (4,5,10), (4,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,10), (0,2,44), (2,3,10), (2,4,44), (4,5,10), (4,6,44), (6,7,10), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,10), (0,2,44), (2,3,10), (2,4,44), (4,5,10), (4,6,44), (6,7,10), (2,8,44), (8,9,10), (0,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,10), (0,2,44), (2,3,10), (2,4,44), (4,5,10), (4,6,44), (6,7,10), (2,8,44), (8,9,10), (0,10,44), (10,11,10), (10,12,44))), 0, 39), ...
Average Size: 22.44736842105263
Average Fitness: 4.6228733778053686E7
Fitness Variation: 4.755186774368327E7
Distribution: #0 -> 0.338, neg -> 0.088, divide -> 0.076, #1 -> 0.076, growEdge -> 0.066, 7 -> 0.049, GraphValue(0,Vector()) -> 0.040, 44 -> 0.034, 22 -> 0.028, modular -> 0.021
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 35 generations ago.
------------
[334.153s]Generation 72
Best Result: (fitness: 145592583.3, performance: 157568020.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,7), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44), (6,7,7), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44), (6,7,7), (2,8,44), (8,9,7), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44), (6,7,7), (2,8,44), (8,9,7), (2,10,44), (10,11,7), (2,12,44))), 0, 39), ...
Average Size: 22.002392344497608
Average Fitness: 4.8400563429583296E7
Fitness Variation: 5.102379653709832E7
Distribution: #0 -> 0.351, neg -> 0.088, divide -> 0.079, #1 -> 0.078, growEdge -> 0.061, 7 -> 0.043, GraphValue(0,Vector()) -> 0.042, 44 -> 0.033, modular -> 0.026, 22 -> 0.023
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 36 generations ago.
------------
[349.206s]Generation 73
Best Result: (fitness: 145592583.3, performance: 157568020.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,7), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44), (6,7,7), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44), (6,7,7), (2,8,44), (8,9,7), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44), (6,7,7), (2,8,44), (8,9,7), (2,10,44), (10,11,7), (2,12,44))), 0, 39), ...
Average Size: 22.3444976076555
Average Fitness: 5.824452205801566E7
Fitness Variation: 5.4376225248312995E7
Distribution: #0 -> 0.347, neg -> 0.088, divide -> 0.088, #1 -> 0.075, growEdge -> 0.059, GraphValue(0,Vector()) -> 0.040, 7 -> 0.038, 44 -> 0.035, modular -> 0.029, 22 -> 0.022
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 37 generations ago.
------------
[363.539s]Generation 74
Best Result: (fitness: 145592583.3, performance: 157568020.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44), (10,11,2), (2,12,44))), 0, 39), ...
Average Size: 22.641148325358852
Average Fitness: 5.791035493803791E7
Fitness Variation: 5.669653478526954E7
Distribution: #0 -> 0.339, divide -> 0.096, neg -> 0.081, #1 -> 0.072, growEdge -> 0.055, GraphValue(0,Vector()) -> 0.039, 44 -> 0.035, 7 -> 0.032, modular -> 0.032, 4 -> 0.024
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 38 generations ago.
------------
[381.083s]Generation 75
Best Result: (fitness: 145592583.3, performance: 157568020.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,7), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44), (6,7,7), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44), (6,7,7), (2,8,44), (8,9,7), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44), (6,7,7), (2,8,44), (8,9,7), (2,10,44), (10,11,7), (2,12,44))), 0, 39), ...
Average Size: 22.880382775119617
Average Fitness: 6.0318987824909344E7
Fitness Variation: 5.779215526333194E7
Distribution: #0 -> 0.331, divide -> 0.098, neg -> 0.083, #1 -> 0.071, growEdge -> 0.055, GraphValue(0,Vector()) -> 0.038, 44 -> 0.035, modular -> 0.034, 4 -> 0.028, 7 -> 0.027
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 39 generations ago.
------------
[400.046s]Generation 76
Best Result: (fitness: 145592583.3, performance: 157568020.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44), (10,11,2), (2,12,44))), 0, 39), ...
Average Size: 22.394736842105264
Average Fitness: 6.366377711875675E7
Fitness Variation: 5.953266344394711E7
Distribution: #0 -> 0.338, divide -> 0.094, neg -> 0.082, #1 -> 0.074, growEdge -> 0.057, GraphValue(0,Vector()) -> 0.040, 44 -> 0.038, 10 -> 0.037, modular -> 0.033, 7 -> 0.022
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 40 generations ago.
------------
[416.706s]Generation 77
Best Result: (fitness: 145592583.3, performance: 157568020.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44), (10,11,2), (2,12,44))), 0, 39), ...
Average Size: 21.67464114832536
Average Fitness: 7.118669355488837E7
Fitness Variation: 6.150157302292023E7
Distribution: #0 -> 0.346, divide -> 0.086, neg -> 0.083, #1 -> 0.077, growEdge -> 0.059, 10 -> 0.050, GraphValue(0,Vector()) -> 0.042, 44 -> 0.041, modular -> 0.032, 39 -> 0.021
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 41 generations ago.
------------
[433.065s]Generation 78
Best Result: (fitness: 145592583.3, performance: 157568020.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44), (10,11,2), (2,12,44))), 0, 39), ...
Average Size: 20.550239234449762
Average Fitness: 6.580382048460027E7
Fitness Variation: 6.331342264839443E7
Distribution: #0 -> 0.351, neg -> 0.085, #1 -> 0.081, divide -> 0.077, growEdge -> 0.062, 10 -> 0.053, GraphValue(0,Vector()) -> 0.046, 44 -> 0.043, modular -> 0.032, addNode -> 0.023
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 42 generations ago.
------------
[448.097s]Generation 79
Best Result: (fitness: 145592583.3, performance: 157568020.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,7), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44), (6,7,7), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44), (6,7,7), (2,8,44), (8,9,7), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44), (6,7,7), (2,8,44), (8,9,7), (2,10,44), (10,11,7), (2,12,44))), 0, 39), ...
Average Size: 19.995215311004785
Average Fitness: 6.535831563140454E7
Fitness Variation: 6.458758026579846E7
Distribution: #0 -> 0.354, #1 -> 0.086, neg -> 0.084, divide -> 0.071, growEdge -> 0.064, 10 -> 0.049, GraphValue(0,Vector()) -> 0.048, 44 -> 0.044, modular -> 0.030, addNode -> 0.023
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 43 generations ago.
------------
[463.528s]Generation 80
Best Result: (fitness: 145592583.3, performance: 157568020.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), 2), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44), (10,11,2), (2,12,44))), 0, 39), ...
Average Size: 20.411483253588518
Average Fitness: 6.53509446756432E7
Fitness Variation: 6.507219115578664E7
Distribution: #0 -> 0.377, #1 -> 0.084, neg -> 0.082, divide -> 0.068, growEdge -> 0.062, GraphValue(0,Vector()) -> 0.046, 44 -> 0.043, 10 -> 0.036, modular -> 0.029, 39 -> 0.022
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 44 generations ago.
------------
[479.149s]Generation 81
Best Result: (fitness: 145592583.3, performance: 157568020.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 2 ; iter: 2; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44), (10,11,2), (2,12,44))), 0, 39), ...
Average Size: 20.22488038277512
Average Fitness: 7.281787195409982E7
Fitness Variation: 6.611585915577798E7
Distribution: #0 -> 0.386, #1 -> 0.086, neg -> 0.085, divide -> 0.067, growEdge -> 0.066, 44 -> 0.048, GraphValue(0,Vector()) -> 0.047, modular -> 0.028, 10 -> 0.027, 39 -> 0.023
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 45 generations ago.
------------
[491.643s]Generation 82
Best Result: (fitness: 145592583.3, performance: 157568020.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), 7), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,7), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44), (6,7,7), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44), (6,7,7), (2,8,44), (8,9,7), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,7), (0,2,44), (2,3,7), (2,4,44), (4,5,7), (2,6,44), (6,7,7), (2,8,44), (8,9,7), (2,10,44), (10,11,7), (2,12,44))), 0, 39), ...
Average Size: 19.949760765550238
Average Fitness: 7.20507634118454E7
Fitness Variation: 6.769464915916654E7
Distribution: #0 -> 0.394, neg -> 0.088, #1 -> 0.088, divide -> 0.068, growEdge -> 0.066, 44 -> 0.047, GraphValue(0,Vector()) -> 0.047, modular -> 0.029, 39 -> 0.025, addNode -> 0.023
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 46 generations ago.
------------
[505.158s]Generation 83
Best Result: (fitness: 145592583.3, performance: 157568020.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), 2), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44), (10,11,2), (2,12,44))), 0, 39), ...
Average Size: 19.885167464114833
Average Fitness: 6.895971235237513E7
Fitness Variation: 6.815266636999357E7
Distribution: #0 -> 0.400, neg -> 0.088, #1 -> 0.086, divide -> 0.068, growEdge -> 0.066, GraphValue(0,Vector()) -> 0.048, 44 -> 0.045, modular -> 0.030, 2 -> 0.025, 39 -> 0.025
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 47 generations ago.
------------
[517.795s]Generation 84
Best Result: (fitness: 145592583.3, performance: 157568020.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44), (10,11,2), (2,12,44))), 0, 39), ...
Average Size: 19.973684210526315
Average Fitness: 7.681086508384368E7
Fitness Variation: 6.877594371093053E7
Distribution: #0 -> 0.397, neg -> 0.090, #1 -> 0.086, divide -> 0.070, growEdge -> 0.065, GraphValue(0,Vector()) -> 0.048, 44 -> 0.044, modular -> 0.028, 2 -> 0.028, 39 -> 0.024
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 48 generations ago.
------------
[528.233s]Generation 85
Best Result: (fitness: 145592583.3, performance: 157568020.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44), (10,11,2), (2,12,44))), 0, 39), ...
Average Size: 19.564593301435405
Average Fitness: 7.348314006479824E7
Fitness Variation: 6.94729839087014E7
Distribution: #0 -> 0.403, neg -> 0.090, #1 -> 0.089, divide -> 0.068, growEdge -> 0.067, GraphValue(0,Vector()) -> 0.047, 44 -> 0.044, 2 -> 0.029, 39 -> 0.027, modular -> 0.025
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 49 generations ago.
------------
[537.445s]Generation 86
Best Result: (fitness: 145592583.3, performance: 157568020.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44), (10,11,2), (2,12,44))), 0, 39), ...
Average Size: 19.6866028708134
Average Fitness: 7.653085046334033E7
Fitness Variation: 7.014420188717125E7
Distribution: #0 -> 0.399, #1 -> 0.089, neg -> 0.088, divide -> 0.070, growEdge -> 0.068, GraphValue(0,Vector()) -> 0.046, 44 -> 0.044, 2 -> 0.030, 39 -> 0.027, modular -> 0.027
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 50 generations ago.
------------
[549.398s]Generation 87
Best Result: (fitness: 147500323.1, performance: 157568020.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44), (10,11,2), (2,12,44))), 0, 39), ...
Average Size: 19.330143540669855
Average Fitness: 7.636813992670602E7
Fitness Variation: 7.015284681474185E7
Distribution: #0 -> 0.408, #1 -> 0.090, neg -> 0.088, growEdge -> 0.069, divide -> 0.069, GraphValue(0,Vector()) -> 0.048, 44 -> 0.046, 2 -> 0.031, modular -> 0.029, 7 -> 0.025
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 51 generations ago.
------------
[561.356s]Generation 88
Best Result: (fitness: 147500323.1, performance: 157568020.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 39
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 39), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 39), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 39), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44))), 0, 39), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44))), 0, 39), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44))), 0, 39), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44), (10,11,2), (2,12,44))), 0, 39), ...
Average Size: 19.523923444976077
Average Fitness: 7.021892995605381E7
Fitness Variation: 6.988887074080735E7
Distribution: #0 -> 0.402, neg -> 0.091, #1 -> 0.089, growEdge -> 0.068, divide -> 0.068, GraphValue(0,Vector()) -> 0.047, 44 -> 0.044, 2 -> 0.032, modular -> 0.028, 7 -> 0.025
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 52 generations ago.
------------
[573.028s]Generation 89
Best Result: (fitness: 149535503.4, performance: 163151591.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> dec(#0)
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), #0, 47); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 1), Vector(GraphValue(3,Vector((0,1,2), (0,2,47))), 0, 1), Vector(GraphValue(5,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47))), 0, 1), Vector(GraphValue(7,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47))), 0, 1), Vector(GraphValue(9,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47), (6,7,2), (2,8,47))), 0, 1), Vector(GraphValue(11,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47), (6,7,2), (2,8,47), (8,9,2), (2,10,47))), 0, 1), Vector(GraphValue(13,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47), (6,7,2), (2,8,47), (8,9,2), (2,10,47), (10,11,2), (2,12,47))), 0, 1), ...
Average Size: 19.583732057416267
Average Fitness: 7.701357514227249E7
Fitness Variation: 6.977096184199561E7
Distribution: #0 -> 0.400, #1 -> 0.089, neg -> 0.088, divide -> 0.070, growEdge -> 0.067, GraphValue(0,Vector()) -> 0.047, 44 -> 0.045, 2 -> 0.034, modular -> 0.027, 39 -> 0.024
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 53 generations ago.
------------
[583.850s]Generation 90
Best Result: (fitness: 149535503.4, performance: 163151591.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> dec(#0)
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), #0, 47); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 1), Vector(GraphValue(3,Vector((0,1,2), (0,2,47))), 0, 1), Vector(GraphValue(5,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47))), 0, 1), Vector(GraphValue(7,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47))), 0, 1), Vector(GraphValue(9,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47), (6,7,2), (2,8,47))), 0, 1), Vector(GraphValue(11,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47), (6,7,2), (2,8,47), (8,9,2), (2,10,47))), 0, 1), Vector(GraphValue(13,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47), (6,7,2), (2,8,47), (8,9,2), (2,10,47), (10,11,2), (2,12,47))), 0, 1), ...
Average Size: 19.351674641148325
Average Fitness: 7.167250178784215E7
Fitness Variation: 7.0573428026593E7
Distribution: #0 -> 0.410, #1 -> 0.090, neg -> 0.088, growEdge -> 0.068, divide -> 0.067, GraphValue(0,Vector()) -> 0.048, 44 -> 0.044, 2 -> 0.039, modular -> 0.029, addNode -> 0.025
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 54 generations ago.
------------
[597.203s]Generation 91
Best Result: (fitness: 149535503.4, performance: 163151591.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> dec(#0)
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), #0, 47); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 1), Vector(GraphValue(3,Vector((0,1,2), (0,2,47))), 0, 1), Vector(GraphValue(5,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47))), 0, 1), Vector(GraphValue(7,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47))), 0, 1), Vector(GraphValue(9,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47), (6,7,2), (2,8,47))), 0, 1), Vector(GraphValue(11,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47), (6,7,2), (2,8,47), (8,9,2), (2,10,47))), 0, 1), Vector(GraphValue(13,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47), (6,7,2), (2,8,47), (8,9,2), (2,10,47), (10,11,2), (2,12,47))), 0, 1), ...
Average Size: 19.444976076555022
Average Fitness: 7.569759374225675E7
Fitness Variation: 7.007675307303861E7
Distribution: #0 -> 0.413, #1 -> 0.089, neg -> 0.087, growEdge -> 0.068, divide -> 0.067, GraphValue(0,Vector()) -> 0.048, 44 -> 0.043, 2 -> 0.037, modular -> 0.031, addNode -> 0.024
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 55 generations ago.
------------
[609.279s]Generation 92
Best Result: (fitness: 149535503.4, performance: 163151591.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> dec(#0)
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), #0, 47); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 1), Vector(GraphValue(3,Vector((0,1,2), (0,2,47))), 0, 1), Vector(GraphValue(5,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47))), 0, 1), Vector(GraphValue(7,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47))), 0, 1), Vector(GraphValue(9,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47), (6,7,2), (2,8,47))), 0, 1), Vector(GraphValue(11,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47), (6,7,2), (2,8,47), (8,9,2), (2,10,47))), 0, 1), Vector(GraphValue(13,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47), (6,7,2), (2,8,47), (8,9,2), (2,10,47), (10,11,2), (2,12,47))), 0, 1), ...
Average Size: 19.882775119617225
Average Fitness: 7.562790108291654E7
Fitness Variation: 6.986883868986472E7
Distribution: #0 -> 0.420, #1 -> 0.087, neg -> 0.082, growEdge -> 0.067, divide -> 0.064, GraphValue(0,Vector()) -> 0.048, 44 -> 0.039, 2 -> 0.035, modular -> 0.033, addNode -> 0.024
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 56 generations ago.
------------
[620.362s]Generation 93
Best Result: (fitness: 149535503.4, performance: 163151591.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> modular(#0, #0)
[O2: EInt] -> dec(#0)
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), #0, 47); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 1), Vector(GraphValue(3,Vector((0,1,2), (0,2,47))), 0, 1), Vector(GraphValue(5,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47))), 0, 1), Vector(GraphValue(7,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47))), 0, 1), Vector(GraphValue(9,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47), (6,7,2), (2,8,47))), 0, 1), Vector(GraphValue(11,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47), (6,7,2), (2,8,47), (8,9,2), (2,10,47))), 0, 1), Vector(GraphValue(13,Vector((0,1,2), (0,2,47), (2,3,2), (2,4,47), (4,5,2), (2,6,47), (6,7,2), (2,8,47), (8,9,2), (2,10,47), (10,11,2), (2,12,47))), 0, 1), ...
Average Size: 20.33492822966507
Average Fitness: 6.906833540543829E7
Fitness Variation: 7.006939265730748E7
Distribution: #0 -> 0.424, #1 -> 0.085, neg -> 0.083, growEdge -> 0.066, divide -> 0.066, GraphValue(0,Vector()) -> 0.044, modular -> 0.035, 44 -> 0.035, 2 -> 0.030, addNode -> 0.022
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 57 generations ago.
------------
[633.596s]Generation 94
Best Result: (fitness: 151832623.2, performance: 163151591.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> dec(#0)
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 1), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 1), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 1), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44))), 0, 1), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44))), 0, 1), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44))), 0, 1), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44), (10,11,2), (2,12,44))), 0, 1), ...
Average Size: 20.392344497607656
Average Fitness: 7.254489466221507E7
Fitness Variation: 7.014410874404849E7
Distribution: #0 -> 0.430, #1 -> 0.085, neg -> 0.083, growEdge -> 0.066, divide -> 0.066, GraphValue(0,Vector()) -> 0.045, modular -> 0.030, 2 -> 0.030, 44 -> 0.029, addNode -> 0.023
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 58 generations ago.
------------
[645.550s]Generation 95
Best Result: (fitness: 151832623.2, performance: 163151591.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> dec(#0)
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 1), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 1), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 1), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44))), 0, 1), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44))), 0, 1), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44))), 0, 1), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44), (10,11,2), (2,12,44))), 0, 1), ...
Average Size: 20.236842105263158
Average Fitness: 7.820981387433027E7
Fitness Variation: 7.103772615562704E7
Distribution: #0 -> 0.437, #1 -> 0.085, neg -> 0.083, divide -> 0.066, growEdge -> 0.065, GraphValue(0,Vector()) -> 0.047, 2 -> 0.032, modular -> 0.031, 44 -> 0.023, addNode -> 0.023
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 59 generations ago.
------------
[658.235s]Generation 96
Best Result: (fitness: 151832623.2, performance: 163151591.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> dec(#0)
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 1), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 1), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 1), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44))), 0, 1), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44))), 0, 1), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44))), 0, 1), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44), (10,11,2), (2,12,44))), 0, 1), ...
Average Size: 20.157894736842106
Average Fitness: 7.727403005652893E7
Fitness Variation: 7.111676419988124E7
Distribution: #0 -> 0.440, #1 -> 0.086, neg -> 0.084, growEdge -> 0.066, divide -> 0.065, GraphValue(0,Vector()) -> 0.045, 2 -> 0.034, 47 -> 0.029, modular -> 0.027, dec -> 0.024
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 60 generations ago.
------------
[669.734s]Generation 97
Best Result: (fitness: 151832623.2, performance: 163151591.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> dec(#0)
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), #0, 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 1), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 1), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 1), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44))), 0, 1), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44))), 0, 1), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44))), 0, 1), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (2,6,44), (6,7,2), (2,8,44), (8,9,2), (2,10,44), (10,11,2), (2,12,44))), 0, 1), ...
Average Size: 20.215311004784688
Average Fitness: 8.188279969337505E7
Fitness Variation: 7.134559574632205E7
Distribution: #0 -> 0.446, neg -> 0.089, #1 -> 0.085, divide -> 0.068, growEdge -> 0.065, GraphValue(0,Vector()) -> 0.046, 2 -> 0.035, 47 -> 0.033, dec -> 0.025, modular -> 0.024
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 61 generations ago.
------------
[684.218s]Generation 98
Best Result: (fitness: 210425014.2, performance: 264843016.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> dec(#0)
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(#0, #0)), 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 1), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 1), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44))), 0, 1), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (4,6,44))), 0, 1), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (4,6,44), (6,7,2), (4,8,44))), 0, 1), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (4,6,44), (6,7,2), (4,8,44), (8,9,2), (4,10,44))), 0, 1), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (4,6,44), (6,7,2), (4,8,44), (8,9,2), (4,10,44), (10,11,2), (4,12,44))), 0, 1), ...
Average Size: 20.217703349282296
Average Fitness: 7.486846201380277E7
Fitness Variation: 7.15804064077819E7
Distribution: #0 -> 0.445, #1 -> 0.087, neg -> 0.086, divide -> 0.068, growEdge -> 0.067, GraphValue(0,Vector()) -> 0.046, 2 -> 0.035, 47 -> 0.031, dec -> 0.025, addNode -> 0.024
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 62 generations ago.
------------
[699.768s]Generation 99
Best Result: (fitness: 316080551.3, performance: 393535193.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 31
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(#0, #0)), 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 31), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 31), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44))), 0, 31), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (4,6,44))), 0, 31), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (4,6,44), (6,7,2), (4,8,44))), 0, 31), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (4,6,44), (6,7,2), (4,8,44), (8,9,2), (4,10,44))), 0, 31), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (4,6,44), (6,7,2), (4,8,44), (8,9,2), (4,10,44), (10,11,2), (4,12,44))), 0, 31), ...
Average Size: 19.88755980861244
Average Fitness: 7.76568632552942E7
Fitness Variation: 7.308973871631616E7
Distribution: #0 -> 0.434, #1 -> 0.087, neg -> 0.087, divide -> 0.068, growEdge -> 0.066, GraphValue(0,Vector()) -> 0.047, 2 -> 0.037, 47 -> 0.027, dec -> 0.025, addNode -> 0.024
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 63 generations ago.
------------
[713.364s]Generation 100
Best Result: (fitness: 316080551.3, performance: 393535193.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 31
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(#0, #0)), 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 31), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 31), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44))), 0, 31), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (4,6,44))), 0, 31), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (4,6,44), (6,7,2), (4,8,44))), 0, 31), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (4,6,44), (6,7,2), (4,8,44), (8,9,2), (4,10,44))), 0, 31), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (4,6,44), (6,7,2), (4,8,44), (8,9,2), (4,10,44), (10,11,2), (4,12,44))), 0, 31), ...
Average Size: 19.657894736842106
Average Fitness: 8.191360018858802E7
Fitness Variation: 7.52240069084121E7
Distribution: #0 -> 0.426, #1 -> 0.090, neg -> 0.089, growEdge -> 0.069, divide -> 0.068, GraphValue(0,Vector()) -> 0.048, 2 -> 0.038, dec -> 0.027, addNode -> 0.024, 47 -> 0.024
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 64 generations ago.
------------
[722.968s]Generation 101
Best Result: (fitness: 316080551.3, performance: 393535193.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 31
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(#0, #0)), 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 31), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 31), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44))), 0, 31), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (4,6,44))), 0, 31), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (4,6,44), (6,7,2), (4,8,44))), 0, 31), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (4,6,44), (6,7,2), (4,8,44), (8,9,2), (4,10,44))), 0, 31), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (4,6,44), (6,7,2), (4,8,44), (8,9,2), (4,10,44), (10,11,2), (4,12,44))), 0, 31), ...
Average Size: 19.294258373205743
Average Fitness: 7.734028996125029E7
Fitness Variation: 8.0478462107688E7
Distribution: #0 -> 0.420, #1 -> 0.090, neg -> 0.088, growEdge -> 0.068, divide -> 0.068, GraphValue(0,Vector()) -> 0.048, 2 -> 0.037, 44 -> 0.028, dec -> 0.025, addNode -> 0.024
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 65 generations ago.
------------
[739.304s]Generation 102
Best Result: (fitness: 399368254.0, performance: 572296902.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 31
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 31), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 31), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 31), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 31), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 31), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 31), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 31), ...
Average Size: 19.48803827751196
Average Fitness: 8.16937962390751E7
Fitness Variation: 8.390151707592689E7
Distribution: #0 -> 0.407, #1 -> 0.089, neg -> 0.086, growEdge -> 0.069, divide -> 0.068, GraphValue(0,Vector()) -> 0.048, 44 -> 0.035, 2 -> 0.032, dec -> 0.025, addNode -> 0.024
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 66 generations ago.
------------
[752.604s]Generation 103
Best Result: (fitness: 399368254.0, performance: 572296902.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 31
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 31), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 31), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 31), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 31), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 31), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 31), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 31), ...
Average Size: 19.880382775119617
Average Fitness: 8.403779287103014E7
Fitness Variation: 9.617913440118153E7
Distribution: #0 -> 0.395, #1 -> 0.083, neg -> 0.081, divide -> 0.068, growEdge -> 0.065, GraphValue(0,Vector()) -> 0.047, 44 -> 0.036, 2 -> 0.029, dec -> 0.022, addNode -> 0.022
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 67 generations ago.
------------
[773.299s]Generation 104
Best Result: (fitness: 399368254.0, performance: 572296902.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 31
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 31), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 31), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 31), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 31), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 31), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 31), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 31), ...
Average Size: 20.23444976076555
Average Fitness: 9.525117933973897E7
Fitness Variation: 1.1219883036712447E8
Distribution: #0 -> 0.393, #1 -> 0.079, neg -> 0.076, divide -> 0.064, growEdge -> 0.060, GraphValue(0,Vector()) -> 0.042, plus -> 0.039, 44 -> 0.037, 31 -> 0.033, 2 -> 0.027
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 68 generations ago.
------------
[795.406s]Generation 105
Best Result: (fitness: 399368254.0, performance: 572296902.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 31
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(plus(2, #0), 2)), 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 31), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 31), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 31), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 31), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 31), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 31), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 31), ...
Average Size: 21.055023923444978
Average Fitness: 1.0612443376791178E8
Fitness Variation: 1.2803553419533028E8
Distribution: #0 -> 0.393, #1 -> 0.075, neg -> 0.073, divide -> 0.059, growEdge -> 0.058, plus -> 0.053, 31 -> 0.048, GraphValue(0,Vector()) -> 0.041, 44 -> 0.037, 2 -> 0.028
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 69 generations ago.
------------
[821.392s]Generation 106
Best Result: (fitness: 399368254.0, performance: 572296902.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 31
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(plus(2, #0), 2)), 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 31), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 31), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 31), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 31), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 31), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 31), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 31), ...
Average Size: 22.423444976076556
Average Fitness: 1.309203400845598E8
Fitness Variation: 1.418417711781635E8
Distribution: #0 -> 0.389, neg -> 0.072, #1 -> 0.069, plus -> 0.065, divide -> 0.058, 31 -> 0.056, growEdge -> 0.053, GraphValue(0,Vector()) -> 0.037, 44 -> 0.034, times -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 70 generations ago.
------------
[848.376s]Generation 107
Best Result: (fitness: 400352421.9, performance: 573707220.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 11
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(#0, plus(#0, #0))), 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 11), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 11), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 11), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 11), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 11), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 11), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 11), ...
Average Size: 22.39712918660287
Average Fitness: 1.5317437160530636E8
Fitness Variation: 1.5227098773090732E8
Distribution: #0 -> 0.383, plus -> 0.070, neg -> 0.070, #1 -> 0.069, 31 -> 0.066, divide -> 0.056, growEdge -> 0.052, GraphValue(0,Vector()) -> 0.038, times -> 0.037, 2 -> 0.034
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 71 generations ago.
------------
[873.990s]Generation 108
Best Result: (fitness: 399368254.0, performance: 572296902.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 31
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(#0, plus(#0, #0))), 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 31), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 31), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 31), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 31), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 31), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 31), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 31), ...
Average Size: 22.727272727272727
Average Fitness: 1.684018012487716E8
Fitness Variation: 1.6449524561161613E8
Distribution: #0 -> 0.389, plus -> 0.081, neg -> 0.069, 31 -> 0.068, #1 -> 0.066, divide -> 0.052, growEdge -> 0.050, times -> 0.037, GraphValue(0,Vector()) -> 0.036, 2 -> 0.033
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 72 generations ago.
------------
[898.280s]Generation 109
Best Result: (fitness: 399368254.0, performance: 572296902.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 31
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 31), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 31), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 31), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 31), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 31), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 31), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 31), ...
Average Size: 23.181818181818183
Average Fitness: 1.753679169811643E8
Fitness Variation: 1.7079778234357473E8
Distribution: #0 -> 0.392, plus -> 0.087, neg -> 0.072, #1 -> 0.065, 31 -> 0.064, divide -> 0.055, growEdge -> 0.050, times -> 0.037, 2 -> 0.036, GraphValue(0,Vector()) -> 0.034
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 73 generations ago.
------------
[919.206s]Generation 110
Best Result: (fitness: 412405177.5, performance: 590978885.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 29
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 29), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 29), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 29), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 29), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 29), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 29), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 29), ...
Average Size: 23.047846889952154
Average Fitness: 1.8396643554135746E8
Fitness Variation: 1.788784754238446E8
Distribution: #0 -> 0.392, plus -> 0.097, neg -> 0.069, 31 -> 0.066, #1 -> 0.064, divide -> 0.053, growEdge -> 0.049, 2 -> 0.042, times -> 0.036, GraphValue(0,Vector()) -> 0.034
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 74 generations ago.
------------
[936.982s]Generation 111
Best Result: (fitness: 412405177.5, performance: 590978885.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 29
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 29), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 29), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 29), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 29), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 29), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 29), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 29), ...
Average Size: 23.09090909090909
Average Fitness: 1.8312966962800252E8
Fitness Variation: 1.8747752477959338E8
Distribution: #0 -> 0.388, plus -> 0.105, neg -> 0.064, #1 -> 0.063, 31 -> 0.062, divide -> 0.049, growEdge -> 0.048, 2 -> 0.046, times -> 0.036, GraphValue(0,Vector()) -> 0.034
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 75 generations ago.
------------
[962.321s]Generation 112
Best Result: (fitness: 412405177.5, performance: 590978885.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 29
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 29), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 29), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 29), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 29), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 29), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 29), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 29), ...
Average Size: 23.232057416267942
Average Fitness: 1.7569493445390937E8
Fitness Variation: 1.8461515945899183E8
Distribution: #0 -> 0.388, plus -> 0.103, neg -> 0.064, #1 -> 0.063, 31 -> 0.061, 2 -> 0.050, divide -> 0.050, growEdge -> 0.047, times -> 0.035, GraphValue(0,Vector()) -> 0.033
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 76 generations ago.
------------
[987.297s]Generation 113
Best Result: (fitness: 422788945.0, performance: 605858881.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 29
*
[S0: EInt]{ seed: 31 ; iter: 2; seedExpr: 31 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 29), Vector(GraphValue(3,Vector((0,1,31), (1,2,44))), 0, 29), Vector(GraphValue(5,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44))), 0, 29), Vector(GraphValue(7,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 29), Vector(GraphValue(9,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 29), Vector(GraphValue(11,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 29), Vector(GraphValue(13,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 29), ...
Average Size: 23.49043062200957
Average Fitness: 1.6874870045214525E8
Fitness Variation: 1.8562365662871507E8
Distribution: #0 -> 0.381, plus -> 0.107, neg -> 0.063, 31 -> 0.061, #1 -> 0.061, 2 -> 0.059, divide -> 0.050, growEdge -> 0.047, times -> 0.034, GraphValue(0,Vector()) -> 0.033
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 77 generations ago.
------------
[1009.829s]Generation 114
Best Result: (fitness: 422788945.0, performance: 605858881.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 29
*
[S0: EInt]{ seed: 31 ; iter: 2; seedExpr: 31 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 29), Vector(GraphValue(3,Vector((0,1,31), (1,2,44))), 0, 29), Vector(GraphValue(5,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44))), 0, 29), Vector(GraphValue(7,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 29), Vector(GraphValue(9,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 29), Vector(GraphValue(11,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 29), Vector(GraphValue(13,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 29), ...
Average Size: 22.933014354066987
Average Fitness: 1.757725242553281E8
Fitness Variation: 1.873179405070401E8
Distribution: #0 -> 0.375, plus -> 0.104, #1 -> 0.065, neg -> 0.065, 2 -> 0.063, 31 -> 0.060, divide -> 0.049, growEdge -> 0.048, times -> 0.033, 44 -> 0.032
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 78 generations ago.
------------
[1041.131s]Generation 115
Best Result: (fitness: 422788945.0, performance: 605858881.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 29
*
[S0: EInt]{ seed: 31 ; iter: 2; seedExpr: 31 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 29), Vector(GraphValue(3,Vector((0,1,31), (1,2,44))), 0, 29), Vector(GraphValue(5,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44))), 0, 29), Vector(GraphValue(7,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 29), Vector(GraphValue(9,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 29), Vector(GraphValue(11,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 29), Vector(GraphValue(13,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 29), ...
Average Size: 23.196172248803826
Average Fitness: 1.7044554179435435E8
Fitness Variation: 1.850919036770583E8
Distribution: #0 -> 0.377, plus -> 0.107, neg -> 0.062, #1 -> 0.062, 31 -> 0.059, 2 -> 0.059, growEdge -> 0.047, divide -> 0.047, times -> 0.035, 44 -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 79 generations ago.
------------
[1075.815s]Generation 116
Best Result: (fitness: 422788945.0, performance: 605858881.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 29
*
[S0: EInt]{ seed: 31 ; iter: 2; seedExpr: 31 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 29), Vector(GraphValue(3,Vector((0,1,31), (1,2,44))), 0, 29), Vector(GraphValue(5,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44))), 0, 29), Vector(GraphValue(7,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 29), Vector(GraphValue(9,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 29), Vector(GraphValue(11,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 29), Vector(GraphValue(13,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 29), ...
Average Size: 23.354066985645932
Average Fitness: 1.8176647706077126E8
Fitness Variation: 1.837689391343445E8
Distribution: #0 -> 0.383, plus -> 0.107, neg -> 0.064, #1 -> 0.062, 31 -> 0.056, 2 -> 0.052, divide -> 0.049, growEdge -> 0.047, times -> 0.035, 44 -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 80 generations ago.
------------
[1105.296s]Generation 117
Best Result: (fitness: 422788945.0, performance: 605858881.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 29
*
[S0: EInt]{ seed: 31 ; iter: 2; seedExpr: 31 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 29), Vector(GraphValue(3,Vector((0,1,31), (1,2,44))), 0, 29), Vector(GraphValue(5,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44))), 0, 29), Vector(GraphValue(7,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 29), Vector(GraphValue(9,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 29), Vector(GraphValue(11,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 29), Vector(GraphValue(13,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 29), ...
Average Size: 23.270334928229666
Average Fitness: 1.8285448958034417E8
Fitness Variation: 1.8599499429679328E8
Distribution: #0 -> 0.380, plus -> 0.106, #1 -> 0.063, neg -> 0.063, 31 -> 0.056, 2 -> 0.051, divide -> 0.049, growEdge -> 0.048, times -> 0.033, 44 -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 81 generations ago.
------------
[1139.943s]Generation 118
Best Result: (fitness: 434208597.0, performance: 622223305.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 29
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(29, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 29), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 29), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 29), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 29), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (6,8,44))), 0, 29), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (6,8,44), (8,9,2), (4,10,44))), 0, 29), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (6,8,44), (8,9,2), (4,10,44), (10,11,2), (6,12,44))), 0, 29), ...
Average Size: 23.342105263157894
Average Fitness: 1.7143201153023735E8
Fitness Variation: 1.8523635300753844E8
Distribution: #0 -> 0.384, plus -> 0.104, neg -> 0.064, #1 -> 0.064, 31 -> 0.053, 2 -> 0.050, divide -> 0.049, growEdge -> 0.048, times -> 0.034, 44 -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 82 generations ago.
------------
[1166.970s]Generation 119
Best Result: (fitness: 434208597.0, performance: 622223305.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 29
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(29, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 29), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 29), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 29), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 29), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (6,8,44))), 0, 29), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (6,8,44), (8,9,2), (4,10,44))), 0, 29), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (6,8,44), (8,9,2), (4,10,44), (10,11,2), (6,12,44))), 0, 29), ...
Average Size: 23.78708133971292
Average Fitness: 1.6260723877101466E8
Fitness Variation: 1.8632747103386772E8
Distribution: #0 -> 0.381, plus -> 0.106, neg -> 0.064, #1 -> 0.060, 31 -> 0.050, 2 -> 0.050, divide -> 0.049, growEdge -> 0.046, times -> 0.034, 44 -> 0.030
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 83 generations ago.
------------
[1198.261s]Generation 120
Best Result: (fitness: 434208597.0, performance: 622223305.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 29
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(29, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 29), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 29), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44))), 0, 29), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 29), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (6,8,44))), 0, 29), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (6,8,44), (8,9,2), (4,10,44))), 0, 29), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (6,8,44), (8,9,2), (4,10,44), (10,11,2), (6,12,44))), 0, 29), ...
Average Size: 23.741626794258373
Average Fitness: 1.718605489336399E8
Fitness Variation: 1.895729313349348E8
Distribution: #0 -> 0.389, plus -> 0.110, neg -> 0.064, #1 -> 0.061, 31 -> 0.049, divide -> 0.049, growEdge -> 0.046, 2 -> 0.043, times -> 0.034, 44 -> 0.029
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 84 generations ago.
------------
[1234.651s]Generation 121
Best Result: (fitness: 449655116.3, performance: 596640799.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 31 ; iter: 2; seedExpr: 31 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,31), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 43), ...
Average Size: 23.95693779904306
Average Fitness: 1.808847808353005E8
Fitness Variation: 1.9073683970667052E8
Distribution: #0 -> 0.391, plus -> 0.106, neg -> 0.066, #1 -> 0.060, divide -> 0.049, growEdge -> 0.047, 31 -> 0.047, 2 -> 0.036, times -> 0.034, 44 -> 0.030
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 85 generations ago.
------------
[1258.725s]Generation 122
Best Result: (fitness: 449655116.3, performance: 596640799.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 31 ; iter: 2; seedExpr: 31 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,31), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 43), ...
Average Size: 23.428229665071772
Average Fitness: 1.9012985075963765E8
Fitness Variation: 1.9655699313640985E8
Distribution: #0 -> 0.398, plus -> 0.107, neg -> 0.065, #1 -> 0.062, divide -> 0.050, 31 -> 0.049, growEdge -> 0.047, times -> 0.035, 2 -> 0.032, 44 -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 86 generations ago.
------------
[1288.170s]Generation 123
Best Result: (fitness: 473005603.9, performance: 677819629.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 29
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, divide(#0, neg(#0)), #0), times(neg(neg(47)), plus(#0, #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 29), Vector(GraphValue(3,Vector((0,1,2), (0,2,44))), 0, 29), Vector(GraphValue(5,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44))), 0, 29), Vector(GraphValue(7,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (2,6,44))), 0, 29), Vector(GraphValue(9,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (2,6,44), (6,7,2), (4,8,44))), 0, 29), Vector(GraphValue(11,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (2,6,44), (6,7,2), (4,8,44), (8,9,2), (8,10,44))), 0, 29), Vector(GraphValue(13,Vector((0,1,2), (0,2,44), (2,3,2), (0,4,44), (4,5,2), (2,6,44), (6,7,2), (4,8,44), (8,9,2), (8,10,44), (10,11,2), (8,12,44))), 0, 29), ...
Average Size: 23.126794258373206
Average Fitness: 1.757522269672399E8
Fitness Variation: 1.9441905803999072E8
Distribution: #0 -> 0.401, plus -> 0.108, #1 -> 0.063, neg -> 0.062, divide -> 0.047, growEdge -> 0.047, 31 -> 0.042, times -> 0.036, 44 -> 0.030, 2 -> 0.028
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 87 generations ago.
------------
[1321.924s]Generation 124
Best Result: (fitness: 449655116.3, performance: 596640799.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,43), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 43), ...
Average Size: 23.440191387559807
Average Fitness: 1.7263714307673776E8
Fitness Variation: 1.963071559791977E8
Distribution: #0 -> 0.410, plus -> 0.110, neg -> 0.064, #1 -> 0.061, growEdge -> 0.046, divide -> 0.046, 31 -> 0.037, times -> 0.036, 44 -> 0.031, emptyGraph -> 0.028
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 88 generations ago.
------------
[1353.807s]Generation 125
Best Result: (fitness: 449655116.3, performance: 596640799.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,43), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 43), ...
Average Size: 23.586124401913874
Average Fitness: 1.7277584329015225E8
Fitness Variation: 1.9411649685504407E8
Distribution: #0 -> 0.407, plus -> 0.106, neg -> 0.062, #1 -> 0.061, divide -> 0.047, growEdge -> 0.046, times -> 0.034, 31 -> 0.034, 44 -> 0.031, 29 -> 0.030
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 89 generations ago.
------------
[1386.614s]Generation 126
Best Result: (fitness: 449655116.3, performance: 596640799.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,43), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 43), ...
Average Size: 23.964114832535884
Average Fitness: 1.8845684014327416E8
Fitness Variation: 1.9797721261548236E8
Distribution: #0 -> 0.412, plus -> 0.107, neg -> 0.062, #1 -> 0.062, growEdge -> 0.047, divide -> 0.046, 29 -> 0.035, times -> 0.033, 44 -> 0.030, 31 -> 0.029
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 90 generations ago.
------------
[1406.298s]Generation 127
Best Result: (fitness: 499758824.1, performance: 622223305.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 29
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(1), #0), times(29, plus(plus(#0, #0), #0)), 34); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 29), Vector(GraphValue(3,Vector((0,1,2), (0,2,34))), 0, 29), Vector(GraphValue(5,Vector((0,1,2), (0,2,34), (2,3,2), (2,4,34))), 0, 29), Vector(GraphValue(7,Vector((0,1,2), (0,2,34), (2,3,2), (2,4,34), (4,5,2), (0,6,34))), 0, 29), Vector(GraphValue(9,Vector((0,1,2), (0,2,34), (2,3,2), (2,4,34), (4,5,2), (0,6,34), (6,7,2), (6,8,34))), 0, 29), Vector(GraphValue(11,Vector((0,1,2), (0,2,34), (2,3,2), (2,4,34), (4,5,2), (0,6,34), (6,7,2), (6,8,34), (8,9,2), (4,10,34))), 0, 29), Vector(GraphValue(13,Vector((0,1,2), (0,2,34), (2,3,2), (2,4,34), (4,5,2), (0,6,34), (6,7,2), (6,8,34), (8,9,2), (4,10,34), (10,11,2), (6,12,34))), 0, 29), ...
Average Size: 23.236842105263158
Average Fitness: 1.9308556016003203E8
Fitness Variation: 2.027171478603736E8
Distribution: #0 -> 0.412, plus -> 0.108, #1 -> 0.063, neg -> 0.062, divide -> 0.047, growEdge -> 0.047, 29 -> 0.046, times -> 0.033, 44 -> 0.028, emptyGraph -> 0.028
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 91 generations ago.
------------
[1434.606s]Generation 128
Best Result: (fitness: 449655116.3, performance: 596640799.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,43), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 43), ...
Average Size: 22.93062200956938
Average Fitness: 1.873052980679403E8
Fitness Variation: 2.044275213086905E8
Distribution: #0 -> 0.411, plus -> 0.108, #1 -> 0.063, neg -> 0.062, 29 -> 0.054, growEdge -> 0.047, divide -> 0.046, times -> 0.036, emptyGraph -> 0.029, 44 -> 0.029
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 92 generations ago.
------------
[1459.985s]Generation 129
Best Result: (fitness: 449655116.3, performance: 596640799.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,43), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 43), ...
Average Size: 23.08133971291866
Average Fitness: 1.815950486540448E8
Fitness Variation: 2.0440551674839675E8
Distribution: #0 -> 0.406, plus -> 0.110, #1 -> 0.063, neg -> 0.061, 29 -> 0.058, growEdge -> 0.047, divide -> 0.046, times -> 0.035, emptyGraph -> 0.029, 44 -> 0.029
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 93 generations ago.
------------
[1483.975s]Generation 130
Best Result: (fitness: 472689498.6, performance: 627204784.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(29, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,43), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (6,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (6,8,44), (8,9,2), (4,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (6,8,44), (8,9,2), (4,10,44), (10,11,2), (6,12,44))), 0, 43), ...
Average Size: 23.27751196172249
Average Fitness: 1.7332809771420708E8
Fitness Variation: 2.002414130250643E8
Distribution: #0 -> 0.404, plus -> 0.106, neg -> 0.064, #1 -> 0.063, 29 -> 0.058, growEdge -> 0.048, divide -> 0.047, times -> 0.035, emptyGraph -> 0.029, 44 -> 0.029
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 94 generations ago.
------------
[1516.030s]Generation 131
Best Result: (fitness: 449655116.3, performance: 596640799.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,43), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 43), ...
Average Size: 23.440191387559807
Average Fitness: 1.5875521979673314E8
Fitness Variation: 1.9221003723118496E8
Distribution: #0 -> 0.389, plus -> 0.104, #1 -> 0.062, neg -> 0.062, 29 -> 0.054, growEdge -> 0.047, divide -> 0.044, times -> 0.035, 44 -> 0.030, emptyGraph -> 0.028
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 95 generations ago.
------------
[1549.403s]Generation 132
Best Result: (fitness: 449655116.3, performance: 596640799.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 29 ; iter: 2; seedExpr: 29 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,29), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,29), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,29), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,29), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,29), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,29), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 43), ...
Average Size: 23.5
Average Fitness: 1.6418385285613054E8
Fitness Variation: 1.947166634477031E8
Distribution: #0 -> 0.389, plus -> 0.104, #1 -> 0.063, neg -> 0.061, 29 -> 0.051, growEdge -> 0.048, divide -> 0.041, times -> 0.033, 44 -> 0.029, emptyGraph -> 0.026
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 96 generations ago.
------------
[1586.080s]Generation 133
Best Result: (fitness: 456602274.0, performance: 605858881.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 29
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 29), Vector(GraphValue(3,Vector((0,1,43), (1,2,44))), 0, 29), Vector(GraphValue(5,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44))), 0, 29), Vector(GraphValue(7,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 29), Vector(GraphValue(9,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 29), Vector(GraphValue(11,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 29), Vector(GraphValue(13,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 29), ...
Average Size: 23.179425837320576
Average Fitness: 1.8066441378739342E8
Fitness Variation: 2.012562088006631E8
Distribution: #0 -> 0.380, plus -> 0.107, #1 -> 0.063, neg -> 0.056, growEdge -> 0.048, 29 -> 0.046, times -> 0.035, divide -> 0.034, 44 -> 0.028, emptyGraph -> 0.026
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 97 generations ago.
------------
[1626.972s]Generation 134
Best Result: (fitness: 456602274.0, performance: 605858881.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 29
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 29), Vector(GraphValue(3,Vector((0,1,43), (1,2,44))), 0, 29), Vector(GraphValue(5,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44))), 0, 29), Vector(GraphValue(7,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 29), Vector(GraphValue(9,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 29), Vector(GraphValue(11,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 29), Vector(GraphValue(13,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 29), ...
Average Size: 23.055023923444978
Average Fitness: 1.9502864753772652E8
Fitness Variation: 2.0380169638347152E8
Distribution: #0 -> 0.379, plus -> 0.109, #1 -> 0.064, neg -> 0.054, growEdge -> 0.049, dec -> 0.036, times -> 0.035, 29 -> 0.035, 44 -> 0.029, emptyGraph -> 0.025
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 98 generations ago.
------------
[1659.432s]Generation 135
Best Result: (fitness: 472689498.6, performance: 627204784.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(29, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,43), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (6,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (6,8,44), (8,9,2), (4,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (6,8,44), (8,9,2), (4,10,44), (10,11,2), (6,12,44))), 0, 43), ...
Average Size: 22.820574162679424
Average Fitness: 1.928847446335553E8
Fitness Variation: 2.057841206790991E8
Distribution: #0 -> 0.368, plus -> 0.112, #1 -> 0.065, neg -> 0.052, growEdge -> 0.049, dec -> 0.048, times -> 0.036, 31 -> 0.034, 44 -> 0.032, emptyGraph -> 0.028
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 99 generations ago.
------------
[1696.955s]Generation 136
Best Result: (fitness: 449655116.3, performance: 596640799.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,43), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 43), ...
Average Size: 22.894736842105264
Average Fitness: 1.886720494505751E8
Fitness Variation: 2.0571101412395725E8
Distribution: #0 -> 0.363, plus -> 0.110, #1 -> 0.065, dec -> 0.057, neg -> 0.053, growEdge -> 0.049, 31 -> 0.041, times -> 0.035, 44 -> 0.029, emptyGraph -> 0.028
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 100 generations ago.
------------
[1738.748s]Generation 137
Best Result: (fitness: 449655116.3, performance: 596640799.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,43), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 43), ...
Average Size: 22.27511961722488
Average Fitness: 1.7498729195071703E8
Fitness Variation: 2.0023574986910173E8
Distribution: #0 -> 0.357, plus -> 0.109, #1 -> 0.065, dec -> 0.063, neg -> 0.054, growEdge -> 0.050, 31 -> 0.046, times -> 0.037, 43 -> 0.031, emptyGraph -> 0.030
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 101 generations ago.
------------
[1772.576s]Generation 138
Best Result: (fitness: 449655116.3, performance: 596640799.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,43), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 43), ...
Average Size: 22.351674641148325
Average Fitness: 1.8598024770412093E8
Fitness Variation: 2.05144869505955E8
Distribution: #0 -> 0.355, plus -> 0.109, #1 -> 0.067, dec -> 0.066, neg -> 0.056, growEdge -> 0.050, 31 -> 0.048, times -> 0.037, emptyGraph -> 0.031, 43 -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 102 generations ago.
------------
[1804.158s]Generation 139
Best Result: (fitness: 449655116.3, performance: 596640799.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,43), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 43), ...
Average Size: 22.52153110047847
Average Fitness: 1.9860221990731484E8
Fitness Variation: 2.0661479553446192E8
Distribution: #0 -> 0.361, plus -> 0.112, dec -> 0.066, #1 -> 0.065, neg -> 0.053, growEdge -> 0.049, 31 -> 0.046, times -> 0.038, 43 -> 0.030, 44 -> 0.030
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 103 generations ago.
------------
[1829.751s]Generation 140
Best Result: (fitness: 449655116.3, performance: 596640799.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,43), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 43), ...
Average Size: 22.425837320574164
Average Fitness: 1.9779647231397074E8
Fitness Variation: 2.0808222910380057E8
Distribution: #0 -> 0.357, plus -> 0.115, dec -> 0.067, #1 -> 0.065, neg -> 0.052, 31 -> 0.049, growEdge -> 0.049, times -> 0.038, 44 -> 0.033, emptyGraph -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 104 generations ago.
------------
[1854.911s]Generation 141
Best Result: (fitness: 449655116.3, performance: 596640799.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,43), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 43), ...
Average Size: 22.248803827751196
Average Fitness: 2.034996233758769E8
Fitness Variation: 2.0855431746670026E8
Distribution: #0 -> 0.358, plus -> 0.112, #1 -> 0.067, dec -> 0.066, neg -> 0.054, growEdge -> 0.050, 31 -> 0.048, times -> 0.037, 43 -> 0.032, emptyGraph -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 105 generations ago.
------------
[1888.359s]Generation 142
Best Result: (fitness: 449655116.3, performance: 596640799.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(2)), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,43), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,43), (1,2,44), (2,3,2), (2,4,44), (4,5,2), (0,6,44), (6,7,2), (2,8,44), (8,9,2), (6,10,44), (10,11,2), (6,12,44))), 0, 43), ...
Average Size: 22.519138755980862
Average Fitness: 2.1525582460598564E8
Fitness Variation: 2.075974374160639E8
Distribution: #0 -> 0.358, plus -> 0.115, dec -> 0.067, #1 -> 0.065, neg -> 0.053, 31 -> 0.050, growEdge -> 0.049, times -> 0.037, 43 -> 0.032, 44 -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 106 generations ago.
------------
[1918.784s]Generation 143
Best Result: (fitness: 450391791.1, performance: 597618282.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, plus(plus(#0, #0), #0)), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,43), (1,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,43), (1,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,43), (1,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,43), (1,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,43), (1,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,43), (1,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 22.083732057416267
Average Fitness: 2.0618761556273955E8
Fitness Variation: 2.0909595059790638E8
Distribution: #0 -> 0.359, plus -> 0.114, #1 -> 0.067, dec -> 0.065, neg -> 0.052, growEdge -> 0.050, 31 -> 0.049, times -> 0.037, 43 -> 0.034, 44 -> 0.033
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 107 generations ago.
------------
[1944.891s]Generation 144
Best Result: (fitness: 450391791.1, performance: 597618282.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, plus(plus(#0, #0), #0)), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,43), (1,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,43), (1,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,43), (1,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,43), (1,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,43), (1,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,43), (1,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 22.059808612440193
Average Fitness: 1.8940203702552193E8
Fitness Variation: 2.0624330551138562E8
Distribution: #0 -> 0.359, plus -> 0.110, dec -> 0.068, #1 -> 0.068, neg -> 0.054, growEdge -> 0.051, 31 -> 0.049, times -> 0.036, 43 -> 0.032, 44 -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 108 generations ago.
------------
[1981.764s]Generation 145
Best Result: (fitness: 530657991.8, performance: 581760803.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, 6), 31); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,43), (0,2,31))), 0, 43), Vector(GraphValue(5,Vector((0,1,43), (0,2,31), (2,3,2), (2,4,31))), 0, 43), Vector(GraphValue(7,Vector((0,1,43), (0,2,31), (2,3,2), (2,4,31), (4,5,2), (0,6,31))), 0, 43), Vector(GraphValue(9,Vector((0,1,43), (0,2,31), (2,3,2), (2,4,31), (4,5,2), (0,6,31), (6,7,2), (2,8,31))), 0, 43), Vector(GraphValue(11,Vector((0,1,43), (0,2,31), (2,3,2), (2,4,31), (4,5,2), (0,6,31), (6,7,2), (2,8,31), (8,9,2), (6,10,31))), 0, 43), Vector(GraphValue(13,Vector((0,1,43), (0,2,31), (2,3,2), (2,4,31), (4,5,2), (0,6,31), (6,7,2), (2,8,31), (8,9,2), (6,10,31), (10,11,2), (6,12,31))), 0, 43), ...
Average Size: 22.20095693779904
Average Fitness: 2.0185381360585216E8
Fitness Variation: 2.0674064464970148E8
Distribution: #0 -> 0.360, plus -> 0.113, #1 -> 0.067, dec -> 0.067, neg -> 0.052, growEdge -> 0.051, 31 -> 0.050, times -> 0.036, 44 -> 0.033, 43 -> 0.032
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 109 generations ago.
------------
[2015.014s]Generation 146
Best Result: (fitness: 461343532.3, performance: 574394455.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 31 ; iter: 2; seedExpr: 31 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(7), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,31), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44), (2,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44), (2,9,2), (6,10,44), (4,11,2), (6,12,44))), 0, 43), ...
Average Size: 22.282296650717704
Average Fitness: 1.9716657555015436E8
Fitness Variation: 2.064043320410115E8
Distribution: #0 -> 0.355, plus -> 0.111, #1 -> 0.067, dec -> 0.066, neg -> 0.052, growEdge -> 0.051, 31 -> 0.051, times -> 0.036, 44 -> 0.032, emptyGraph -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 110 generations ago.
------------
[2046.973s]Generation 147
Best Result: (fitness: 461343532.3, performance: 574394455.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 31 ; iter: 2; seedExpr: 31 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(7), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,31), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44), (2,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44), (2,9,2), (6,10,44), (4,11,2), (6,12,44))), 0, 43), ...
Average Size: 22.19138755980861
Average Fitness: 1.8635496029791352E8
Fitness Variation: 2.0660696361717576E8
Distribution: #0 -> 0.352, plus -> 0.113, #1 -> 0.067, dec -> 0.060, 31 -> 0.052, growEdge -> 0.051, neg -> 0.050, times -> 0.037, 44 -> 0.033, emptyGraph -> 0.032
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 111 generations ago.
------------
[2080.449s]Generation 148
Best Result: (fitness: 461343532.3, performance: 574394455.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 31 ; iter: 2; seedExpr: 31 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(7), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,31), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44), (2,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44), (2,9,2), (6,10,44), (4,11,2), (6,12,44))), 0, 43), ...
Average Size: 22.3444976076555
Average Fitness: 1.7659535978106776E8
Fitness Variation: 2.03096619125019E8
Distribution: #0 -> 0.357, plus -> 0.115, #1 -> 0.066, dec -> 0.064, neg -> 0.052, 31 -> 0.051, growEdge -> 0.050, times -> 0.036, 44 -> 0.030, emptyGraph -> 0.030
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 112 generations ago.
------------
[2113.421s]Generation 149
Best Result: (fitness: 461343532.3, performance: 574394455.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 31 ; iter: 2; seedExpr: 31 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(7), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,31), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44), (2,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44), (2,9,2), (6,10,44), (4,11,2), (6,12,44))), 0, 43), ...
Average Size: 22.229665071770334
Average Fitness: 1.759007313309368E8
Fitness Variation: 2.0284477566209728E8
Distribution: #0 -> 0.360, plus -> 0.114, #1 -> 0.067, dec -> 0.062, neg -> 0.052, growEdge -> 0.051, 31 -> 0.050, times -> 0.036, 44 -> 0.030, emptyGraph -> 0.029
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 113 generations ago.
------------
[2146.282s]Generation 150
Best Result: (fitness: 461343532.3, performance: 574394455.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 31 ; iter: 2; seedExpr: 31 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(7), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,31), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44), (2,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44), (2,9,2), (6,10,44), (4,11,2), (6,12,44))), 0, 43), ...
Average Size: 22.196172248803826
Average Fitness: 1.9574383416171595E8
Fitness Variation: 2.0580830204096842E8
Distribution: #0 -> 0.357, plus -> 0.115, #1 -> 0.068, dec -> 0.059, neg -> 0.053, 31 -> 0.050, growEdge -> 0.050, times -> 0.036, emptyGraph -> 0.029, 43 -> 0.027
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 114 generations ago.
------------
[2187.154s]Generation 151
Best Result: (fitness: 461343532.3, performance: 574394455.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 31 ; iter: 2; seedExpr: 31 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(7), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,31), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44), (2,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44), (2,9,2), (6,10,44), (4,11,2), (6,12,44))), 0, 43), ...
Average Size: 22.394736842105264
Average Fitness: 1.9967589845035583E8
Fitness Variation: 2.0782386620642343E8
Distribution: #0 -> 0.353, plus -> 0.114, #1 -> 0.067, dec -> 0.059, neg -> 0.055, 31 -> 0.050, growEdge -> 0.050, times -> 0.036, emptyGraph -> 0.027, 44 -> 0.024
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 115 generations ago.
------------
[2233.558s]Generation 152
Best Result: (fitness: 461343532.3, performance: 574394455.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 31 ; iter: 2; seedExpr: 31 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(7), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,31), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44), (2,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44), (2,9,2), (6,10,44), (4,11,2), (6,12,44))), 0, 43), ...
Average Size: 22.148325358851675
Average Fitness: 2.10559742177413E8
Fitness Variation: 2.1052905473935115E8
Distribution: #0 -> 0.361, plus -> 0.118, #1 -> 0.066, dec -> 0.055, neg -> 0.052, 31 -> 0.051, growEdge -> 0.049, times -> 0.037, emptyGraph -> 0.028, 43 -> 0.021
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 116 generations ago.
------------
[2276.055s]Generation 153
Best Result: (fitness: 461343532.3, performance: 574394455.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 31 ; iter: 2; seedExpr: 31 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(7), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,31), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44), (2,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44), (2,9,2), (6,10,44), (4,11,2), (6,12,44))), 0, 43), ...
Average Size: 22.380382775119617
Average Fitness: 1.95065510654064E8
Fitness Variation: 2.0774034950458252E8
Distribution: #0 -> 0.349, plus -> 0.116, #1 -> 0.067, neg -> 0.053, 31 -> 0.053, growEdge -> 0.051, dec -> 0.049, times -> 0.039, emptyGraph -> 0.028, 2 -> 0.020
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 117 generations ago.
------------
[2308.457s]Generation 154
Best Result: (fitness: 461343532.3, performance: 574394455.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 31 ; iter: 2; seedExpr: 31 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(7), #0), times(31, plus(plus(#0, #0), #0)), 44); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,31), (1,2,44))), 0, 43), Vector(GraphValue(5,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44))), 0, 43), Vector(GraphValue(7,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44))), 0, 43), Vector(GraphValue(9,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44))), 0, 43), Vector(GraphValue(11,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44), (2,9,2), (6,10,44))), 0, 43), Vector(GraphValue(13,Vector((0,1,31), (1,2,44), (2,3,2), (2,4,44), (3,5,2), (0,6,44), (0,7,2), (2,8,44), (2,9,2), (6,10,44), (4,11,2), (6,12,44))), 0, 43), ...
Average Size: 22.172248803827753
Average Fitness: 1.7757221292654258E8
Fitness Variation: 2.0656822807893962E8
Distribution: #0 -> 0.338, plus -> 0.118, #1 -> 0.067, 31 -> 0.055, neg -> 0.051, growEdge -> 0.050, times -> 0.039, dec -> 0.039, emptyGraph -> 0.029, 2 -> 0.020
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 118 generations ago.
------------
[2350.222s]Generation 155
Best Result: (fitness: 461343532.3, performance: 574394455.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 31 ; iter: 2; seedExpr: 31 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(7), #0), times(31, plus(plus(#0, #0), #0)), 43); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,31), (1,2,43))), 0, 43), Vector(GraphValue(5,Vector((0,1,31), (1,2,43), (2,3,2), (2,4,43))), 0, 43), Vector(GraphValue(7,Vector((0,1,31), (1,2,43), (2,3,2), (2,4,43), (3,5,2), (0,6,43))), 0, 43), Vector(GraphValue(9,Vector((0,1,31), (1,2,43), (2,3,2), (2,4,43), (3,5,2), (0,6,43), (0,7,2), (2,8,43))), 0, 43), Vector(GraphValue(11,Vector((0,1,31), (1,2,43), (2,3,2), (2,4,43), (3,5,2), (0,6,43), (0,7,2), (2,8,43), (2,9,2), (6,10,43))), 0, 43), Vector(GraphValue(13,Vector((0,1,31), (1,2,43), (2,3,2), (2,4,43), (3,5,2), (0,6,43), (0,7,2), (2,8,43), (2,9,2), (6,10,43), (4,11,2), (6,12,43))), 0, 43), ...
Average Size: 21.992822966507177
Average Fitness: 1.6687369651297677E8
Fitness Variation: 1.9915474190771678E8
Distribution: #0 -> 0.335, plus -> 0.115, #1 -> 0.067, neg -> 0.055, 31 -> 0.054, growEdge -> 0.051, dec -> 0.039, times -> 0.037, emptyGraph -> 0.029, 43 -> 0.022
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 119 generations ago.
------------
[2392.570s]Generation 156
Best Result: (fitness: 461343532.3, performance: 574394455.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 43
*
[S0: EInt]{ seed: 31 ; iter: 2; seedExpr: 31 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(7), #0), times(31, plus(plus(#0, #0), #0)), 41); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 43), Vector(GraphValue(3,Vector((0,1,31), (1,2,41))), 0, 43), Vector(GraphValue(5,Vector((0,1,31), (1,2,41), (2,3,2), (2,4,41))), 0, 43), Vector(GraphValue(7,Vector((0,1,31), (1,2,41), (2,3,2), (2,4,41), (3,5,2), (0,6,41))), 0, 43), Vector(GraphValue(9,Vector((0,1,31), (1,2,41), (2,3,2), (2,4,41), (3,5,2), (0,6,41), (0,7,2), (2,8,41))), 0, 43), Vector(GraphValue(11,Vector((0,1,31), (1,2,41), (2,3,2), (2,4,41), (3,5,2), (0,6,41), (0,7,2), (2,8,41), (2,9,2), (6,10,41))), 0, 43), Vector(GraphValue(13,Vector((0,1,31), (1,2,41), (2,3,2), (2,4,41), (3,5,2), (0,6,41), (0,7,2), (2,8,41), (2,9,2), (6,10,41), (4,11,2), (6,12,41))), 0, 43), ...
Average Size: 21.772727272727273
Average Fitness: 1.7771694138524103E8
Fitness Variation: 2.0137904932091337E8
Distribution: #0 -> 0.340, plus -> 0.117, #1 -> 0.069, 31 -> 0.057, neg -> 0.055, growEdge -> 0.053, dec -> 0.043, times -> 0.037, emptyGraph -> 0.028, 2 -> 0.022
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 120 generations ago.
------------
[2432.338s]Generation 157
Best Result: (fitness: 514157444.2, performance: 582738285.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 25 ; iter: 2; seedExpr: 25 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, inc(5)), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,25), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 21.98803827751196
Average Fitness: 1.8029760235032487E8
Fitness Variation: 2.0122751328106457E8
Distribution: #0 -> 0.326, plus -> 0.114, #1 -> 0.069, 31 -> 0.057, neg -> 0.055, growEdge -> 0.053, dec -> 0.040, times -> 0.037, emptyGraph -> 0.027, 2 -> 0.025
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 121 generations ago.
------------
[2460.771s]Generation 158
Best Result: (fitness: 514157444.2, performance: 582738285.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 25 ; iter: 2; seedExpr: 25 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, inc(5)), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,25), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 21.77511961722488
Average Fitness: 1.7955936199796894E8
Fitness Variation: 2.0807473323822483E8
Distribution: #0 -> 0.323, plus -> 0.112, #1 -> 0.069, 31 -> 0.057, neg -> 0.053, growEdge -> 0.052, times -> 0.037, dec -> 0.037, 7 -> 0.032, emptyGraph -> 0.029
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 122 generations ago.
------------
[2497.551s]Generation 159
Best Result: (fitness: 514157444.2, performance: 582738285.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 25 ; iter: 2; seedExpr: 25 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, inc(5)), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,25), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 21.794258373205743
Average Fitness: 1.7783352496044815E8
Fitness Variation: 2.076819665346185E8
Distribution: #0 -> 0.317, plus -> 0.115, #1 -> 0.068, 31 -> 0.060, neg -> 0.054, growEdge -> 0.052, times -> 0.039, 7 -> 0.039, emptyGraph -> 0.031, dec -> 0.028
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 123 generations ago.
------------
[2528.634s]Generation 160
Best Result: (fitness: 514157444.2, performance: 582738285.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 25 ; iter: 2; seedExpr: 25 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, inc(5)), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,25), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 21.6555023923445
Average Fitness: 1.8962512023268887E8
Fitness Variation: 2.1062452518201756E8
Distribution: #0 -> 0.319, plus -> 0.116, #1 -> 0.071, 31 -> 0.063, neg -> 0.056, growEdge -> 0.054, 7 -> 0.048, times -> 0.039, emptyGraph -> 0.031, 43 -> 0.026
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 124 generations ago.
------------
[2563.910s]Generation 161
Best Result: (fitness: 514157444.2, performance: 582738285.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 25 ; iter: 2; seedExpr: 25 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, inc(5)), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,25), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 21.36842105263158
Average Fitness: 1.904839270796493E8
Fitness Variation: 2.0737609943533507E8
Distribution: #0 -> 0.312, plus -> 0.117, #1 -> 0.073, 31 -> 0.067, neg -> 0.056, growEdge -> 0.055, 7 -> 0.052, times -> 0.038, emptyGraph -> 0.033, 43 -> 0.029
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 125 generations ago.
------------
[2601.169s]Generation 162
Best Result: (fitness: 514157444.2, performance: 582738285.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 25 ; iter: 2; seedExpr: 25 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, inc(5)), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,25), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 21.351674641148325
Average Fitness: 1.8915361447911158E8
Fitness Variation: 2.0618430198309758E8
Distribution: #0 -> 0.309, plus -> 0.114, #1 -> 0.072, 31 -> 0.065, neg -> 0.056, 7 -> 0.054, growEdge -> 0.053, times -> 0.040, emptyGraph -> 0.034, 43 -> 0.027
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 126 generations ago.
------------
[2636.861s]Generation 163
Best Result: (fitness: 514157444.2, performance: 582738285.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 25 ; iter: 2; seedExpr: 25 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, inc(5)), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,25), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 21.77751196172249
Average Fitness: 1.8021446601353055E8
Fitness Variation: 2.0379384405063802E8
Distribution: #0 -> 0.309, plus -> 0.115, #1 -> 0.069, 31 -> 0.064, neg -> 0.056, growEdge -> 0.052, 7 -> 0.052, times -> 0.041, emptyGraph -> 0.034, 43 -> 0.026
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 127 generations ago.
------------
[2664.471s]Generation 164
Best Result: (fitness: 514157444.2, performance: 582738285.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 25 ; iter: 2; seedExpr: 25 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, inc(5)), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,25), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 21.681818181818183
Average Fitness: 1.9025400299323955E8
Fitness Variation: 2.097693981583606E8
Distribution: #0 -> 0.302, plus -> 0.111, #1 -> 0.071, 31 -> 0.066, neg -> 0.057, 7 -> 0.055, growEdge -> 0.054, times -> 0.041, emptyGraph -> 0.034, 43 -> 0.028
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 128 generations ago.
------------
[2696.645s]Generation 165
Best Result: (fitness: 514157444.2, performance: 582738285.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 25 ; iter: 2; seedExpr: 25 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, inc(5)), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,25), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,25), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 21.519138755980862
Average Fitness: 1.980330965178871E8
Fitness Variation: 2.1191572354506123E8
Distribution: #0 -> 0.302, plus -> 0.109, #1 -> 0.071, 31 -> 0.066, neg -> 0.056, growEdge -> 0.054, 7 -> 0.053, times -> 0.039, emptyGraph -> 0.032, 43 -> 0.028
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 129 generations ago.
------------
[2727.563s]Generation 166
Best Result: (fitness: 527880072.8, performance: 582738285.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 6 ; iter: 2; seedExpr: inc(5) }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, 6), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,6), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,6), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,6), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,6), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,6), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,6), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 21.354066985645932
Average Fitness: 2.0292364381664443E8
Fitness Variation: 2.1671007459474286E8
Distribution: #0 -> 0.289, plus -> 0.098, #1 -> 0.074, 31 -> 0.068, neg -> 0.056, growEdge -> 0.055, 7 -> 0.051, times -> 0.042, emptyGraph -> 0.033, 43 -> 0.026
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 130 generations ago.
------------
[2771.667s]Generation 167
Best Result: (fitness: 531549610.2, performance: 582738285.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, 6), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,43), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 21.076555023923444
Average Fitness: 2.0711971309798053E8
Fitness Variation: 2.1971879715417933E8
Distribution: #0 -> 0.280, plus -> 0.090, #1 -> 0.073, 31 -> 0.066, neg -> 0.057, growEdge -> 0.057, 7 -> 0.047, times -> 0.042, emptyGraph -> 0.034, dec -> 0.029
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 131 generations ago.
------------
[2812.162s]Generation 168
Best Result: (fitness: 531549610.2, performance: 582738285.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, 6), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,43), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 20.913875598086126
Average Fitness: 2.0502035989745954E8
Fitness Variation: 2.227681411797833E8
Distribution: #0 -> 0.251, #1 -> 0.076, plus -> 0.069, 31 -> 0.067, neg -> 0.059, growEdge -> 0.058, times -> 0.044, 5 -> 0.044, dec -> 0.041, inc -> 0.039
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 132 generations ago.
------------
[2867.304s]Generation 169
Best Result: (fitness: 531549610.2, performance: 582738285.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, 6), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,43), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 21.3133971291866
Average Fitness: 2.1280637173622617E8
Fitness Variation: 2.2315298270737547E8
Distribution: #0 -> 0.244, #1 -> 0.074, plus -> 0.062, 31 -> 0.061, neg -> 0.061, growEdge -> 0.057, dec -> 0.052, 5 -> 0.046, inc -> 0.044, times -> 0.041
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 133 generations ago.
------------
[2917.670s]Generation 170
Best Result: (fitness: 531549610.2, performance: 582738285.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, 6), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,43), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 21.169856459330145
Average Fitness: 1.9969168070901078E8
Fitness Variation: 2.2295503845968542E8
Distribution: #0 -> 0.217, #1 -> 0.075, 31 -> 0.063, neg -> 0.063, growEdge -> 0.058, dec -> 0.057, 5 -> 0.053, inc -> 0.046, plus -> 0.044, times -> 0.042
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 134 generations ago.
------------
[2960.995s]Generation 171
Best Result: (fitness: 531549610.2, performance: 582738285.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, 6), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,43), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 21.160287081339714
Average Fitness: 1.9499461383930236E8
Fitness Variation: 2.269714636027799E8
Distribution: #0 -> 0.204, #1 -> 0.077, dec -> 0.065, neg -> 0.064, 5 -> 0.061, 31 -> 0.060, growEdge -> 0.059, inc -> 0.052, times -> 0.043, emptyGraph -> 0.035
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 135 generations ago.
------------
[2998.941s]Generation 172
Best Result: (fitness: 531549610.2, performance: 582738285.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 38 ; iter: 2; seedExpr: 38 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, 6), 48); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,38), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,38), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,38), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,38), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,38), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,38), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 20.688995215311003
Average Fitness: 1.871013501434208E8
Fitness Variation: 2.314326304157668E8
Distribution: #0 -> 0.188, #1 -> 0.079, 5 -> 0.073, dec -> 0.072, neg -> 0.065, 31 -> 0.061, inc -> 0.060, growEdge -> 0.060, times -> 0.043, 48 -> 0.037
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 136 generations ago.
------------
[3041.376s]Generation 173
Best Result: (fitness: 531549610.2, performance: 582738285.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 38 ; iter: 2; seedExpr: 38 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, 6), 48); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,38), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,38), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,38), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,38), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,38), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,38), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 20.205741626794257
Average Fitness: 1.860302026038393E8
Fitness Variation: 2.296298849193573E8
Distribution: #0 -> 0.179, #1 -> 0.082, dec -> 0.079, 5 -> 0.075, inc -> 0.067, neg -> 0.064, growEdge -> 0.062, 31 -> 0.062, times -> 0.043, 48 -> 0.041
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 137 generations ago.
------------
[3087.316s]Generation 174
Best Result: (fitness: 531549610.2, performance: 582738285.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 43 ; iter: 2; seedExpr: 43 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(31, 6), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,43), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,43), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (2,8,48), (8,9,2), (6,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 20.3444976076555
Average Fitness: 1.9464665386802095E8
Fitness Variation: 2.3328343056008247E8
Distribution: #0 -> 0.180, dec -> 0.083, #1 -> 0.082, 5 -> 0.069, neg -> 0.065, inc -> 0.064, 31 -> 0.064, growEdge -> 0.063, times -> 0.046, 48 -> 0.041
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 138 generations ago.
------------
[3149.708s]Generation 175
Best Result: (fitness: 565577931.7, performance: 629568487.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 32 ; iter: 2; seedExpr: inc(dec(32)) }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(29, 6), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,32), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,32), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,32), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,32), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,32), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48), (8,9,2), (4,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,32), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48), (8,9,2), (4,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 20.66507177033493
Average Fitness: 2.1516693139733887E8
Fitness Variation: 2.3483587178029236E8
Distribution: #0 -> 0.182, dec -> 0.082, #1 -> 0.080, neg -> 0.067, 5 -> 0.065, inc -> 0.063, 31 -> 0.063, growEdge -> 0.061, times -> 0.046, 48 -> 0.037
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 139 generations ago.
------------
[3196.221s]Generation 176
Best Result: (fitness: 565577931.7, performance: 629568487.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 32 ; iter: 2; seedExpr: inc(dec(32)) }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(29, 6), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,32), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,32), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,32), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,32), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,32), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48), (8,9,2), (4,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,32), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48), (8,9,2), (4,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 20.179425837320576
Average Fitness: 2.0574281818092334E8
Fitness Variation: 2.3895858237133303E8
Distribution: #0 -> 0.182, #1 -> 0.083, dec -> 0.083, 31 -> 0.068, neg -> 0.067, growEdge -> 0.062, 5 -> 0.060, inc -> 0.056, times -> 0.048, 48 -> 0.040
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 140 generations ago.
------------
[3238.656s]Generation 177
Best Result: (fitness: 570301741.4, performance: 629568487.0), Created by Mutate
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: -23 ; iter: 2; seedExpr: neg(23) }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(29, 6), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,-23), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,-23), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,-23), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,-23), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,-23), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48), (8,9,2), (4,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,-23), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48), (8,9,2), (4,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 20.232057416267942
Average Fitness: 2.0191475613824934E8
Fitness Variation: 2.4146879281887856E8
Distribution: #0 -> 0.193, dec -> 0.082, #1 -> 0.082, 31 -> 0.068, neg -> 0.066, growEdge -> 0.061, times -> 0.049, 5 -> 0.049, inc -> 0.047, 48 -> 0.037
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 141 generations ago.
------------
[3289.237s]Generation 178
Best Result: (fitness: 570301741.4, performance: 629568487.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: -23 ; iter: 2; seedExpr: neg(23) }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(29, 6), 29); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,-23), (0,2,29))), 0, 45), Vector(GraphValue(5,Vector((0,1,-23), (0,2,29), (2,3,2), (2,4,29))), 0, 45), Vector(GraphValue(7,Vector((0,1,-23), (0,2,29), (2,3,2), (2,4,29), (4,5,2), (0,6,29))), 0, 45), Vector(GraphValue(9,Vector((0,1,-23), (0,2,29), (2,3,2), (2,4,29), (4,5,2), (0,6,29), (6,7,2), (6,8,29))), 0, 45), Vector(GraphValue(11,Vector((0,1,-23), (0,2,29), (2,3,2), (2,4,29), (4,5,2), (0,6,29), (6,7,2), (6,8,29), (8,9,2), (4,10,29))), 0, 45), Vector(GraphValue(13,Vector((0,1,-23), (0,2,29), (2,3,2), (2,4,29), (4,5,2), (0,6,29), (6,7,2), (6,8,29), (8,9,2), (4,10,29), (10,11,2), (6,12,29))), 0, 45), ...
Average Size: 20.088516746411482
Average Fitness: 2.2832128609893653E8
Fitness Variation: 2.454943175434177E8
Distribution: #0 -> 0.197, dec -> 0.088, #1 -> 0.086, 31 -> 0.069, neg -> 0.068, growEdge -> 0.065, times -> 0.049, inc -> 0.039, 6 -> 0.038, 5 -> 0.036
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 142 generations ago.
------------
[3335.097s]Generation 179
Best Result: (fitness: 574266171.4, performance: 629568487.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 45 ; iter: 2; seedExpr: 45 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(29, 6), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,45), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,45), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,45), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,45), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,45), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48), (8,9,2), (4,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,45), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48), (8,9,2), (4,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 19.68421052631579
Average Fitness: 2.2553981293647736E8
Fitness Variation: 2.4908245835924256E8
Distribution: #0 -> 0.192, dec -> 0.093, #1 -> 0.087, neg -> 0.071, 31 -> 0.068, growEdge -> 0.067, 6 -> 0.052, times -> 0.049, 48 -> 0.032, inc -> 0.028
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 143 generations ago.
------------
[3384.688s]Generation 180
Best Result: (fitness: 574266171.4, performance: 629568487.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 38 ; iter: 2; seedExpr: 38 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(29, 6), 31); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,38), (0,2,31))), 0, 45), Vector(GraphValue(5,Vector((0,1,38), (0,2,31), (2,3,2), (2,4,31))), 0, 45), Vector(GraphValue(7,Vector((0,1,38), (0,2,31), (2,3,2), (2,4,31), (4,5,2), (0,6,31))), 0, 45), Vector(GraphValue(9,Vector((0,1,38), (0,2,31), (2,3,2), (2,4,31), (4,5,2), (0,6,31), (6,7,2), (6,8,31))), 0, 45), Vector(GraphValue(11,Vector((0,1,38), (0,2,31), (2,3,2), (2,4,31), (4,5,2), (0,6,31), (6,7,2), (6,8,31), (8,9,2), (4,10,31))), 0, 45), Vector(GraphValue(13,Vector((0,1,38), (0,2,31), (2,3,2), (2,4,31), (4,5,2), (0,6,31), (6,7,2), (6,8,31), (8,9,2), (4,10,31), (10,11,2), (6,12,31))), 0, 45), ...
Average Size: 19.272727272727273
Average Fitness: 2.509114910599409E8
Fitness Variation: 2.5667635089309567E8
Distribution: #0 -> 0.196, dec -> 0.097, #1 -> 0.089, neg -> 0.070, growEdge -> 0.068, 31 -> 0.060, 6 -> 0.058, times -> 0.047, 48 -> 0.029, 2 -> 0.028
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 144 generations ago.
------------
[3451.384s]Generation 181
Best Result: (fitness: 574266171.4, performance: 629568487.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 38 ; iter: 2; seedExpr: 38 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(29, 6), 31); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,38), (0,2,31))), 0, 45), Vector(GraphValue(5,Vector((0,1,38), (0,2,31), (2,3,2), (2,4,31))), 0, 45), Vector(GraphValue(7,Vector((0,1,38), (0,2,31), (2,3,2), (2,4,31), (4,5,2), (0,6,31))), 0, 45), Vector(GraphValue(9,Vector((0,1,38), (0,2,31), (2,3,2), (2,4,31), (4,5,2), (0,6,31), (6,7,2), (6,8,31))), 0, 45), Vector(GraphValue(11,Vector((0,1,38), (0,2,31), (2,3,2), (2,4,31), (4,5,2), (0,6,31), (6,7,2), (6,8,31), (8,9,2), (4,10,31))), 0, 45), Vector(GraphValue(13,Vector((0,1,38), (0,2,31), (2,3,2), (2,4,31), (4,5,2), (0,6,31), (6,7,2), (6,8,31), (8,9,2), (4,10,31), (10,11,2), (6,12,31))), 0, 45), ...
Average Size: 19.535885167464116
Average Fitness: 2.5137895980136347E8
Fitness Variation: 2.5681341827419883E8
Distribution: #0 -> 0.189, dec -> 0.099, #1 -> 0.087, neg -> 0.073, growEdge -> 0.067, 6 -> 0.067, times -> 0.049, 31 -> 0.049, 29 -> 0.035, 48 -> 0.030
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 145 generations ago.
------------
[3510.718s]Generation 182
Best Result: (fitness: 574266171.4, performance: 629568487.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 5 ; iter: 2; seedExpr: 5 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(29, 6), 29); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,5), (0,2,29))), 0, 45), Vector(GraphValue(5,Vector((0,1,5), (0,2,29), (2,3,2), (2,4,29))), 0, 45), Vector(GraphValue(7,Vector((0,1,5), (0,2,29), (2,3,2), (2,4,29), (4,5,2), (0,6,29))), 0, 45), Vector(GraphValue(9,Vector((0,1,5), (0,2,29), (2,3,2), (2,4,29), (4,5,2), (0,6,29), (6,7,2), (6,8,29))), 0, 45), Vector(GraphValue(11,Vector((0,1,5), (0,2,29), (2,3,2), (2,4,29), (4,5,2), (0,6,29), (6,7,2), (6,8,29), (8,9,2), (4,10,29))), 0, 45), Vector(GraphValue(13,Vector((0,1,5), (0,2,29), (2,3,2), (2,4,29), (4,5,2), (0,6,29), (6,7,2), (6,8,29), (8,9,2), (4,10,29), (10,11,2), (6,12,29))), 0, 45), ...
Average Size: 19.91866028708134
Average Fitness: 2.5408182499673086E8
Fitness Variation: 2.6086624650951636E8
Distribution: #0 -> 0.181, dec -> 0.096, #1 -> 0.085, neg -> 0.072, 6 -> 0.066, growEdge -> 0.065, times -> 0.049, 29 -> 0.048, 31 -> 0.032, 48 -> 0.030
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 146 generations ago.
------------
[3566.157s]Generation 183
Best Result: (fitness: 574266171.4, performance: 629568487.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 4 ; iter: 2; seedExpr: 4 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(29, 6), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,4), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,4), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,4), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,4), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,4), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48), (8,9,2), (4,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,4), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48), (8,9,2), (4,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 19.69138755980861
Average Fitness: 2.6556754347487247E8
Fitness Variation: 2.6574734486808136E8
Distribution: #0 -> 0.185, dec -> 0.095, #1 -> 0.087, neg -> 0.069, growEdge -> 0.065, 6 -> 0.065, 29 -> 0.061, times -> 0.049, 48 -> 0.033, 2 -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 147 generations ago.
------------
[3615.510s]Generation 184
Best Result: (fitness: 574266171.4, performance: 629568487.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 6 ; iter: 2; seedExpr: 6 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(29, 6), 29); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,6), (0,2,29))), 0, 45), Vector(GraphValue(5,Vector((0,1,6), (0,2,29), (2,3,2), (2,4,29))), 0, 45), Vector(GraphValue(7,Vector((0,1,6), (0,2,29), (2,3,2), (2,4,29), (4,5,2), (0,6,29))), 0, 45), Vector(GraphValue(9,Vector((0,1,6), (0,2,29), (2,3,2), (2,4,29), (4,5,2), (0,6,29), (6,7,2), (6,8,29))), 0, 45), Vector(GraphValue(11,Vector((0,1,6), (0,2,29), (2,3,2), (2,4,29), (4,5,2), (0,6,29), (6,7,2), (6,8,29), (8,9,2), (4,10,29))), 0, 45), Vector(GraphValue(13,Vector((0,1,6), (0,2,29), (2,3,2), (2,4,29), (4,5,2), (0,6,29), (6,7,2), (6,8,29), (8,9,2), (4,10,29), (10,11,2), (6,12,29))), 0, 45), ...
Average Size: 19.60287081339713
Average Fitness: 2.66805837444894E8
Fitness Variation: 2.6759983178121787E8
Distribution: #0 -> 0.189, dec -> 0.091, #1 -> 0.087, 29 -> 0.070, 6 -> 0.068, neg -> 0.068, growEdge -> 0.066, times -> 0.051, 48 -> 0.033, 2 -> 0.030
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 148 generations ago.
------------
[3667.564s]Generation 185
Best Result: (fitness: 574266171.4, performance: 629568487.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 4 ; iter: 2; seedExpr: 4 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), 2), times(29, 6), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,2), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,2), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,2), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,2), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,2), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48), (8,9,2), (4,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,2), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48), (8,9,2), (4,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 19.660287081339714
Average Fitness: 2.499074776838057E8
Fitness Variation: 2.6750542521709505E8
Distribution: #0 -> 0.193, dec -> 0.094, #1 -> 0.088, neg -> 0.072, 29 -> 0.071, growEdge -> 0.068, 6 -> 0.067, times -> 0.049, 48 -> 0.037, 2 -> 0.032
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 149 generations ago.
------------
[3719.703s]Generation 186
Best Result: (fitness: 574266171.4, performance: 629568487.0), Created by Crossover
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 48 ; iter: 2; seedExpr: 48 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(29, 6), 48); seedExpr: addNode(emptyGraph()) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,48), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,48), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,48), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,48), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,48), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48), (8,9,2), (4,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,48), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48), (8,9,2), (4,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 19.39952153110048
Average Fitness: 2.39409313293108E8
Fitness Variation: 2.659531715508277E8
Distribution: #0 -> 0.191, dec -> 0.094, #1 -> 0.089, neg -> 0.072, 29 -> 0.072, growEdge -> 0.070, 6 -> 0.069, times -> 0.050, 48 -> 0.037, 2 -> 0.031
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 150 generations ago.
------------
[3763.128s]Generation 187
Best Result: (fitness: 574266171.4, performance: 629568487.0), Created by Copy
[O0: EGraph(EInt)] -> #1
[O1: EInt] -> 0
[O2: EInt] -> 45
*
[S0: EInt]{ seed: 27 ; iter: 2; seedExpr: 27 }
[S1: EGraph(EInt)]{ seed: GraphValue(1,Vector()) ; iter: growEdge(growEdge(#1, neg(dec(#0)), #0), times(29, 6), 48); seedExpr: addNode(GraphValue(0,Vector())) }
Best Individual Pattern: Vector(GraphValue(1,Vector()), 0, 45), Vector(GraphValue(3,Vector((0,1,27), (0,2,48))), 0, 45), Vector(GraphValue(5,Vector((0,1,27), (0,2,48), (2,3,2), (2,4,48))), 0, 45), Vector(GraphValue(7,Vector((0,1,27), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48))), 0, 45), Vector(GraphValue(9,Vector((0,1,27), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48))), 0, 45), Vector(GraphValue(11,Vector((0,1,27), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48), (8,9,2), (4,10,48))), 0, 45), Vector(GraphValue(13,Vector((0,1,27), (0,2,48), (2,3,2), (2,4,48), (4,5,2), (0,6,48), (6,7,2), (6,8,48), (8,9,2), (4,10,48), (10,11,2), (6,12,48))), 0, 45), ...
Average Size: 19.004784688995215
Average Fitness: 2.45123597973967E8
Fitness Variation: 2.684146566142345E8
Distribution: #0 -> 0.184, #1 -> 0.090, dec -> 0.088, 29 -> 0.073, neg -> 0.072, 6 -> 0.070, growEdge -> 0.068, times -> 0.049, 48 -> 0.039, 2 -> 0.036
new eval size = (400,MemoryUsage(3200))
Last fitness increase: 151 generations ago.
Evolution Finished!
