
------------
[0.012s]Generation 1
Best Result: (fitness: 8142.9, performance: 9513.0), Created by Init
[O0: EVect(EInt)] -> concat(prepend(inc(3), #3), #1)
*
[S0: EInt]{ seed: 1 ; iter: #2; seedExpr: access([], 66, modular(1, length([]))) }
[S1: EVect(EInt)]{ seed: [4] ; iter: concat(prepend(#2, prepend(#2, #3)), #1); seedExpr: prepend(plus(2, 2), concat([], [])) }
[S2: EInt]{ seed: 3 ; iter: dec(66); seedExpr: dec(4) }
[S3: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([4,4]), Vector([4,3,3,4]), Vector([4,65,65,3,3,4]), Vector([4,65,65,65,65,3,3,4]), Vector([4,65,65,65,65,65,65,3,3,4]), Vector([4,65,65,65,65,65,65,65,65,3,3,4]), Vector([4,65,65,65,65,65,65,65,65,65,65,3,3,4]), ...
Diversity: 500
Average Size: 31.994
Average Fitness: 545.2352152316254
Fitness Variation: 1335.6816231560604
Distribution: [] -> 0.167, #2 -> 0.057, #0 -> 0.054, #1 -> 0.050, append -> 0.048, prepend -> 0.048, #3 -> 0.047, concat -> 0.046, 6 -> 0.024, 2 -> 0.024
------------
[160.607s]Generation 2
Best Result: (fitness: 11558.1, performance: 20725.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(times(divide(1, 1), #2)); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [32,4] ; iter: concat(prepend(plus(#2, 6), #3), append(append([], #2), access(#1, #2, #2))); seedExpr: concat(append([], 32), prepend(4, [])) }
[S2: EInt]{ seed: 91 ; iter: #0; seedExpr: dec(92) }
[S3: EVect(EInt)]{ seed: [48,95] ; iter: prepend(divide(0, #0), concat([], concat([], #1))); seedExpr: append(append([], inc(47)), 95) }
Best Individual Pattern: Vector([48,95]), Vector([0,32,4]), Vector([0,97,48,95,91,4]), Vector([0,129,0,32,4,123,91]), Vector([0,96,0,97,48,95,91,4,90,129]), Vector([0,128,0,129,0,32,4,123,91,122,91]), Vector([0,95,0,96,0,97,48,95,91,4,90,129,89,91]), ...
Diversity: 468
Average Size: 38.018
Average Fitness: 2314.7229913064266
Fitness Variation: 1980.1184981747679
Distribution: [] -> 0.142, #3 -> 0.062, #2 -> 0.061, #1 -> 0.058, #0 -> 0.057, prepend -> 0.055, concat -> 0.052, append -> 0.049, 3 -> 0.023, 1 -> 0.021
------------
[385.656s]Generation 3
Best Result: (fitness: 12092.3, performance: 20725.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(times(divide(1, 1), #2)); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [32,4] ; iter: concat(prepend(plus(#2, 6), #3), append(append([], #2), access(#1, #2, #2))); seedExpr: concat(append([], 32), prepend(4, [])) }
[S2: EInt]{ seed: 91 ; iter: #0; seedExpr: dec(92) }
[S3: EVect(EInt)]{ seed: [6,95] ; iter: prepend(divide(0, #0), concat([], concat([], #1))); seedExpr: append(append([], 6), 95) }
Best Individual Pattern: Vector([6,95]), Vector([0,32,4]), Vector([0,97,6,95,91,4]), Vector([0,129,0,32,4,123,91]), Vector([0,96,0,97,6,95,91,4,90,129]), Vector([0,128,0,129,0,32,4,123,91,122,91]), Vector([0,95,0,96,0,97,6,95,91,4,90,129,89,91]), ...
Diversity: 471
Average Size: 31.37
Average Fitness: 4303.81677864191
Fitness Variation: 2148.1517560270318
Distribution: [] -> 0.128, #3 -> 0.084, #2 -> 0.075, #1 -> 0.072, prepend -> 0.059, #0 -> 0.058, concat -> 0.057, append -> 0.051, 1 -> 0.025, neg -> 0.023
------------
[596.888s]Generation 4
Best Result: (fitness: 16379.6, performance: 22019.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(times(divide(1, 1), #2)); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [32,4] ; iter: concat(prepend(plus(#2, 6), #3), []); seedExpr: concat(append([], 32), prepend(4, [])) }
[S2: EInt]{ seed: 91 ; iter: #0; seedExpr: dec(92) }
[S3: EVect(EInt)]{ seed: [48,95] ; iter: prepend(divide(0, #0), concat([], concat([], #1))); seedExpr: append(append([], inc(47)), 95) }
Best Individual Pattern: Vector([48,95]), Vector([0,32,4]), Vector([0,97,48,95]), Vector([0,129,0,32,4]), Vector([0,96,0,97,48,95]), Vector([0,128,0,129,0,32,4]), Vector([0,95,0,96,0,97,48,95]), ...
Diversity: 457
Average Size: 33.724
Average Fitness: 5963.909083241137
Fitness Variation: 2853.4241869384887
Distribution: [] -> 0.142, #2 -> 0.094, #3 -> 0.073, #1 -> 0.062, prepend -> 0.061, concat -> 0.057, append -> 0.047, #0 -> 0.045, 1 -> 0.031, 2 -> 0.028
------------
[812.113s]Generation 5
Best Result: (fitness: 16379.6, performance: 22019.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(times(divide(1, 1), #2)); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [32,47] ; iter: concat(prepend(plus(#2, 6), #3), []); seedExpr: concat(append([], 32), prepend(47, [])) }
[S2: EInt]{ seed: 91 ; iter: #0; seedExpr: dec(92) }
[S3: EVect(EInt)]{ seed: [48,95] ; iter: prepend(divide(0, #0), concat([], concat([], #1))); seedExpr: append(append([], inc(47)), 95) }
Best Individual Pattern: Vector([48,95]), Vector([0,32,47]), Vector([0,97,48,95]), Vector([0,129,0,32,47]), Vector([0,96,0,97,48,95]), Vector([0,128,0,129,0,32,47]), Vector([0,95,0,96,0,97,48,95]), ...
Diversity: 454
Average Size: 36.274
Average Fitness: 7356.6096432413015
Fitness Variation: 3486.080782244347
Distribution: [] -> 0.155, #2 -> 0.119, #3 -> 0.057, prepend -> 0.056, append -> 0.055, #1 -> 0.054, concat -> 0.052, 1 -> 0.044, #0 -> 0.044, inc -> 0.027
------------
[1035.992s]Generation 6
Best Result: (fitness: 16905.5, performance: 21190.0), Created by Mutate
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(times(divide(1, 1), #2)); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: concat(prepend(plus(#2, 6), #3), append(append([], #2), access(#1, #2, #2))); seedExpr: [] }
[S2: EInt]{ seed: 91 ; iter: #0; seedExpr: dec(92) }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(divide(0, #0), concat([], concat([], #1))); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([0]), Vector([0,97,91,91]), Vector([0,129,0,123,97]), Vector([0,96,0,97,91,91,90,123]), Vector([0,128,0,129,0,123,97,122,91]), Vector([0,95,0,96,0,97,91,91,90,123,89,0]), ...
Diversity: 453
Average Size: 40.02
Average Fitness: 7725.868209536105
Fitness Variation: 4434.870524904119
Distribution: [] -> 0.158, #2 -> 0.131, append -> 0.069, #1 -> 0.058, concat -> 0.055, 1 -> 0.055, prepend -> 0.049, #3 -> 0.044, #0 -> 0.039, divide -> 0.034
------------
[1249.539s]Generation 7
Best Result: (fitness: 17624.1, performance: 21190.0), Created by Mutate
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(times(divide(1, 1), #2)); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: concat(prepend(plus(#2, 6), #3), append(append([], #2), access(#1, #2, #2))); seedExpr: [] }
[S2: EInt]{ seed: 91 ; iter: #0; seedExpr: dec(92) }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(divide(0, #0), concat([], #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([0]), Vector([0,97,91,91]), Vector([0,129,0,123,97]), Vector([0,96,0,97,91,91,90,123]), Vector([0,128,0,129,0,123,97,122,91]), Vector([0,95,0,96,0,97,91,91,90,123,89,0]), ...
Diversity: 460
Average Size: 41.544
Average Fitness: 8380.103858062439
Fitness Variation: 5105.051230895067
Distribution: [] -> 0.158, #2 -> 0.130, append -> 0.068, 1 -> 0.061, #1 -> 0.057, concat -> 0.056, prepend -> 0.048, #3 -> 0.042, #0 -> 0.042, divide -> 0.038
------------
[1470.746s]Generation 8
Best Result: (fitness: 18227.2, performance: 21663.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(times(divide(1, 1), #2)); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: concat(prepend(#2, #3), append(append([], #2), access(#1, #2, #2))); seedExpr: [] }
[S2: EInt]{ seed: 91 ; iter: #0; seedExpr: dec(92) }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(divide(0, #0), concat([], concat([], #1))); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([0]), Vector([0,91,91,91]), Vector([0,123,0,123,91]), Vector([0,90,0,91,91,91,90,123]), Vector([0,122,0,123,0,123,91,122,91]), Vector([0,89,0,90,0,91,91,91,90,123,89,0]), ...
Diversity: 461
Average Size: 41.474
Average Fitness: 8720.320077703453
Fitness Variation: 5844.583606033679
Distribution: [] -> 0.157, #2 -> 0.128, append -> 0.065, 1 -> 0.064, #1 -> 0.059, concat -> 0.057, prepend -> 0.048, #3 -> 0.041, divide -> 0.040, #0 -> 0.039
------------
[1699.338s]Generation 9
Best Result: (fitness: 20709.7, performance: 21507.0), Created by Mutate
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(times(divide(1, 1), #2)); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: #3; seedExpr: [] }
[S2: EInt]{ seed: 91 ; iter: #0; seedExpr: dec(92) }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(divide(0, #0), concat([], prepend(#2, #3))); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([0,91]), Vector([0,123,0,91]), Vector([0,90,0,123,0,91]), Vector([0,122,0,90,0,123,0,91]), Vector([0,89,0,122,0,90,0,123,0,91]), Vector([0,121,0,89,0,122,0,90,0,123,0,91]), ...
Diversity: 455
Average Size: 40.044
Average Fitness: 9774.935400217328
Fitness Variation: 6105.7719146790505
Distribution: [] -> 0.160, #2 -> 0.122, 1 -> 0.073, concat -> 0.061, append -> 0.060, #1 -> 0.058, prepend -> 0.048, #0 -> 0.044, divide -> 0.043, #3 -> 0.042
------------
[1924.971s]Generation 10
Best Result: (fitness: 20782.1, performance: 21507.0), Created by Mutate
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(times(divide(1, 1), #2)); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(#0, #1); seedExpr: [] }
[S2: EInt]{ seed: 91 ; iter: #0; seedExpr: dec(92) }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(1, concat([], prepend(#2, #3))); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([1,91]), Vector([1,123,1,91]), Vector([1,90,1,123,1,91]), Vector([1,122,1,90,1,123,1,91]), Vector([1,89,1,122,1,90,1,123,1,91]), Vector([1,121,1,89,1,122,1,90,1,123,1,91]), ...
Diversity: 469
Average Size: 38.328
Average Fitness: 9760.109764540151
Fitness Variation: 6811.190771383319
Distribution: [] -> 0.158, #2 -> 0.117, 1 -> 0.083, concat -> 0.061, append -> 0.055, #1 -> 0.054, divide -> 0.049, #0 -> 0.048, prepend -> 0.047, #3 -> 0.044
------------
[2149.790s]Generation 11
Best Result: (fitness: 20782.1, performance: 21507.0), Created by Mutate
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(times(divide(1, 1), #2)); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: append(#3, 5); seedExpr: [] }
[S2: EInt]{ seed: 91 ; iter: #0; seedExpr: dec(92) }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(1, concat([], prepend(#2, #3))); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([1,91]), Vector([1,123,1,91]), Vector([1,90,1,123,1,91]), Vector([1,122,1,90,1,123,1,91]), Vector([1,89,1,122,1,90,1,123,1,91]), Vector([1,121,1,89,1,122,1,90,1,123,1,91]), ...
Diversity: 464
Average Size: 36.786
Average Fitness: 10613.120656730323
Fitness Variation: 7001.102172807787
Distribution: [] -> 0.149, #2 -> 0.123, 1 -> 0.088, append -> 0.056, concat -> 0.054, #1 -> 0.053, divide -> 0.051, prepend -> 0.049, #0 -> 0.049, #3 -> 0.046
------------
[2349.830s]Generation 12
Best Result: (fitness: 22342.0, performance: 23418.0), Created by Mutate
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(times(divide(1, 1), #2)); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: concat(prepend(#2, #3), []); seedExpr: [] }
[S2: EInt]{ seed: 91 ; iter: #0; seedExpr: dec(92) }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(divide(0, #0), prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([0,123]), Vector([0,90,91]), Vector([0,122,123,0,123]), Vector([0,89,90,0,90,91]), Vector([0,121,122,0,122,123,0,123]), Vector([0,88,89,0,89,90,0,90,91]), ...
Diversity: 457
Average Size: 34.636
Average Fitness: 11591.439490137658
Fitness Variation: 7425.937196018835
Distribution: [] -> 0.140, #2 -> 0.126, 1 -> 0.092, append -> 0.058, prepend -> 0.053, #3 -> 0.051, #0 -> 0.051, divide -> 0.049, #1 -> 0.048, concat -> 0.047
------------
[2562.159s]Generation 13
Best Result: (fitness: 22488.5, performance: 23418.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(times(divide(1, 1), #2)); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: concat(prepend(#2, #3), []); seedExpr: [] }
[S2: EInt]{ seed: 92 ; iter: #0; seedExpr: 92 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(divide(0, #0), prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([0,123]), Vector([0,91,92]), Vector([0,122,123,0,123]), Vector([0,90,91,0,91,92]), Vector([0,121,122,0,122,123,0,123]), Vector([0,89,90,0,90,91,0,91,92]), ...
Diversity: 459
Average Size: 31.992
Average Fitness: 11809.4177021022
Fitness Variation: 7618.762880660149
Distribution: #2 -> 0.132, [] -> 0.129, 1 -> 0.104, #3 -> 0.062, prepend -> 0.058, append -> 0.052, divide -> 0.051, #0 -> 0.050, #1 -> 0.044, concat -> 0.039
------------
[2770.916s]Generation 14
Best Result: (fitness: 22767.7, performance: 23418.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(times(divide(1, 1), #2)); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: concat(prepend(#2, #3), []); seedExpr: [] }
[S2: EInt]{ seed: 92 ; iter: #0; seedExpr: 92 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(1, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([1,123]), Vector([1,91,92]), Vector([1,122,123,1,123]), Vector([1,90,91,1,91,92]), Vector([1,121,122,1,122,123,1,123]), Vector([1,89,90,1,90,91,1,91,92]), ...
Diversity: 446
Average Size: 29.36
Average Fitness: 12174.206303747816
Fitness Variation: 7832.48940440642
Distribution: #2 -> 0.138, [] -> 0.126, 1 -> 0.114, #3 -> 0.075, prepend -> 0.065, #0 -> 0.055, divide -> 0.051, append -> 0.050, concat -> 0.039, #1 -> 0.038
------------
[3009.711s]Generation 15
Best Result: (fitness: 22767.7, performance: 23418.0), Created by Mutate
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(times(divide(1, 1), #2)); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: concat(prepend(#2, #3), []); seedExpr: [] }
[S2: EInt]{ seed: 92 ; iter: #0; seedExpr: 92 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(1, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([1,123]), Vector([1,91,92]), Vector([1,122,123,1,123]), Vector([1,90,91,1,91,92]), Vector([1,121,122,1,122,123,1,123]), Vector([1,89,90,1,90,91,1,91,92]), ...
Diversity: 444
Average Size: 26.576
Average Fitness: 12754.417342221217
Fitness Variation: 7889.8390309306815
Distribution: #2 -> 0.143, 1 -> 0.126, [] -> 0.121, #3 -> 0.092, prepend -> 0.072, #0 -> 0.056, divide -> 0.053, concat -> 0.041, append -> 0.035, dec -> 0.034
------------
[3250.124s]Generation 16
Best Result: (fitness: 23127.8, performance: 23418.0), Created by Mutate
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(times(1, #2)); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(#2, #3); seedExpr: [] }
[S2: EInt]{ seed: 97 ; iter: #0; seedExpr: 97 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(1, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([1,123]), Vector([1,96,97]), Vector([1,122,123,1,123]), Vector([1,95,96,1,96,97]), Vector([1,121,122,1,122,123,1,123]), Vector([1,94,95,1,95,96,1,96,97]), ...
Diversity: 435
Average Size: 24.136
Average Fitness: 12888.199655002047
Fitness Variation: 8260.586539857535
Distribution: 1 -> 0.150, #2 -> 0.136, [] -> 0.116, #3 -> 0.105, prepend -> 0.080, #0 -> 0.059, divide -> 0.058, concat -> 0.041, dec -> 0.039, times -> 0.037
------------
[3475.496s]Generation 17
Best Result: (fitness: 23127.8, performance: 23418.0), Created by Copy
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(times(1, #2)); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(#2, #3); seedExpr: [] }
[S2: EInt]{ seed: 97 ; iter: #0; seedExpr: 97 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(1, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([1,123]), Vector([1,96,97]), Vector([1,122,123,1,123]), Vector([1,95,96,1,96,97]), Vector([1,121,122,1,122,123,1,123]), Vector([1,94,95,1,95,96,1,96,97]), ...
Diversity: 435
Average Size: 23.58
Average Fitness: 12262.049598064432
Fitness Variation: 8641.34524615627
Distribution: 1 -> 0.144, #2 -> 0.126, [] -> 0.107, #3 -> 0.103, prepend -> 0.085, #0 -> 0.072, divide -> 0.058, concat -> 0.037, dec -> 0.037, times -> 0.036
------------
[3698.648s]Generation 18
Best Result: (fitness: 23127.8, performance: 23418.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(times(1, #2)); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(#2, #3); seedExpr: [] }
[S2: EInt]{ seed: 97 ; iter: #0; seedExpr: 97 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(1, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([1,123]), Vector([1,96,97]), Vector([1,122,123,1,123]), Vector([1,95,96,1,96,97]), Vector([1,121,122,1,122,123,1,123]), Vector([1,94,95,1,95,96,1,96,97]), ...
Diversity: 426
Average Size: 23.17
Average Fitness: 13111.374060093987
Fitness Variation: 8807.809735503324
Distribution: 1 -> 0.145, #2 -> 0.123, [] -> 0.099, #3 -> 0.099, prepend -> 0.089, #0 -> 0.085, divide -> 0.061, #1 -> 0.041, times -> 0.037, dec -> 0.034
------------
[3929.255s]Generation 19
Best Result: (fitness: 23121.8, performance: 23418.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: concat(prepend(#2, #3), []); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(1, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([1,123]), Vector([1,0,1]), Vector([1,122,123,1,123]), Vector([1,-1,0,1,0,1]), Vector([1,121,122,1,122,123,1,123]), Vector([1,-2,-1,1,-1,0,1,0,1]), ...
Diversity: 417
Average Size: 23.572
Average Fitness: 13354.998439586781
Fitness Variation: 8890.01634279137
Distribution: 1 -> 0.144, #2 -> 0.129, [] -> 0.096, #0 -> 0.095, prepend -> 0.095, #3 -> 0.085, divide -> 0.066, #1 -> 0.053, times -> 0.036, concat -> 0.029
------------
[4164.045s]Generation 20
Best Result: (fitness: 23227.0, performance: 23411.0), Created by Mutate
[O0: EVect(EInt)] -> #1
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(#2, #3); seedExpr: [] }
[S2: EInt]{ seed: 97 ; iter: #0; seedExpr: 97 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(1, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([97]), Vector([123,1,123]), Vector([96,1,96,97]), Vector([122,1,122,123,1,123]), Vector([95,1,95,96,1,96,97]), Vector([121,1,121,122,1,122,123,1,123]), ...
Diversity: 407
Average Size: 23.708
Average Fitness: 13442.60829994573
Fitness Variation: 8983.933017948553
Distribution: 1 -> 0.149, #2 -> 0.122, #0 -> 0.103, prepend -> 0.099, [] -> 0.089, #3 -> 0.080, divide -> 0.067, #1 -> 0.066, times -> 0.039, 123 -> 0.027
------------
[4370.196s]Generation 21
Best Result: (fitness: 23354.6, performance: 23734.0), Created by Mutate
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: concat(prepend(inc(#2), #3), []); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(44, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([44,123]), Vector([44,0,2]), Vector([44,122,124,44,123]), Vector([44,-1,1,44,0,2]), Vector([44,121,123,44,122,124,44,123]), Vector([44,-2,0,44,-1,1,44,0,2]), ...
Diversity: 404
Average Size: 22.76
Average Fitness: 13254.675357002661
Fitness Variation: 9211.662277969592
Distribution: 1 -> 0.149, #2 -> 0.127, prepend -> 0.105, #0 -> 0.100, [] -> 0.099, #3 -> 0.082, #1 -> 0.069, divide -> 0.055, times -> 0.035, 123 -> 0.027
------------
[4585.318s]Generation 22
Best Result: (fitness: 23354.6, performance: 23734.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: concat(prepend(inc(#2), #3), []); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(44, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([44,123]), Vector([44,0,2]), Vector([44,122,124,44,123]), Vector([44,-1,1,44,0,2]), Vector([44,121,123,44,122,124,44,123]), Vector([44,-2,0,44,-1,1,44,0,2]), ...
Diversity: 414
Average Size: 21.208
Average Fitness: 13622.477013067703
Fitness Variation: 9121.609521161578
Distribution: #2 -> 0.127, 1 -> 0.122, prepend -> 0.117, [] -> 0.115, #0 -> 0.107, #3 -> 0.086, #1 -> 0.080, divide -> 0.034, concat -> 0.031, 123 -> 0.029
------------
[4794.944s]Generation 23
Best Result: (fitness: 23354.6, performance: 23734.0), Created by Copy
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: concat(prepend(inc(#2), #3), []); seedExpr: [] }
[S2: EInt]{ seed: 65 ; iter: #0; seedExpr: 65 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(44, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([44,123]), Vector([44,64,66]), Vector([44,122,124,44,123]), Vector([44,63,65,44,64,66]), Vector([44,121,123,44,122,124,44,123]), Vector([44,62,64,44,63,65,44,64,66]), ...
Diversity: 410
Average Size: 20.42
Average Fitness: 13406.81362255154
Fitness Variation: 9392.537955020802
Distribution: #2 -> 0.135, [] -> 0.130, prepend -> 0.126, #0 -> 0.107, #3 -> 0.097, #1 -> 0.085, 1 -> 0.080, concat -> 0.036, 123 -> 0.030, dec -> 0.030
------------
[4980.335s]Generation 24
Best Result: (fitness: 23469.2, performance: 23917.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 121 ; iter: dec(#2); seedExpr: dec(dec(123)) }
[S1: EVect(EInt)]{ seed: [] ; iter: concat(prepend(#2, #3), []); seedExpr: [] }
[S2: EInt]{ seed: 92 ; iter: #0; seedExpr: 92 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(1, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([1,121]), Vector([1,91,92]), Vector([1,120,121,1,121]), Vector([1,90,91,1,91,92]), Vector([1,119,120,1,120,121,1,121]), Vector([1,89,90,1,90,91,1,91,92]), ...
Diversity: 373
Average Size: 19.694
Average Fitness: 14231.729854906771
Fitness Variation: 9297.303087398488
Distribution: #2 -> 0.141, prepend -> 0.134, [] -> 0.130, #0 -> 0.117, #3 -> 0.105, #1 -> 0.090, 1 -> 0.058, concat -> 0.035, 123 -> 0.033, dec -> 0.032
------------
[5188.738s]Generation 25
Best Result: (fitness: 23394.0, performance: 23875.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: concat(prepend(inc(inc(#2)), #3), []); seedExpr: [] }
[S2: EInt]{ seed: 65 ; iter: #0; seedExpr: 65 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(44, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([44,123]), Vector([44,64,67]), Vector([44,122,125,44,123]), Vector([44,63,66,44,64,67]), Vector([44,121,124,44,122,125,44,123]), Vector([44,62,65,44,63,66,44,64,67]), ...
Diversity: 405
Average Size: 19.49
Average Fitness: 14034.953615044376
Fitness Variation: 9520.121169691009
Distribution: #2 -> 0.144, prepend -> 0.134, [] -> 0.123, #0 -> 0.118, #3 -> 0.108, #1 -> 0.087, 1 -> 0.043, 123 -> 0.035, concat -> 0.032, dec -> 0.031
------------
[5369.044s]Generation 26
Best Result: (fitness: 23394.0, performance: 23875.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: concat(prepend(inc(inc(#2)), #3), []); seedExpr: [] }
[S2: EInt]{ seed: 65 ; iter: #0; seedExpr: 65 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(44, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([44,123]), Vector([44,64,67]), Vector([44,122,125,44,123]), Vector([44,63,66,44,64,67]), Vector([44,121,124,44,122,125,44,123]), Vector([44,62,65,44,63,66,44,64,67]), ...
Diversity: 377
Average Size: 19.354
Average Fitness: 15148.262694326328
Fitness Variation: 9179.646367276533
Distribution: #2 -> 0.146, prepend -> 0.135, #0 -> 0.121, [] -> 0.120, #3 -> 0.107, #1 -> 0.091, 123 -> 0.039, 1 -> 0.037, inc -> 0.033, dec -> 0.031
------------
[5567.907s]Generation 27
Best Result: (fitness: 23497.0, performance: 23734.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(inc(#2), #3); seedExpr: [] }
[S2: EInt]{ seed: 65 ; iter: #0; seedExpr: 65 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(123, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([123,123]), Vector([123,64,66]), Vector([123,122,124,123,123]), Vector([123,63,65,123,64,66]), Vector([123,121,123,123,122,124,123,123]), Vector([123,62,64,123,63,65,123,64,66]), ...
Diversity: 377
Average Size: 19.31
Average Fitness: 15153.857247897078
Fitness Variation: 9314.087022739222
Distribution: #2 -> 0.152, prepend -> 0.134, #0 -> 0.118, [] -> 0.117, #3 -> 0.104, #1 -> 0.090, inc -> 0.058, 123 -> 0.041, dec -> 0.030, concat -> 0.029
------------
[5766.282s]Generation 28
Best Result: (fitness: 23497.0, performance: 23734.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(inc(#2), #3); seedExpr: [] }
[S2: EInt]{ seed: 44 ; iter: #0; seedExpr: 44 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(44, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([44,123]), Vector([44,43,45]), Vector([44,122,124,44,123]), Vector([44,42,44,44,43,45]), Vector([44,121,123,44,122,124,44,123]), Vector([44,41,43,44,42,44,44,43,45]), ...
Diversity: 379
Average Size: 19.99
Average Fitness: 14303.873187996358
Fitness Variation: 9319.803931018403
Distribution: #2 -> 0.152, prepend -> 0.129, [] -> 0.118, #0 -> 0.112, #3 -> 0.098, #1 -> 0.083, inc -> 0.074, 123 -> 0.039, 44 -> 0.034, concat -> 0.032
------------
[5967.034s]Generation 29
Best Result: (fitness: 23498.0, performance: 23735.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(inc(#2), #3); seedExpr: [] }
[S2: EInt]{ seed: 44 ; iter: #0; seedExpr: 44 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(#2, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([44,123]), Vector([123,43,45]), Vector([43,122,124,44,123]), Vector([122,42,44,123,43,45]), Vector([42,121,123,43,122,124,44,123]), Vector([121,41,43,122,42,44,123,43,45]), ...
Diversity: 373
Average Size: 20.096
Average Fitness: 14802.930900647438
Fitness Variation: 9151.37194993531
Distribution: #2 -> 0.153, prepend -> 0.127, [] -> 0.113, #0 -> 0.112, #3 -> 0.101, inc -> 0.081, #1 -> 0.081, 123 -> 0.040, 44 -> 0.036, concat -> 0.031
------------
[6182.000s]Generation 30
Best Result: (fitness: 23502.9, performance: 23740.0), Created by Crossover
[O0: EVect(EInt)] -> #1
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(inc(#2), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(123, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([2]), Vector([124,123,123]), Vector([1,123,0,2]), Vector([123,123,122,124,123,123]), Vector([0,123,-1,1,123,0,2]), Vector([122,123,121,123,123,122,124,123,123]), ...
Diversity: 403
Average Size: 20.202
Average Fitness: 14609.9740925807
Fitness Variation: 9090.228555159945
Distribution: #2 -> 0.152, prepend -> 0.123, #0 -> 0.113, [] -> 0.109, #3 -> 0.096, inc -> 0.094, #1 -> 0.084, 123 -> 0.038, 44 -> 0.036, dec -> 0.030
------------
[6386.743s]Generation 31
Best Result: (fitness: 23573.0, performance: 23875.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(inc(inc(#2)), #3); seedExpr: [] }
[S2: EInt]{ seed: 44 ; iter: #0; seedExpr: 44 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(44, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([44,123]), Vector([44,43,46]), Vector([44,122,125,44,123]), Vector([44,42,45,44,43,46]), Vector([44,121,124,44,122,125,44,123]), Vector([44,41,44,44,42,45,44,43,46]), ...
Diversity: 401
Average Size: 20.068
Average Fitness: 14895.654641915105
Fitness Variation: 9065.01875006432
Distribution: #2 -> 0.151, prepend -> 0.123, #0 -> 0.117, [] -> 0.106, inc -> 0.098, #3 -> 0.094, #1 -> 0.082, 123 -> 0.042, 44 -> 0.039, dec -> 0.032
------------
[6579.555s]Generation 32
Best Result: (fitness: 23573.0, performance: 23875.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(inc(inc(#2)), #3); seedExpr: [] }
[S2: EInt]{ seed: 0 ; iter: #0; seedExpr: 0 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(123, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([123,123]), Vector([123,-1,2]), Vector([123,122,125,123,123]), Vector([123,-2,1,123,-1,2]), Vector([123,121,124,123,122,125,123,123]), Vector([123,-3,0,123,-2,1,123,-1,2]), ...
Diversity: 394
Average Size: 19.984
Average Fitness: 14519.872504262657
Fitness Variation: 9421.815658590325
Distribution: #2 -> 0.152, prepend -> 0.121, #0 -> 0.114, inc -> 0.105, [] -> 0.100, #3 -> 0.092, #1 -> 0.082, 44 -> 0.041, 123 -> 0.041, dec -> 0.034
------------
[6773.598s]Generation 33
Best Result: (fitness: 24176.9, performance: 24674.0), Created by Mutate
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 44 ; iter: #0; seedExpr: 44 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(44, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([44,123]), Vector([44,43,50]), Vector([44,122,129,44,123]), Vector([44,42,49,44,43,50]), Vector([44,121,128,44,122,129,44,123]), Vector([44,41,48,44,42,49,44,43,50]), ...
Diversity: 377
Average Size: 19.282
Average Fitness: 14834.517447411246
Fitness Variation: 9238.5634919631
Distribution: #2 -> 0.155, prepend -> 0.122, #0 -> 0.117, inc -> 0.105, #3 -> 0.096, [] -> 0.096, #1 -> 0.083, 44 -> 0.045, 123 -> 0.042, dec -> 0.034
------------
[6970.429s]Generation 34
Best Result: (fitness: 24176.9, performance: 24674.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 44 ; iter: #0; seedExpr: 44 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(44, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([44,123]), Vector([44,43,50]), Vector([44,122,129,44,123]), Vector([44,42,49,44,43,50]), Vector([44,121,128,44,122,129,44,123]), Vector([44,41,48,44,42,49,44,43,50]), ...
Diversity: 384
Average Size: 18.814
Average Fitness: 15075.94595078887
Fitness Variation: 9148.06176281469
Distribution: #2 -> 0.162, prepend -> 0.121, #0 -> 0.118, #3 -> 0.095, inc -> 0.092, #1 -> 0.088, [] -> 0.085, 123 -> 0.050, 44 -> 0.037, dec -> 0.034
------------
[7149.892s]Generation 35
Best Result: (fitness: 24176.9, performance: 24674.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 44 ; iter: #0; seedExpr: 44 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(44, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([44,123]), Vector([44,43,50]), Vector([44,122,129,44,123]), Vector([44,42,49,44,43,50]), Vector([44,121,128,44,122,129,44,123]), Vector([44,41,48,44,42,49,44,43,50]), ...
Diversity: 357
Average Size: 18.416
Average Fitness: 15523.835614875532
Fitness Variation: 9351.428828148837
Distribution: #2 -> 0.169, #0 -> 0.124, prepend -> 0.121, #1 -> 0.095, #3 -> 0.089, inc -> 0.083, [] -> 0.083, 123 -> 0.054, dec -> 0.035, 44 -> 0.032
------------
[7336.210s]Generation 36
Best Result: (fitness: 24142.3, performance: 24769.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(inc(inc(inc(inc(inc(#2))))), #3); seedExpr: [] }
[S2: EInt]{ seed: 0 ; iter: #0; seedExpr: 0 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(123, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([123,123]), Vector([123,-1,5]), Vector([123,122,128,123,123]), Vector([123,-2,4,123,-1,5]), Vector([123,121,127,123,122,128,123,123]), Vector([123,-3,3,123,-2,4,123,-1,5]), ...
Diversity: 383
Average Size: 18.646
Average Fitness: 14319.524920770577
Fitness Variation: 9516.635594448335
Distribution: #2 -> 0.161, #0 -> 0.124, prepend -> 0.118, inc -> 0.102, #1 -> 0.093, #3 -> 0.083, [] -> 0.078, 123 -> 0.059, dec -> 0.035, 44 -> 0.027
------------
[7539.216s]Generation 37
Best Result: (fitness: 24142.3, performance: 24769.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(inc(inc(inc(inc(inc(#2))))), #3); seedExpr: [] }
[S2: EInt]{ seed: 0 ; iter: #0; seedExpr: 0 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(123, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([123,123]), Vector([123,-1,5]), Vector([123,122,128,123,123]), Vector([123,-2,4,123,-1,5]), Vector([123,121,127,123,122,128,123,123]), Vector([123,-3,3,123,-2,4,123,-1,5]), ...
Diversity: 384
Average Size: 18.962
Average Fitness: 15924.702141863978
Fitness Variation: 8730.485300022683
Distribution: #2 -> 0.160, inc -> 0.133, #0 -> 0.120, prepend -> 0.114, #1 -> 0.088, #3 -> 0.086, [] -> 0.074, 123 -> 0.058, dec -> 0.032, 44 -> 0.026
------------
[7757.715s]Generation 38
Best Result: (fitness: 24142.3, performance: 24769.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(inc(inc(inc(inc(inc(#2))))), #3); seedExpr: [] }
[S2: EInt]{ seed: 123 ; iter: #0; seedExpr: 123 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(123, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([123,123]), Vector([123,122,128]), Vector([123,122,128,123,123]), Vector([123,121,127,123,122,128]), Vector([123,121,127,123,122,128,123,123]), Vector([123,120,126,123,121,127,123,122,128]), ...
Diversity: 400
Average Size: 19.58
Average Fitness: 15607.97828836446
Fitness Variation: 8911.448754376344
Distribution: inc -> 0.167, #2 -> 0.159, #0 -> 0.114, prepend -> 0.106, #1 -> 0.087, #3 -> 0.078, [] -> 0.068, 123 -> 0.058, dec -> 0.030, 44 -> 0.021
------------
[7955.260s]Generation 39
Best Result: (fitness: 24142.3, performance: 24769.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(inc(inc(inc(inc(inc(#2))))), #3); seedExpr: [] }
[S2: EInt]{ seed: 44 ; iter: #0; seedExpr: 44 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(44, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([44,123]), Vector([44,43,49]), Vector([44,122,128,44,123]), Vector([44,42,48,44,43,49]), Vector([44,121,127,44,122,128,44,123]), Vector([44,41,47,44,42,48,44,43,49]), ...
Diversity: 383
Average Size: 20.022
Average Fitness: 16420.87190970117
Fitness Variation: 8719.256886709347
Distribution: inc -> 0.207, #2 -> 0.158, #0 -> 0.110, prepend -> 0.098, #1 -> 0.077, #3 -> 0.074, [] -> 0.071, 123 -> 0.051, dec -> 0.033, 44 -> 0.024
------------
[8151.779s]Generation 40
Best Result: (fitness: 24383.1, performance: 25016.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, dec(#0))), #3); seedExpr: [] }
[S2: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(125, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([125,123]), Vector([125,5,12]), Vector([125,122,125,125,123]), Vector([125,4,11,125,5,12]), Vector([125,121,122,125,122,125,125,123]), Vector([125,3,10,125,4,11,125,5,12]), ...
Diversity: 382
Average Size: 21.04
Average Fitness: 16107.167481346723
Fitness Variation: 9040.80415113516
Distribution: inc -> 0.268, #2 -> 0.153, #0 -> 0.101, prepend -> 0.088, #1 -> 0.068, #3 -> 0.065, [] -> 0.062, 123 -> 0.038, dec -> 0.030, 44 -> 0.026
------------
[8359.774s]Generation 41
Best Result: (fitness: 24383.1, performance: 25016.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, dec(#0))), #3); seedExpr: [] }
[S2: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(125, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([125,123]), Vector([125,5,12]), Vector([125,122,125,125,123]), Vector([125,4,11,125,5,12]), Vector([125,121,122,125,122,125,125,123]), Vector([125,3,10,125,4,11,125,5,12]), ...
Diversity: 394
Average Size: 21.764
Average Fitness: 16095.63938321939
Fitness Variation: 9065.97894823871
Distribution: inc -> 0.273, #2 -> 0.146, #0 -> 0.101, prepend -> 0.083, #1 -> 0.065, #3 -> 0.062, [] -> 0.060, 123 -> 0.034, dec -> 0.032, 44 -> 0.026
------------
[8585.682s]Generation 42
Best Result: (fitness: 24383.1, performance: 25016.0), Created by Copy
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, dec(#0))), #3); seedExpr: [] }
[S2: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(125, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([125,123]), Vector([125,5,12]), Vector([125,122,125,125,123]), Vector([125,4,11,125,5,12]), Vector([125,121,122,125,122,125,125,123]), Vector([125,3,10,125,4,11,125,5,12]), ...
Diversity: 412
Average Size: 22.0
Average Fitness: 15596.966815251853
Fitness Variation: 9181.78263956893
Distribution: inc -> 0.272, #2 -> 0.147, #0 -> 0.102, prepend -> 0.080, #1 -> 0.062, #3 -> 0.060, [] -> 0.058, 123 -> 0.036, dec -> 0.035, 44 -> 0.022
------------
[8800.614s]Generation 43
Best Result: (fitness: 24464.0, performance: 24967.0), Created by Mutate
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(125, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([125,123]), Vector([125,5,12]), Vector([125,122,124,125,123]), Vector([125,4,11,125,5,12]), Vector([125,121,124,125,122,124,125,123]), Vector([125,3,10,125,4,11,125,5,12]), ...
Diversity: 400
Average Size: 21.39
Average Fitness: 16377.62384379724
Fitness Variation: 9065.590070845245
Distribution: inc -> 0.245, #2 -> 0.144, #0 -> 0.108, prepend -> 0.083, #1 -> 0.064, #3 -> 0.063, [] -> 0.053, 123 -> 0.041, dec -> 0.038, 6 -> 0.029
------------
[9029.207s]Generation 44
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(44, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([44,123]), Vector([44,0,7]), Vector([44,122,124,44,123]), Vector([44,-1,6,44,0,7]), Vector([44,121,122,44,122,124,44,123]), Vector([44,-2,5,44,-1,6,44,0,7]), ...
Diversity: 409
Average Size: 21.276
Average Fitness: 17003.600313971758
Fitness Variation: 8826.858082629633
Distribution: inc -> 0.182, #2 -> 0.142, #0 -> 0.116, prepend -> 0.086, #1 -> 0.066, #3 -> 0.065, [] -> 0.052, 6 -> 0.045, dec -> 0.044, 123 -> 0.042
------------
[9266.414s]Generation 45
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(44, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([44,123]), Vector([44,0,7]), Vector([44,122,124,44,123]), Vector([44,-1,6,44,0,7]), Vector([44,121,122,44,122,124,44,123]), Vector([44,-2,5,44,-1,6,44,0,7]), ...
Diversity: 436
Average Size: 21.224
Average Fitness: 16298.550755142209
Fitness Variation: 9115.165731780762
Distribution: #2 -> 0.139, #0 -> 0.127, inc -> 0.110, prepend -> 0.087, #1 -> 0.069, #3 -> 0.067, 6 -> 0.066, [] -> 0.057, modular -> 0.046, dec -> 0.046
------------
[9498.713s]Generation 46
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(44, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([44,123]), Vector([44,0,7]), Vector([44,122,124,44,123]), Vector([44,-1,6,44,0,7]), Vector([44,121,122,44,122,124,44,123]), Vector([44,-2,5,44,-1,6,44,0,7]), ...
Diversity: 428
Average Size: 21.314
Average Fitness: 17049.926817430747
Fitness Variation: 8961.355417658453
Distribution: #0 -> 0.137, #2 -> 0.133, prepend -> 0.090, 6 -> 0.079, #1 -> 0.069, #3 -> 0.069, [] -> 0.061, modular -> 0.059, dec -> 0.046, inc -> 0.043
------------
[9721.190s]Generation 47
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(44, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([44,123]), Vector([44,0,7]), Vector([44,122,124,44,123]), Vector([44,-1,6,44,0,7]), Vector([44,121,122,44,122,124,44,123]), Vector([44,-2,5,44,-1,6,44,0,7]), ...
Diversity: 403
Average Size: 21.202
Average Fitness: 16270.622549294518
Fitness Variation: 9147.79573078496
Distribution: #0 -> 0.157, #2 -> 0.133, 6 -> 0.093, prepend -> 0.090, #3 -> 0.072, #1 -> 0.069, modular -> 0.066, [] -> 0.057, dec -> 0.050, plus -> 0.046
------------
[9935.566s]Generation 48
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(#2, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([1,123]), Vector([123,0,7]), Vector([0,122,124,1,123]), Vector([122,-1,6,123,0,7]), Vector([-1,121,122,0,122,124,1,123]), Vector([121,-2,5,122,-1,6,123,0,7]), ...
Diversity: 398
Average Size: 21.294
Average Fitness: 15595.275000796251
Fitness Variation: 9609.189071934916
Distribution: #0 -> 0.166, #2 -> 0.129, 6 -> 0.091, prepend -> 0.090, #3 -> 0.072, #1 -> 0.071, modular -> 0.064, [] -> 0.058, plus -> 0.047, dec -> 0.047
------------
[10149.169s]Generation 49
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(43, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([43,123]), Vector([43,0,7]), Vector([43,122,124,43,123]), Vector([43,-1,6,43,0,7]), Vector([43,121,122,43,122,124,43,123]), Vector([43,-2,5,43,-1,6,43,0,7]), ...
Diversity: 388
Average Size: 20.696
Average Fitness: 16889.768572212975
Fitness Variation: 9212.54816835074
Distribution: #0 -> 0.175, #2 -> 0.129, prepend -> 0.095, 6 -> 0.095, #1 -> 0.075, #3 -> 0.072, modular -> 0.066, [] -> 0.059, plus -> 0.047, dec -> 0.042
------------
[10385.569s]Generation 50
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Copy
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(125, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([125,123]), Vector([125,0,7]), Vector([125,122,124,125,123]), Vector([125,-1,6,125,0,7]), Vector([125,121,122,125,122,124,125,123]), Vector([125,-2,5,125,-1,6,125,0,7]), ...
Diversity: 394
Average Size: 20.934
Average Fitness: 16138.30258436988
Fitness Variation: 9216.708039751244
Distribution: #0 -> 0.176, #2 -> 0.130, prepend -> 0.093, 6 -> 0.092, #3 -> 0.073, #1 -> 0.071, modular -> 0.068, [] -> 0.058, plus -> 0.050, dec -> 0.032
------------
[10606.125s]Generation 51
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(2, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([2,123]), Vector([2,0,7]), Vector([2,122,124,2,123]), Vector([2,-1,6,2,0,7]), Vector([2,121,122,2,122,124,2,123]), Vector([2,-2,5,2,-1,6,2,0,7]), ...
Diversity: 387
Average Size: 20.714
Average Fitness: 16113.142797741135
Fitness Variation: 9212.564995204
Distribution: #0 -> 0.177, #2 -> 0.131, prepend -> 0.096, 6 -> 0.092, #3 -> 0.076, #1 -> 0.074, modular -> 0.066, [] -> 0.059, plus -> 0.049, 123 -> 0.032
------------
[10815.708s]Generation 52
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(123, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([123,123]), Vector([123,0,7]), Vector([123,122,124,123,123]), Vector([123,-1,6,123,0,7]), Vector([123,121,122,123,122,124,123,123]), Vector([123,-2,5,123,-1,6,123,0,7]), ...
Diversity: 361
Average Size: 20.994
Average Fitness: 16750.842961705483
Fitness Variation: 8905.567598085128
Distribution: #0 -> 0.176, #2 -> 0.129, prepend -> 0.095, 6 -> 0.086, #3 -> 0.075, #1 -> 0.074, modular -> 0.067, [] -> 0.060, plus -> 0.048, 123 -> 0.033
------------
[11020.867s]Generation 53
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(43, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([43,123]), Vector([43,0,7]), Vector([43,122,124,43,123]), Vector([43,-1,6,43,0,7]), Vector([43,121,122,43,122,124,43,123]), Vector([43,-2,5,43,-1,6,43,0,7]), ...
Diversity: 344
Average Size: 20.87
Average Fitness: 17741.055863089787
Fitness Variation: 8467.08038531324
Distribution: #0 -> 0.180, #2 -> 0.129, prepend -> 0.099, 6 -> 0.090, #3 -> 0.075, #1 -> 0.073, modular -> 0.066, [] -> 0.060, plus -> 0.049, 123 -> 0.038
------------
[11319.046s]Generation 54
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Copy
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(43, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([43,123]), Vector([43,0,7]), Vector([43,122,124,43,123]), Vector([43,-1,6,43,0,7]), Vector([43,121,122,43,122,124,43,123]), Vector([43,-2,5,43,-1,6,43,0,7]), ...
Diversity: 366
Average Size: 20.548
Average Fitness: 15721.904018882951
Fitness Variation: 9494.512961263172
Distribution: #0 -> 0.179, #2 -> 0.127, prepend -> 0.098, 6 -> 0.090, #3 -> 0.077, #1 -> 0.072, [] -> 0.065, modular -> 0.064, plus -> 0.047, 123 -> 0.038
------------
[12232.011s]Generation 55
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Mutate
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(123, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([123,123]), Vector([123,0,7]), Vector([123,122,124,123,123]), Vector([123,-1,6,123,0,7]), Vector([123,121,122,123,122,124,123,123]), Vector([123,-2,5,123,-1,6,123,0,7]), ...
Diversity: 356
Average Size: 20.906
Average Fitness: 16413.765751602445
Fitness Variation: 9205.089879434063
Distribution: #0 -> 0.174, #2 -> 0.130, prepend -> 0.095, 6 -> 0.088, #3 -> 0.076, #1 -> 0.070, [] -> 0.066, modular -> 0.065, plus -> 0.046, 123 -> 0.037
------------
[12410.938s]Generation 56
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Copy
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(#2, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([1,123]), Vector([123,0,7]), Vector([0,122,124,1,123]), Vector([122,-1,6,123,0,7]), Vector([-1,121,122,0,122,124,1,123]), Vector([121,-2,5,122,-1,6,123,0,7]), ...
Diversity: 340
Average Size: 20.858
Average Fitness: 16124.845963642862
Fitness Variation: 9335.302771108452
Distribution: #0 -> 0.177, #2 -> 0.127, prepend -> 0.094, 6 -> 0.086, #3 -> 0.077, #1 -> 0.071, modular -> 0.066, [] -> 0.064, plus -> 0.047, 123 -> 0.036
------------
[12589.710s]Generation 57
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(44, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([44,123]), Vector([44,0,7]), Vector([44,122,124,44,123]), Vector([44,-1,6,44,0,7]), Vector([44,121,122,44,122,124,44,123]), Vector([44,-2,5,44,-1,6,44,0,7]), ...
Diversity: 330
Average Size: 20.71
Average Fitness: 17086.372005297555
Fitness Variation: 8899.86505523169
Distribution: #0 -> 0.181, #2 -> 0.132, prepend -> 0.096, 6 -> 0.085, #3 -> 0.081, #1 -> 0.073, modular -> 0.066, [] -> 0.059, plus -> 0.047, 123 -> 0.033
------------
[12768.888s]Generation 58
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Copy
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(44, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([44,123]), Vector([44,0,7]), Vector([44,122,124,44,123]), Vector([44,-1,6,44,0,7]), Vector([44,121,122,44,122,124,44,123]), Vector([44,-2,5,44,-1,6,44,0,7]), ...
Diversity: 321
Average Size: 20.916
Average Fitness: 16645.09734388062
Fitness Variation: 9146.113452370133
Distribution: #0 -> 0.185, #2 -> 0.129, prepend -> 0.096, 6 -> 0.087, #3 -> 0.074, #1 -> 0.072, modular -> 0.069, [] -> 0.059, plus -> 0.049, 123 -> 0.032
------------
[12952.285s]Generation 59
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Mutate
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(123, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([123,123]), Vector([123,0,7]), Vector([123,122,124,123,123]), Vector([123,-1,6,123,0,7]), Vector([123,121,122,123,122,124,123,123]), Vector([123,-2,5,123,-1,6,123,0,7]), ...
Diversity: 344
Average Size: 20.8
Average Fitness: 15757.546100107475
Fitness Variation: 9476.744342907004
Distribution: #0 -> 0.183, #2 -> 0.128, prepend -> 0.097, 6 -> 0.087, #3 -> 0.077, #1 -> 0.074, modular -> 0.065, [] -> 0.063, plus -> 0.046, 123 -> 0.033
------------
[13138.395s]Generation 60
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(#2, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([1,123]), Vector([123,0,7]), Vector([0,122,124,1,123]), Vector([122,-1,6,123,0,7]), Vector([-1,121,122,0,122,124,1,123]), Vector([121,-2,5,122,-1,6,123,0,7]), ...
Diversity: 347
Average Size: 20.958
Average Fitness: 16907.810011341684
Fitness Variation: 8962.887669351167
Distribution: #0 -> 0.182, #2 -> 0.130, prepend -> 0.094, 6 -> 0.087, #3 -> 0.077, #1 -> 0.070, modular -> 0.067, [] -> 0.061, plus -> 0.050, 123 -> 0.033
------------
[13333.049s]Generation 61
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Copy
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(125, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([125,123]), Vector([125,0,7]), Vector([125,122,124,125,123]), Vector([125,-1,6,125,0,7]), Vector([125,121,122,125,122,124,125,123]), Vector([125,-2,5,125,-1,6,125,0,7]), ...
Diversity: 352
Average Size: 21.002
Average Fitness: 16494.596798500526
Fitness Variation: 9091.372136399697
Distribution: #0 -> 0.179, #2 -> 0.134, prepend -> 0.094, 6 -> 0.086, #3 -> 0.077, #1 -> 0.070, modular -> 0.066, [] -> 0.064, plus -> 0.048, 123 -> 0.032
------------
[13519.494s]Generation 62
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Mutate
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(#2, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([1,123]), Vector([123,0,7]), Vector([0,122,124,1,123]), Vector([122,-1,6,123,0,7]), Vector([-1,121,122,0,122,124,1,123]), Vector([121,-2,5,122,-1,6,123,0,7]), ...
Diversity: 349
Average Size: 20.824
Average Fitness: 16208.577415043652
Fitness Variation: 9488.401790903314
Distribution: #0 -> 0.183, #2 -> 0.134, prepend -> 0.096, 6 -> 0.089, #3 -> 0.078, #1 -> 0.071, modular -> 0.067, [] -> 0.064, plus -> 0.047, 123 -> 0.031
------------
[13710.650s]Generation 63
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Mutate
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(125, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([125,123]), Vector([125,0,7]), Vector([125,122,124,125,123]), Vector([125,-1,6,125,0,7]), Vector([125,121,122,125,122,124,125,123]), Vector([125,-2,5,125,-1,6,125,0,7]), ...
Diversity: 342
Average Size: 20.878
Average Fitness: 17444.87374408865
Fitness Variation: 8732.397691746384
Distribution: #0 -> 0.182, #2 -> 0.136, prepend -> 0.097, 6 -> 0.091, #3 -> 0.075, #1 -> 0.074, modular -> 0.067, [] -> 0.060, plus -> 0.047, 123 -> 0.031
------------
[13892.956s]Generation 64
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(93, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([93,123]), Vector([93,0,7]), Vector([93,122,124,93,123]), Vector([93,-1,6,93,0,7]), Vector([93,121,122,93,122,124,93,123]), Vector([93,-2,5,93,-1,6,93,0,7]), ...
Diversity: 336
Average Size: 20.914
Average Fitness: 15872.80383537127
Fitness Variation: 9470.91739627729
Distribution: #0 -> 0.180, #2 -> 0.140, prepend -> 0.095, 6 -> 0.092, #3 -> 0.073, #1 -> 0.070, modular -> 0.068, [] -> 0.063, plus -> 0.048, 123 -> 0.029
------------
[14082.765s]Generation 65
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(43, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([43,123]), Vector([43,0,7]), Vector([43,122,124,43,123]), Vector([43,-1,6,43,0,7]), Vector([43,121,122,43,122,124,43,123]), Vector([43,-2,5,43,-1,6,43,0,7]), ...
Diversity: 359
Average Size: 20.758
Average Fitness: 16122.87725962855
Fitness Variation: 9430.252353146594
Distribution: #0 -> 0.183, #2 -> 0.141, prepend -> 0.095, 6 -> 0.088, #3 -> 0.074, #1 -> 0.071, modular -> 0.068, [] -> 0.060, plus -> 0.048, 123 -> 0.032
------------
[14264.759s]Generation 66
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Copy
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(43, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([43,123]), Vector([43,0,7]), Vector([43,122,124,43,123]), Vector([43,-1,6,43,0,7]), Vector([43,121,122,43,122,124,43,123]), Vector([43,-2,5,43,-1,6,43,0,7]), ...
Diversity: 357
Average Size: 20.854
Average Fitness: 15980.217151563567
Fitness Variation: 9257.862940959238
Distribution: #0 -> 0.180, #2 -> 0.133, prepend -> 0.096, 6 -> 0.090, #3 -> 0.074, #1 -> 0.072, modular -> 0.067, [] -> 0.063, plus -> 0.049, 123 -> 0.031
------------
[14469.841s]Generation 67
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Copy
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(#2, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([1,123]), Vector([123,0,7]), Vector([0,122,124,1,123]), Vector([122,-1,6,123,0,7]), Vector([-1,121,122,0,122,124,1,123]), Vector([121,-2,5,122,-1,6,123,0,7]), ...
Diversity: 359
Average Size: 20.9
Average Fitness: 16420.773223018165
Fitness Variation: 9200.561994858817
Distribution: #0 -> 0.180, #2 -> 0.137, prepend -> 0.096, 6 -> 0.090, #3 -> 0.076, #1 -> 0.073, modular -> 0.068, [] -> 0.061, plus -> 0.049, 1 -> 0.031
------------
[14665.565s]Generation 68
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Mutate
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(125, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([125,123]), Vector([125,0,7]), Vector([125,122,124,125,123]), Vector([125,-1,6,125,0,7]), Vector([125,121,122,125,122,124,125,123]), Vector([125,-2,5,125,-1,6,125,0,7]), ...
Diversity: 342
Average Size: 20.838
Average Fitness: 17256.496212918162
Fitness Variation: 8848.281407935898
Distribution: #0 -> 0.182, #2 -> 0.137, prepend -> 0.096, 6 -> 0.084, #1 -> 0.075, #3 -> 0.074, modular -> 0.066, [] -> 0.064, plus -> 0.047, 123 -> 0.029
------------
[14843.260s]Generation 69
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Copy
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(#2, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([1,123]), Vector([123,0,7]), Vector([0,122,124,1,123]), Vector([122,-1,6,123,0,7]), Vector([-1,121,122,0,122,124,1,123]), Vector([121,-2,5,122,-1,6,123,0,7]), ...
Diversity: 345
Average Size: 21.162
Average Fitness: 16106.881277887105
Fitness Variation: 9500.755711966915
Distribution: #0 -> 0.184, #2 -> 0.134, prepend -> 0.095, 6 -> 0.090, #1 -> 0.073, #3 -> 0.071, modular -> 0.069, [] -> 0.063, plus -> 0.048, 123 -> 0.028
------------
[15042.607s]Generation 70
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Crossover
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(#2, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([1,123]), Vector([123,0,7]), Vector([0,122,124,1,123]), Vector([122,-1,6,123,0,7]), Vector([-1,121,122,0,122,124,1,123]), Vector([121,-2,5,122,-1,6,123,0,7]), ...
Diversity: 350
Average Size: 20.856
Average Fitness: 16728.05956996019
Fitness Variation: 8975.362084992797
Distribution: #0 -> 0.180, #2 -> 0.135, prepend -> 0.096, 6 -> 0.088, #3 -> 0.077, #1 -> 0.072, modular -> 0.066, [] -> 0.058, plus -> 0.048, dec -> 0.029
------------
[15230.180s]Generation 71
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Mutate
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(1, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([1,123]), Vector([1,0,7]), Vector([1,122,124,1,123]), Vector([1,-1,6,1,0,7]), Vector([1,121,122,1,122,124,1,123]), Vector([1,-2,5,1,-1,6,1,0,7]), ...
Diversity: 350
Average Size: 20.562
Average Fitness: 15868.277715083219
Fitness Variation: 9565.079378641272
Distribution: #0 -> 0.180, #2 -> 0.136, prepend -> 0.096, 6 -> 0.090, #3 -> 0.073, #1 -> 0.071, modular -> 0.066, [] -> 0.063, plus -> 0.048, 1 -> 0.030
------------
[15438.477s]Generation 72
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Copy
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(123, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([123,123]), Vector([123,0,7]), Vector([123,122,124,123,123]), Vector([123,-1,6,123,0,7]), Vector([123,121,122,123,122,124,123,123]), Vector([123,-2,5,123,-1,6,123,0,7]), ...
Diversity: 364
Average Size: 20.73
Average Fitness: 16049.251375615422
Fitness Variation: 9272.746684559836
Distribution: #0 -> 0.181, #2 -> 0.135, prepend -> 0.094, 6 -> 0.087, #3 -> 0.075, #1 -> 0.070, modular -> 0.068, [] -> 0.062, plus -> 0.049, 123 -> 0.031
------------
[15628.613s]Generation 73
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Mutate
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(#2, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([1,123]), Vector([123,0,7]), Vector([0,122,124,1,123]), Vector([122,-1,6,123,0,7]), Vector([-1,121,122,0,122,124,1,123]), Vector([121,-2,5,122,-1,6,123,0,7]), ...
Diversity: 357
Average Size: 20.922
Average Fitness: 15684.07171169938
Fitness Variation: 9792.58360191826
Distribution: #0 -> 0.178, #2 -> 0.135, prepend -> 0.094, 6 -> 0.086, #3 -> 0.073, #1 -> 0.069, modular -> 0.066, [] -> 0.066, plus -> 0.048, 1 -> 0.031
------------
[15839.115s]Generation 74
Best Result: (fitness: 24551.2, performance: 25056.0), Created by Mutate
[O0: EVect(EInt)] -> #3
*
[S0: EInt]{ seed: 123 ; iter: dec(#2); seedExpr: 123 }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(plus(#2, modular(6, #0)), #3); seedExpr: [] }
[S2: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S3: EVect(EInt)]{ seed: [] ; iter: prepend(125, prepend(#0, #1)); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([125,123]), Vector([125,0,7]), Vector([125,122,124,125,123]), Vector([125,-1,6,125,0,7]), Vector([125,121,122,125,122,124,125,123]), Vector([125,-2,5,125,-1,6,125,0,7]), ...
Diversity: 370
Average Size: 20.752
Average Fitness: 16608.10058447272
Fitness Variation: 9222.473176957576
Distribution: #0 -> 0.182, #2 -> 0.132, prepend -> 0.098, 6 -> 0.087, #3 -> 0.076, #1 -> 0.072, modular -> 0.066, [] -> 0.063, plus -> 0.046, 123 -> 0.031
