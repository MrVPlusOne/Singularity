[Configuration]
sizeOfInterest = 1200

stateTypes = Vector(EInt, EInt, EPair(EInt,EInt), EPair(EInt,EInt), EVect(EPair(EInt,EInt)), EVect(EPair(EInt,EInt)))
argConstRatio = 0.235716398984131
constMap: Map(EInt -> ExprGen(EInt,patsyn.GPEnvGenerator$$Lambda$47/1340328248@3234e239), EPair(EInt,EInt) -> ExprGen(EPair(EInt,EInt),patsyn.GPEnvGenerator$$Lambda$47/1340328248@3d921e20), EVect(EPair(EInt,EInt)) -> ExprGen(EVect(EPair(EInt,EInt)),patsyn.GPEnvGenerator$$Lambda$47/1340328248@36b4cef0))
functions: Vector(inc: (EInt) => EInt, dec: (EInt) => EInt, neg: (EInt) => EInt, plus: (EInt,EInt) => EInt, minus: (EInt,EInt) => EInt, times: (EInt,EInt) => EInt, divide: (EInt,EInt) => EInt, modular: (EInt,EInt) => EInt, append[1], prepend[1], access[1], concat[1], length[1], emptyGraph[1], addNode[1], addEdge[1], growEdge[1], growSelfLoop[1], bridgeEdge[1], deleteEdge[1], mergeGraph[1], updateEdge[1], pair1[2], pair2[2], mkPair[2], shiftBL: (EInt) => EInt, bitAnd: (EInt,EInt) => EInt, bitOr: (EInt,EInt) => EInt, bitXor: (EInt,EInt) => EInt, bitShift: (EInt,EInt) => EInt)
     

[Runner config]

ioId: 103
randomSeed: 103
previewPatternLen: 7
       
[GP config]

populationSize: 962
tournamentSize: 7
evaluationTrials：1
totalSizeTolerance：178
singleSizeTolerance：29
crossoverP: 0.5
mutateP: 0.691824680976344
copyP: 0.0769794087266299
     
[execution config]

sizeOfInterest: 1200
threadNum：1
timeLimitInMillis：120000
maxNonIncreaseGen：Some(150)
     
       
[End of Configuration]

[Function map]
EInt -> {inc: (EInt) => EInt, dec: (EInt) => EInt, neg: (EInt) => EInt, plus: (EInt,EInt) => EInt, minus: (EInt,EInt) => EInt, times: (EInt,EInt) => EInt, divide: (EInt,EInt) => EInt, modular: (EInt,EInt) => EInt, length: (EVect(EPair(EInt,EInt))) => EInt, pair1: (EPair(EInt,EInt)) => EInt, pair2: (EPair(EInt,EInt)) => EInt, shiftBL: (EInt) => EInt, bitAnd: (EInt,EInt) => EInt, bitOr: (EInt,EInt) => EInt, bitXor: (EInt,EInt) => EInt, bitShift: (EInt,EInt) => EInt}
EPair(EInt,EInt) -> {access: (EVect(EPair(EInt,EInt)),EInt,EPair(EInt,EInt)) => EPair(EInt,EInt), mkPair: (EInt,EInt) => EPair(EInt,EInt)}
EVect(EPair(EInt,EInt)) -> {append: (EVect(EPair(EInt,EInt)),EPair(EInt,EInt)) => EVect(EPair(EInt,EInt)), prepend: (EPair(EInt,EInt),EVect(EPair(EInt,EInt))) => EVect(EPair(EInt,EInt)), concat: (EVect(EPair(EInt,EInt)),EVect(EPair(EInt,EInt))) => EVect(EPair(EInt,EInt))}
[End of Function map]

Last fitness increase: 1 generations ago.
------------
[0.107s]Generation 1
Best Result: (fitness: 10692.4, performance: 11448.0), Created by Init
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: #1; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), modular(226, #0)), #1); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (485,399) ; iter: mkPair(length([]), 308); seedExpr: mkPair(inc(484), 399) }
[S3: EPair(EInt,EInt)]{ seed: (341,11) ; iter: (304,420); seedExpr: access([], 418, (341,11)) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(concat(#4, []), mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [(-107,528),(88,125)] ; iter: #5; seedExpr: prepend(mkPair(minus(377, 484), bitShift(132, 418)), concat(concat([], []), append([], (88,125)))) }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(1088,1088)]), Vector([(387,387),(1088,1088),(1789,1789)]), Vector([(387,387),(1088,1088),(1789,1789),(3514,3514)]), Vector([(387,387),(1088,1088),(1789,1789),(3514,3514),(5787,5787)]), Vector([(387,387),(1088,1088),(1789,1789),(3514,3514),(5787,5787),(9592,9592)]), ...
Diversity: 962
Average Size: 50.11642411642411
Average Fitness: 15.963368371506869
Fitness Variation: 353.78770275186366
Distribution: [] -> 0.162, #1 -> 0.042, append -> 0.035, access -> 0.035, mkPair -> 0.034, concat -> 0.034, prepend -> 0.033, #0 -> 0.031, #5 -> 0.028, #4 -> 0.022
Last fitness increase: 2 generations ago.
------------
[4.814s]Generation 2
Best Result: (fitness: 10692.4, performance: 11448.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: #1; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), modular(226, #0)), #1); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (485,399) ; iter: mkPair(length([]), 308); seedExpr: mkPair(inc(484), 399) }
[S3: EPair(EInt,EInt)]{ seed: (341,11) ; iter: (304,420); seedExpr: access([], 418, (341,11)) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(concat(#4, []), mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [(-107,528),(88,125)] ; iter: #5; seedExpr: prepend(mkPair(minus(377, 484), bitShift(132, 418)), concat(concat([], []), append([], (88,125)))) }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(1088,1088)]), Vector([(387,387),(1088,1088),(1789,1789)]), Vector([(387,387),(1088,1088),(1789,1789),(3514,3514)]), Vector([(387,387),(1088,1088),(1789,1789),(3514,3514),(5787,5787)]), Vector([(387,387),(1088,1088),(1789,1789),(3514,3514),(5787,5787),(9592,9592)]), ...
Diversity: 934
Average Size: 62.7972972972973
Average Fitness: 105.78942480193871
Fitness Variation: 859.8725729500227
Distribution: [] -> 0.156, access -> 0.043, #1 -> 0.040, append -> 0.039, prepend -> 0.037, concat -> 0.036, mkPair -> 0.033, #0 -> 0.033, #5 -> 0.032, #4 -> 0.024
Last fitness increase: 3 generations ago.
------------
[14.386s]Generation 3
Best Result: (fitness: 10692.4, performance: 11448.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: #1; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), modular(226, #0)), #1); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (485,399) ; iter: mkPair(length([]), 308); seedExpr: mkPair(inc(484), 399) }
[S3: EPair(EInt,EInt)]{ seed: (341,11) ; iter: (304,420); seedExpr: access([], 418, (341,11)) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(concat(#4, []), mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [(-107,2112),(88,125)] ; iter: #5; seedExpr: prepend(mkPair(minus(377, 484), bitShift(132, 484)), concat(concat([], []), append([], (88,125)))) }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(1088,1088)]), Vector([(387,387),(1088,1088),(1789,1789)]), Vector([(387,387),(1088,1088),(1789,1789),(3514,3514)]), Vector([(387,387),(1088,1088),(1789,1789),(3514,3514),(5787,5787)]), Vector([(387,387),(1088,1088),(1789,1789),(3514,3514),(5787,5787),(9592,9592)]), ...
Diversity: 907
Average Size: 57.75571725571726
Average Fitness: 396.71505920846204
Fitness Variation: 1680.8984466798859
Distribution: [] -> 0.152, concat -> 0.043, append -> 0.041, #5 -> 0.041, #1 -> 0.040, prepend -> 0.038, access -> 0.034, mkPair -> 0.034, #0 -> 0.032, #4 -> 0.029
Last fitness increase: 0 generations ago.
------------
[28.719s]Generation 4
Best Result: (fitness: 13080.7, performance: 14058.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: 317; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), modular(#0, #0)), dec(#1)); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (485,399) ; iter: mkPair(length([]), 308); seedExpr: mkPair(inc(484), 399) }
[S3: EPair(EInt,EInt)]{ seed: (341,11) ; iter: (304,420); seedExpr: access([], 418, (341,11)) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(concat(#4, []), mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [(-107,528),(88,125)] ; iter: #5; seedExpr: prepend(mkPair(minus(377, 484), bitShift(132, 418)), concat(concat([], []), append([], (88,125)))) }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(861,861)]), Vector([(387,387),(861,861),(1371,1371)]), Vector([(387,387),(861,861),(1371,1371),(1881,1881)]), Vector([(387,387),(861,861),(1371,1371),(1881,1881),(2391,2391)]), Vector([(387,387),(861,861),(1371,1371),(1881,1881),(2391,2391),(2901,2901)]), ...
Diversity: 913
Average Size: 53.92619542619543
Average Fitness: 1716.0388016039499
Fitness Variation: 3341.070368283261
Distribution: [] -> 0.162, concat -> 0.051, append -> 0.046, #1 -> 0.045, #0 -> 0.039, mkPair -> 0.038, prepend -> 0.036, #5 -> 0.036, #4 -> 0.031, access -> 0.026
Last fitness increase: 0 generations ago.
------------
[44.895s]Generation 5
Best Result: (fitness: 17846.5, performance: 19229.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: bitShift(132, 418); seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), modular(226, #0)), #1); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (485,399) ; iter: mkPair(length([]), 308); seedExpr: mkPair(inc(484), 399) }
[S3: EPair(EInt,EInt)]{ seed: (341,11) ; iter: (304,420); seedExpr: access([], 418, (341,11)) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [(422,375),(346,409)] ; iter: concat([], append(concat(#4, []), mkPair(#1, #1))); seedExpr: prepend((422,375), prepend(mkPair(346, 409), [])) }
[S5: EVect(EPair(EInt,EInt))]{ seed: [(-107,528),(88,125)] ; iter: #5; seedExpr: prepend(mkPair(minus(377, 484), bitShift(132, 418)), concat(concat([], []), append([], (88,125)))) }
Best Individual Pattern: Vector([(422,375),(346,409)]), Vector([(422,375),(346,409),(387,387)]), Vector([(422,375),(346,409),(387,387),(1088,1088)]), Vector([(422,375),(346,409),(387,387),(1088,1088),(2301,2301)]), Vector([(422,375),(346,409),(387,387),(1088,1088),(2301,2301),(3514,3514)]), Vector([(422,375),(346,409),(387,387),(1088,1088),(2301,2301),(3514,3514),(4727,4727)]), Vector([(422,375),(346,409),(387,387),(1088,1088),(2301,2301),(3514,3514),(4727,4727),(5940,5940)]), ...
Diversity: 923
Average Size: 53.66839916839917
Average Fitness: 5646.267842644138
Fitness Variation: 4461.906620744226
Distribution: [] -> 0.169, #1 -> 0.060, concat -> 0.056, mkPair -> 0.054, #0 -> 0.053, append -> 0.039, #4 -> 0.031, 484 -> 0.030, 418 -> 0.025, prepend -> 0.020
Last fitness increase: 0 generations ago.
------------
[61.992s]Generation 6
Best Result: (fitness: 26171.7, performance: 26608.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 0 ; iter: #1; seedExpr: divide(140, inc(bitShift(40, 167))) }
[S1: EInt]{ seed: 387 ; iter: plus(plus(308, modular(226, #0)), #1); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (485,399) ; iter: mkPair(length([]), 308); seedExpr: mkPair(inc(484), 399) }
[S3: EPair(EInt,EInt)]{ seed: (341,11) ; iter: (304,420); seedExpr: access([], 418, (341,11)) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [(422,375),(346,409)] ; iter: concat([], append(concat(#4, []), mkPair(#1, #1))); seedExpr: prepend((422,375), prepend(mkPair(346, 409), [])) }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([(422,375),(346,409)]), Vector([(422,375),(346,409),(387,387)]), Vector([(422,375),(346,409),(387,387),(696,696)]), Vector([(422,375),(346,409),(387,387),(696,696),(1230,1230)]), Vector([(422,375),(346,409),(387,387),(696,696),(1230,1230),(1764,1764)]), Vector([(422,375),(346,409),(387,387),(696,696),(1230,1230),(1764,1764),(2298,2298)]), Vector([(422,375),(346,409),(387,387),(696,696),(1230,1230),(1764,1764),(2298,2298),(2832,2832)]), ...
Diversity: 913
Average Size: 54.03742203742204
Average Fitness: 8597.817835772808
Fitness Variation: 4248.30698150375
Distribution: [] -> 0.168, #1 -> 0.076, mkPair -> 0.058, concat -> 0.058, #0 -> 0.056, 484 -> 0.040, #4 -> 0.035, 418 -> 0.034, append -> 0.031, 475 -> 0.025
Last fitness increase: 0 generations ago.
------------
[78.529s]Generation 7
Best Result: (fitness: 26700.2, performance: 27574.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: 317; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), modular(#0, bitOr(#1, 377))), dec(#1)); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (485,399) ; iter: mkPair(length([]), 308); seedExpr: mkPair(inc(484), 399) }
[S3: EPair(EInt,EInt)]{ seed: (340,335) ; iter: (304,420); seedExpr: access([], 418, access([], 86, (340,335))) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(concat(#4, []), mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(1192,1192)]), Vector([(387,387),(1192,1192),(2019,2019)]), Vector([(387,387),(1192,1192),(2019,2019),(2846,2846)]), Vector([(387,387),(1192,1192),(2019,2019),(2846,2846),(3673,3673)]), Vector([(387,387),(1192,1192),(2019,2019),(2846,2846),(3673,3673),(4500,4500)]), ...
Diversity: 917
Average Size: 50.15488565488565
Average Fitness: 9299.418367260741
Fitness Variation: 5527.643789708749
Distribution: [] -> 0.160, #1 -> 0.085, #0 -> 0.066, mkPair -> 0.058, concat -> 0.053, #4 -> 0.038, 484 -> 0.037, 418 -> 0.030, 475 -> 0.028, append -> 0.028
Last fitness increase: 0 generations ago.
------------
[95.515s]Generation 8
Best Result: (fitness: 27462.0, performance: 30430.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: #1; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(409, 475), modular(#0, plus(pair2(mkPair(458, #0)), 352))), #1); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (485,399) ; iter: mkPair(times(11, 229), 308); seedExpr: mkPair(inc(484), 399) }
[S3: EPair(EInt,EInt)]{ seed: (341,11) ; iter: (304,420); seedExpr: access([], 399, (341,11)) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(concat(#4, []), mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [(-107,528)] ; iter: #5; seedExpr: prepend(mkPair(minus(377, 484), bitShift(132, 418)), concat(concat([], []), concat([], []))) }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(1193,1193)]), Vector([(387,387),(1193,1193),(2055,2055)]), Vector([(387,387),(1193,1193),(2055,2055),(3723,3723)]), Vector([(387,387),(1193,1193),(2055,2055),(3723,3723),(6253,6253)]), Vector([(387,387),(1193,1193),(2055,2055),(3723,3723),(6253,6253),(10451,10451)]), ...
Diversity: 912
Average Size: 54.62577962577963
Average Fitness: 11870.23706142832
Fitness Variation: 6954.16798367324
Distribution: [] -> 0.162, #1 -> 0.077, #0 -> 0.060, mkPair -> 0.056, concat -> 0.055, 484 -> 0.039, #4 -> 0.034, 418 -> 0.031, append -> 0.029, 475 -> 0.025
Last fitness increase: 0 generations ago.
------------
[112.702s]Generation 9
Best Result: (fitness: 29010.0, performance: 30430.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: #1; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(409, 475), modular(#0, plus(pair2(mkPair(458, #0)), 352))), #1); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (485,399) ; iter: mkPair(times(11, 229), 308); seedExpr: mkPair(inc(484), 399) }
[S3: EPair(EInt,EInt)]{ seed: (341,11) ; iter: (304,420); seedExpr: access([], 399, (341,11)) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(concat(#4, []), mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(1193,1193)]), Vector([(387,387),(1193,1193),(2055,2055)]), Vector([(387,387),(1193,1193),(2055,2055),(3723,3723)]), Vector([(387,387),(1193,1193),(2055,2055),(3723,3723),(6253,6253)]), Vector([(387,387),(1193,1193),(2055,2055),(3723,3723),(6253,6253),(10451,10451)]), ...
Diversity: 919
Average Size: 58.016632016632016
Average Fitness: 15473.442772964678
Fitness Variation: 8894.0875008249
Distribution: [] -> 0.162, #1 -> 0.076, mkPair -> 0.055, concat -> 0.053, #0 -> 0.052, 484 -> 0.037, #4 -> 0.031, 418 -> 0.031, append -> 0.029, 377 -> 0.027
Last fitness increase: 0 generations ago.
------------
[129.774s]Generation 10
Best Result: (fitness: 36722.6, performance: 37976.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: 317; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), modular(259, #1)), dec(#1)); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (485,399) ; iter: mkPair(length([]), 308); seedExpr: mkPair(inc(484), 399) }
[S3: EPair(EInt,EInt)]{ seed: (149,307) ; iter: (304,420); seedExpr: access(prepend(mkPair(bitXor(24, 141), 307), []), 418, (341,11)) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(concat(#4, []), mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [(88,125)] ; iter: #5; seedExpr: concat(concat([], []), append([], (88,125))) }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(1120,1120)]), Vector([(387,387),(1120,1120),(1889,1889)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658),(3427,3427)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658),(3427,3427),(4196,4196)]), ...
Diversity: 918
Average Size: 55.272349272349274
Average Fitness: 18309.60698251169
Fitness Variation: 10388.58589290436
Distribution: [] -> 0.163, #1 -> 0.093, concat -> 0.054, mkPair -> 0.052, #0 -> 0.050, #4 -> 0.035, 484 -> 0.035, bitOr -> 0.031, 377 -> 0.031, append -> 0.027
Last fitness increase: 0 generations ago.
------------
[146.756s]Generation 11
Best Result: (fitness: 36741.9, performance: 37976.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: 317; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), modular(259, #1)), dec(#1)); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (278,399) ; iter: mkPair(length([]), 308); seedExpr: mkPair(278, 399) }
[S3: EPair(EInt,EInt)]{ seed: (149,307) ; iter: (304,420); seedExpr: access(prepend(mkPair(bitXor(24, 141), 307), []), 418, (341,11)) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(concat(#4, []), mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [(88,125)] ; iter: #5; seedExpr: concat(concat([], []), append([], (88,125))) }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(1120,1120)]), Vector([(387,387),(1120,1120),(1889,1889)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658),(3427,3427)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658),(3427,3427),(4196,4196)]), ...
Diversity: 911
Average Size: 50.56964656964657
Average Fitness: 18830.241677863985
Fitness Variation: 11231.30035752266
Distribution: [] -> 0.158, #1 -> 0.101, #0 -> 0.060, mkPair -> 0.055, concat -> 0.053, #4 -> 0.039, bitOr -> 0.034, plus -> 0.028, 484 -> 0.027, 475 -> 0.026
Last fitness increase: 0 generations ago.
------------
[164.119s]Generation 12
Best Result: (fitness: 37191.6, performance: 37976.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: 317; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), modular(259, #1)), dec(#1)); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (278,399) ; iter: mkPair(length([]), 308); seedExpr: mkPair(278, 399) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (304,420); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(concat(#4, []), mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [(88,125)] ; iter: #5; seedExpr: concat(concat([], []), append([], (88,125))) }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(1120,1120)]), Vector([(387,387),(1120,1120),(1889,1889)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658),(3427,3427)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658),(3427,3427),(4196,4196)]), ...
Diversity: 908
Average Size: 49.79209979209979
Average Fitness: 19359.05196921117
Fitness Variation: 11753.428082803226
Distribution: [] -> 0.143, #1 -> 0.097, #0 -> 0.070, mkPair -> 0.063, concat -> 0.050, #4 -> 0.038, plus -> 0.036, bitOr -> 0.033, 475 -> 0.030, 484 -> 0.024
Last fitness increase: 1 generations ago.
------------
[180.584s]Generation 13
Best Result: (fitness: 37191.6, performance: 37976.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: 317; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), modular(259, #1)), dec(#1)); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (278,399) ; iter: mkPair(length([]), 370); seedExpr: mkPair(278, 399) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (304,420); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(concat(#4, []), mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [(88,125)] ; iter: #5; seedExpr: concat(concat([], []), append([], (88,125))) }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(1120,1120)]), Vector([(387,387),(1120,1120),(1889,1889)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658),(3427,3427)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658),(3427,3427),(4196,4196)]), ...
Diversity: 897
Average Size: 50.56964656964657
Average Fitness: 21077.894197187838
Fitness Variation: 13135.867336324307
Distribution: [] -> 0.130, #1 -> 0.091, mkPair -> 0.071, #0 -> 0.068, concat -> 0.046, plus -> 0.040, #4 -> 0.036, 475 -> 0.028, 458 -> 0.026, bitOr -> 0.026
Last fitness increase: 0 generations ago.
------------
[197.298s]Generation 14
Best Result: (fitness: 37276.6, performance: 37976.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: 317; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), modular(259, #1)), dec(#1)); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (485,399) ; iter: mkPair(length([]), 308); seedExpr: mkPair(inc(484), 399) }
[S3: EPair(EInt,EInt)]{ seed: (147,291) ; iter: (304,420); seedExpr: access([], 475, (147,291)) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(concat(#4, []), mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(1120,1120)]), Vector([(387,387),(1120,1120),(1889,1889)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658),(3427,3427)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658),(3427,3427),(4196,4196)]), ...
Diversity: 916
Average Size: 51.79313929313929
Average Fitness: 23731.144867760828
Fitness Variation: 15161.627672695848
Distribution: [] -> 0.152, #1 -> 0.102, mkPair -> 0.060, concat -> 0.047, #0 -> 0.046, #4 -> 0.036, append -> 0.032, 475 -> 0.030, plus -> 0.029, bitOr -> 0.028
Last fitness increase: 0 generations ago.
------------
[213.695s]Generation 15
Best Result: (fitness: 37302.3, performance: 37976.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: 317; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), modular(259, #1)), dec(#1)); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (443,484) ; iter: mkPair(length([]), 308); seedExpr: (443,484) }
[S3: EPair(EInt,EInt)]{ seed: (341,11) ; iter: (304,420); seedExpr: access([], 418, (341,11)) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(concat(#4, []), mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(1120,1120)]), Vector([(387,387),(1120,1120),(1889,1889)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658),(3427,3427)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658),(3427,3427),(4196,4196)]), ...
Diversity: 904
Average Size: 49.7027027027027
Average Fitness: 25157.799424798497
Fitness Variation: 15833.207307212368
Distribution: [] -> 0.174, #1 -> 0.116, mkPair -> 0.057, concat -> 0.054, #4 -> 0.039, append -> 0.038, #0 -> 0.035, 475 -> 0.031, 259 -> 0.030, 141 -> 0.027
Last fitness increase: 0 generations ago.
------------
[229.898s]Generation 16
Best Result: (fitness: 37407.8, performance: 37976.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: 317; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), 259), dec(#1)); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (485,399) ; iter: (460,368); seedExpr: mkPair(inc(484), 399) }
[S3: EPair(EInt,EInt)]{ seed: (0,308) ; iter: (304,420); seedExpr: mkPair(length([]), 308) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(concat(#4, []), mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [(88,125)] ; iter: #5; seedExpr: concat(concat([], []), append([], (88,125))) }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(1120,1120)]), Vector([(387,387),(1120,1120),(1889,1889)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658),(3427,3427)]), Vector([(387,387),(1120,1120),(1889,1889),(2658,2658),(3427,3427),(4196,4196)]), ...
Diversity: 891
Average Size: 44.91372141372141
Average Fitness: 24811.544396363977
Fitness Variation: 16165.499240803023
Distribution: [] -> 0.182, #1 -> 0.135, concat -> 0.059, mkPair -> 0.052, #4 -> 0.045, append -> 0.042, #0 -> 0.039, 259 -> 0.035, 475 -> 0.035, plus -> 0.028
Last fitness increase: 0 generations ago.
------------
[246.209s]Generation 17
Best Result: (fitness: 37497.7, performance: 38200.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: 317; seedExpr: 331 }
[S1: EInt]{ seed: 485 ; iter: plus(plus(bitOr(372, 475), modular(259, #1)), dec(#1)); seedExpr: inc(484) }
[S2: EPair(EInt,EInt)]{ seed: (485,399) ; iter: (88,125); seedExpr: mkPair(inc(484), 399) }
[S3: EPair(EInt,EInt)]{ seed: (368,430) ; iter: (304,420); seedExpr: (368,430) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(concat(#4, []), mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: concat(concat([], []), []) }
Best Individual Pattern: Vector([]), Vector([(485,485)]), Vector([(485,485),(1254,1254)]), Vector([(485,485),(1254,1254),(2023,2023)]), Vector([(485,485),(1254,1254),(2023,2023),(2792,2792)]), Vector([(485,485),(1254,1254),(2023,2023),(2792,2792),(3561,3561)]), Vector([(485,485),(1254,1254),(2023,2023),(2792,2792),(3561,3561),(4330,4330)]), ...
Diversity: 901
Average Size: 41.194386694386694
Average Fitness: 23259.11269880655
Fitness Variation: 16801.56046178492
Distribution: [] -> 0.177, #1 -> 0.149, concat -> 0.060, #4 -> 0.051, mkPair -> 0.050, #0 -> 0.040, append -> 0.039, 259 -> 0.039, 475 -> 0.038, plus -> 0.031
Last fitness increase: 0 generations ago.
------------
[261.974s]Generation 18
Best Result: (fitness: 63299.3, performance: 64038.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: 317; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), 142), dec(#1)); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (278,387) ; iter: mkPair(length([]), 308); seedExpr: mkPair(278, 387) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (367,83); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(concat(#4, []), mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(1003,1003)]), Vector([(387,387),(1003,1003),(1655,1655)]), Vector([(387,387),(1003,1003),(1655,1655),(2307,2307)]), Vector([(387,387),(1003,1003),(1655,1655),(2307,2307),(2959,2959)]), Vector([(387,387),(1003,1003),(1655,1655),(2307,2307),(2959,2959),(3611,3611)]), ...
Diversity: 889
Average Size: 39.356548856548855
Average Fitness: 23730.040185856644
Fitness Variation: 16862.52761031542
Distribution: [] -> 0.168, #1 -> 0.158, concat -> 0.057, #4 -> 0.053, mkPair -> 0.051, 259 -> 0.042, 475 -> 0.042, #0 -> 0.040, append -> 0.035, plus -> 0.033
Last fitness increase: 0 generations ago.
------------
[277.633s]Generation 19
Best Result: (fitness: 63569.4, performance: 64038.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: 317; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), 142), dec(#1)); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (278,387) ; iter: mkPair(length([]), 308); seedExpr: mkPair(278, 387) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (367,83); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(#4, mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(1003,1003)]), Vector([(387,387),(1003,1003),(1655,1655)]), Vector([(387,387),(1003,1003),(1655,1655),(2307,2307)]), Vector([(387,387),(1003,1003),(1655,1655),(2307,2307),(2959,2959)]), Vector([(387,387),(1003,1003),(1655,1655),(2307,2307),(2959,2959),(3611,3611)]), ...
Diversity: 896
Average Size: 38.36382536382536
Average Fitness: 23395.263072577138
Fitness Variation: 16924.247150233838
Distribution: #1 -> 0.163, [] -> 0.160, concat -> 0.053, #4 -> 0.053, mkPair -> 0.051, 259 -> 0.043, 475 -> 0.043, #0 -> 0.040, plus -> 0.034, append -> 0.033
Last fitness increase: 0 generations ago.
------------
[293.645s]Generation 20
Best Result: (fitness: 63585.3, performance: 64038.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: 317; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), 142), dec(#1)); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (278,387) ; iter: mkPair(340, 308); seedExpr: mkPair(278, 387) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (367,83); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(#4, mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(1003,1003)]), Vector([(387,387),(1003,1003),(1655,1655)]), Vector([(387,387),(1003,1003),(1655,1655),(2307,2307)]), Vector([(387,387),(1003,1003),(1655,1655),(2307,2307),(2959,2959)]), Vector([(387,387),(1003,1003),(1655,1655),(2307,2307),(2959,2959),(3611,3611)]), ...
Diversity: 893
Average Size: 38.146569646569645
Average Fitness: 24029.094146768373
Fitness Variation: 17365.63562125481
Distribution: #1 -> 0.160, [] -> 0.160, mkPair -> 0.051, #4 -> 0.051, concat -> 0.050, 475 -> 0.043, 259 -> 0.041, #0 -> 0.041, append -> 0.035, plus -> 0.034
Last fitness increase: 0 generations ago.
------------
[309.064s]Generation 21
Best Result: (fitness: 63689.7, performance: 64038.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: 317; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), 142), dec(#1)); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (278,387) ; iter: mkPair(length([]), 308); seedExpr: mkPair(278, 387) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (367,83); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(1003,1003)]), Vector([(387,387),(1003,1003),(1655,1655)]), Vector([(387,387),(1003,1003),(1655,1655),(2307,2307)]), Vector([(387,387),(1003,1003),(1655,1655),(2307,2307),(2959,2959)]), Vector([(387,387),(1003,1003),(1655,1655),(2307,2307),(2959,2959),(3611,3611)]), ...
Diversity: 882
Average Size: 37.5956340956341
Average Fitness: 25565.973517178114
Fitness Variation: 18713.472542936684
Distribution: [] -> 0.159, #1 -> 0.155, mkPair -> 0.053, #4 -> 0.051, concat -> 0.050, 475 -> 0.044, #0 -> 0.043, 259 -> 0.039, plus -> 0.035, bitOr -> 0.035
Last fitness increase: 0 generations ago.
------------
[324.707s]Generation 22
Best Result: (fitness: 63704.7, performance: 64038.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: 317; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), 142), dec(#1)); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (278,387) ; iter: mkPair(244, 225); seedExpr: mkPair(278, 387) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (367,83); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(1003,1003)]), Vector([(387,387),(1003,1003),(1655,1655)]), Vector([(387,387),(1003,1003),(1655,1655),(2307,2307)]), Vector([(387,387),(1003,1003),(1655,1655),(2307,2307),(2959,2959)]), Vector([(387,387),(1003,1003),(1655,1655),(2307,2307),(2959,2959),(3611,3611)]), ...
Diversity: 880
Average Size: 37.09251559251559
Average Fitness: 28197.401586193602
Fitness Variation: 22429.705644057452
Distribution: [] -> 0.159, #1 -> 0.139, mkPair -> 0.056, #4 -> 0.053, concat -> 0.049, #0 -> 0.047, 475 -> 0.046, plus -> 0.037, bitOr -> 0.036, append -> 0.034
Last fitness increase: 0 generations ago.
------------
[340.992s]Generation 23
Best Result: (fitness: 63716.6, performance: 64038.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 331 ; iter: 317; seedExpr: 331 }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), 142), dec(#1)); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (278,387) ; iter: (195,74); seedExpr: mkPair(278, 387) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (367,83); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(1003,1003)]), Vector([(387,387),(1003,1003),(1655,1655)]), Vector([(387,387),(1003,1003),(1655,1655),(2307,2307)]), Vector([(387,387),(1003,1003),(1655,1655),(2307,2307),(2959,2959)]), Vector([(387,387),(1003,1003),(1655,1655),(2307,2307),(2959,2959),(3611,3611)]), ...
Diversity: 892
Average Size: 36.23076923076923
Average Fitness: 34500.86463921724
Fitness Variation: 27657.71585174592
Distribution: [] -> 0.141, #1 -> 0.133, mkPair -> 0.061, #4 -> 0.057, #0 -> 0.050, 475 -> 0.046, concat -> 0.041, plus -> 0.037, bitOr -> 0.036, append -> 0.032
Last fitness increase: 0 generations ago.
------------
[357.417s]Generation 24
Best Result: (fitness: 63805.3, performance: 64310.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 316 ; iter: plus(plus(bitOr(#0, 475), 142), dec(#1)); seedExpr: 316 }
[S2: EPair(EInt,EInt)]{ seed: (278,387) ; iter: mkPair(length([]), 308); seedExpr: mkPair(278, 387) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: mkPair(length([]), 415); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(#4, mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(316,316)]), Vector([(316,316),(968,968)]), Vector([(316,316),(968,968),(1620,1620)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272),(2924,2924)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272),(2924,2924),(3576,3576)]), ...
Diversity: 899
Average Size: 33.87837837837838
Average Fitness: 37753.95961597614
Fitness Variation: 29548.013496907406
Distribution: #1 -> 0.143, [] -> 0.119, mkPair -> 0.065, #4 -> 0.060, #0 -> 0.058, 475 -> 0.053, plus -> 0.042, bitOr -> 0.041, 142 -> 0.040, 387 -> 0.034
Last fitness increase: 1 generations ago.
------------
[373.619s]Generation 25
Best Result: (fitness: 63805.3, performance: 64310.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 316 ; iter: plus(plus(bitOr(#0, 475), 142), dec(#1)); seedExpr: 316 }
[S2: EPair(EInt,EInt)]{ seed: (278,387) ; iter: mkPair(length([]), 308); seedExpr: mkPair(278, 387) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: mkPair(length([]), 415); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: concat([], append(#4, mkPair(#1, #1))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(316,316)]), Vector([(316,316),(968,968)]), Vector([(316,316),(968,968),(1620,1620)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272),(2924,2924)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272),(2924,2924),(3576,3576)]), ...
Diversity: 884
Average Size: 31.766112266112266
Average Fitness: 36949.730221916965
Fitness Variation: 29856.057993712944
Distribution: #1 -> 0.157, [] -> 0.101, mkPair -> 0.070, #0 -> 0.062, #4 -> 0.060, 475 -> 0.057, plus -> 0.045, 142 -> 0.044, bitOr -> 0.044, 387 -> 0.037
Last fitness increase: 0 generations ago.
------------
[389.937s]Generation 26
Best Result: (fitness: 63920.5, performance: 64260.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 6400 ; iter: 317; seedExpr: shiftBL(25) }
[S1: EInt]{ seed: 387 ; iter: plus(plus(bitOr(#0, 475), 142), dec(#1)); seedExpr: 387 }
[S2: EPair(EInt,EInt)]{ seed: (278,387) ; iter: mkPair(#1, 308); seedExpr: mkPair(278, 387) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (367,83); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(387,387)]), Vector([(387,387),(7147,7147)]), Vector([(387,387),(7147,7147),(7799,7799)]), Vector([(387,387),(7147,7147),(7799,7799),(8451,8451)]), Vector([(387,387),(7147,7147),(7799,7799),(8451,8451),(9103,9103)]), Vector([(387,387),(7147,7147),(7799,7799),(8451,8451),(9103,9103),(9755,9755)]), ...
Diversity: 900
Average Size: 30.87941787941788
Average Fitness: 37450.131585362884
Fitness Variation: 29692.7437555594
Distribution: #1 -> 0.163, [] -> 0.087, mkPair -> 0.070, #0 -> 0.064, 475 -> 0.060, #4 -> 0.057, plus -> 0.049, 142 -> 0.047, bitOr -> 0.046, 387 -> 0.036
Last fitness increase: 0 generations ago.
------------
[406.292s]Generation 27
Best Result: (fitness: 63929.2, performance: 64310.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 316 ; iter: plus(plus(bitOr(#0, 475), 142), dec(#1)); seedExpr: 316 }
[S2: EPair(EInt,EInt)]{ seed: (278,387) ; iter: mkPair(length([]), 308); seedExpr: mkPair(278, 387) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: mkPair(length([]), 475); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(316,316)]), Vector([(316,316),(968,968)]), Vector([(316,316),(968,968),(1620,1620)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272),(2924,2924)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272),(2924,2924),(3576,3576)]), ...
Diversity: 909
Average Size: 30.659043659043657
Average Fitness: 37392.638255890175
Fitness Variation: 29784.946819983103
Distribution: #1 -> 0.163, [] -> 0.082, mkPair -> 0.071, #0 -> 0.065, 475 -> 0.061, #4 -> 0.056, plus -> 0.050, 142 -> 0.048, bitOr -> 0.047, dec -> 0.036
Last fitness increase: 1 generations ago.
------------
[423.102s]Generation 28
Best Result: (fitness: 63929.2, performance: 64310.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 316 ; iter: plus(plus(bitOr(#0, 475), 142), dec(#1)); seedExpr: 316 }
[S2: EPair(EInt,EInt)]{ seed: (278,387) ; iter: mkPair(length([]), 308); seedExpr: mkPair(278, 387) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: mkPair(length([]), #1); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(316,316)]), Vector([(316,316),(968,968)]), Vector([(316,316),(968,968),(1620,1620)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272),(2924,2924)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272),(2924,2924),(3576,3576)]), ...
Diversity: 899
Average Size: 31.53846153846154
Average Fitness: 37930.38104023473
Fitness Variation: 29814.196330139388
Distribution: #1 -> 0.162, [] -> 0.088, mkPair -> 0.071, #0 -> 0.064, 475 -> 0.060, #4 -> 0.056, plus -> 0.047, bitOr -> 0.046, 142 -> 0.046, dec -> 0.034
Last fitness increase: 0 generations ago.
------------
[439.589s]Generation 29
Best Result: (fitness: 63960.2, performance: 64310.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 316 ; iter: plus(plus(bitOr(#0, 475), 142), dec(#1)); seedExpr: 316 }
[S2: EPair(EInt,EInt)]{ seed: (278,387) ; iter: mkPair(length([]), 308); seedExpr: mkPair(278, 387) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (195,74); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(316,316)]), Vector([(316,316),(968,968)]), Vector([(316,316),(968,968),(1620,1620)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272),(2924,2924)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272),(2924,2924),(3576,3576)]), ...
Diversity: 892
Average Size: 32.32432432432432
Average Fitness: 38531.66346005446
Fitness Variation: 29605.4871538855
Distribution: #1 -> 0.162, [] -> 0.094, mkPair -> 0.074, #0 -> 0.063, 475 -> 0.057, #4 -> 0.057, plus -> 0.046, 142 -> 0.045, bitOr -> 0.044, dec -> 0.033
Last fitness increase: 0 generations ago.
------------
[456.489s]Generation 30
Best Result: (fitness: 63973.0, performance: 64310.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 316 ; iter: plus(plus(bitOr(#0, 475), 142), dec(#1)); seedExpr: 316 }
[S2: EPair(EInt,EInt)]{ seed: (156,101) ; iter: mkPair(length([]), 308); seedExpr: (156,101) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (308,8); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(316,316)]), Vector([(316,316),(968,968)]), Vector([(316,316),(968,968),(1620,1620)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272),(2924,2924)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272),(2924,2924),(3576,3576)]), ...
Diversity: 908
Average Size: 32.016632016632016
Average Fitness: 38338.960085629435
Fitness Variation: 29893.518788247526
Distribution: #1 -> 0.165, [] -> 0.088, mkPair -> 0.074, #0 -> 0.064, 475 -> 0.059, #4 -> 0.056, plus -> 0.046, 142 -> 0.046, bitOr -> 0.045, dec -> 0.033
Last fitness increase: 0 generations ago.
------------
[472.911s]Generation 31
Best Result: (fitness: 63975.3, performance: 64310.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 316 ; iter: plus(plus(bitOr(#0, 475), 142), dec(#1)); seedExpr: 316 }
[S2: EPair(EInt,EInt)]{ seed: (278,387) ; iter: mkPair(475, 308); seedExpr: mkPair(278, 387) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (144,46); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(316,316)]), Vector([(316,316),(968,968)]), Vector([(316,316),(968,968),(1620,1620)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272),(2924,2924)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272),(2924,2924),(3576,3576)]), ...
Diversity: 889
Average Size: 31.171517671517673
Average Fitness: 38637.42817427811
Fitness Variation: 29903.183265634427
Distribution: #1 -> 0.168, [] -> 0.080, mkPair -> 0.072, #0 -> 0.065, 475 -> 0.065, #4 -> 0.057, plus -> 0.048, 142 -> 0.047, bitOr -> 0.046, dec -> 0.033
Last fitness increase: 0 generations ago.
------------
[490.268s]Generation 32
Best Result: (fitness: 63987.2, performance: 64310.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 316 ; iter: plus(plus(bitOr(#0, 475), 142), dec(#1)); seedExpr: 316 }
[S2: EPair(EInt,EInt)]{ seed: (421,105) ; iter: #3; seedExpr: (421,105) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: mkPair(354, 475); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(316,316)]), Vector([(316,316),(968,968)]), Vector([(316,316),(968,968),(1620,1620)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272),(2924,2924)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272),(2924,2924),(3576,3576)]), ...
Diversity: 888
Average Size: 30.82016632016632
Average Fitness: 39516.35708988699
Fitness Variation: 29390.47945423965
Distribution: #1 -> 0.170, [] -> 0.076, mkPair -> 0.071, 475 -> 0.071, #0 -> 0.068, #4 -> 0.055, plus -> 0.049, bitOr -> 0.048, 142 -> 0.047, dec -> 0.035
Last fitness increase: 0 generations ago.
------------
[507.523s]Generation 33
Best Result: (fitness: 63987.2, performance: 64310.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 316 ; iter: plus(plus(bitOr(#0, 475), 142), dec(#1)); seedExpr: 316 }
[S2: EPair(EInt,EInt)]{ seed: (278,387) ; iter: (195,74); seedExpr: mkPair(278, 387) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (195,74); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(316,316)]), Vector([(316,316),(968,968)]), Vector([(316,316),(968,968),(1620,1620)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272),(2924,2924)]), Vector([(316,316),(968,968),(1620,1620),(2272,2272),(2924,2924),(3576,3576)]), ...
Diversity: 878
Average Size: 30.313929313929314
Average Fitness: 38826.64389517343
Fitness Variation: 29616.11626652899
Distribution: #1 -> 0.169, [] -> 0.078, 475 -> 0.078, mkPair -> 0.068, #0 -> 0.064, #4 -> 0.056, plus -> 0.051, 142 -> 0.049, bitOr -> 0.049, dec -> 0.036
Last fitness increase: 0 generations ago.
------------
[524.152s]Generation 34
Best Result: (fitness: 64002.8, performance: 64340.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 308; seedExpr: 308 }
[S1: EInt]{ seed: 169 ; iter: plus(plus(bitOr(#0, 475), 142), dec(#1)); seedExpr: 169 }
[S2: EPair(EInt,EInt)]{ seed: (195,74) ; iter: mkPair(length([]), 308); seedExpr: (195,74) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (195,74); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(169,169)]), Vector([(169,169),(821,821)]), Vector([(169,169),(821,821),(1473,1473)]), Vector([(169,169),(821,821),(1473,1473),(2125,2125)]), Vector([(169,169),(821,821),(1473,1473),(2125,2125),(2777,2777)]), Vector([(169,169),(821,821),(1473,1473),(2125,2125),(2777,2777),(3429,3429)]), ...
Diversity: 868
Average Size: 29.456340956340956
Average Fitness: 38660.41843358263
Fitness Variation: 29781.323949572703
Distribution: #1 -> 0.178, 475 -> 0.078, [] -> 0.071, mkPair -> 0.068, #0 -> 0.064, #4 -> 0.055, plus -> 0.052, bitOr -> 0.051, 142 -> 0.050, dec -> 0.037
Last fitness increase: 1 generations ago.
------------
[540.644s]Generation 35
Best Result: (fitness: 64002.8, performance: 64340.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 308; seedExpr: 308 }
[S1: EInt]{ seed: 169 ; iter: plus(plus(bitOr(#0, 475), 142), dec(#1)); seedExpr: 169 }
[S2: EPair(EInt,EInt)]{ seed: (195,74) ; iter: mkPair(length([]), 308); seedExpr: (195,74) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (195,74); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(169,169)]), Vector([(169,169),(821,821)]), Vector([(169,169),(821,821),(1473,1473)]), Vector([(169,169),(821,821),(1473,1473),(2125,2125)]), Vector([(169,169),(821,821),(1473,1473),(2125,2125),(2777,2777)]), Vector([(169,169),(821,821),(1473,1473),(2125,2125),(2777,2777),(3429,3429)]), ...
Diversity: 882
Average Size: 28.844074844074843
Average Fitness: 37969.43626013457
Fitness Variation: 29987.155918464206
Distribution: #1 -> 0.177, 475 -> 0.075, #0 -> 0.068, [] -> 0.066, mkPair -> 0.064, #4 -> 0.056, plus -> 0.054, bitOr -> 0.052, 142 -> 0.052, dec -> 0.037
Last fitness increase: 0 generations ago.
------------
[557.303s]Generation 36
Best Result: (fitness: 64027.6, performance: 64340.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 308; seedExpr: 308 }
[S1: EInt]{ seed: 169 ; iter: plus(plus(bitOr(#0, 475), 142), dec(#1)); seedExpr: 169 }
[S2: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (195,74); seedExpr: (195,74) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (195,74); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(169,169)]), Vector([(169,169),(821,821)]), Vector([(169,169),(821,821),(1473,1473)]), Vector([(169,169),(821,821),(1473,1473),(2125,2125)]), Vector([(169,169),(821,821),(1473,1473),(2125,2125),(2777,2777)]), Vector([(169,169),(821,821),(1473,1473),(2125,2125),(2777,2777),(3429,3429)]), ...
Diversity: 892
Average Size: 27.76923076923077
Average Fitness: 37144.893880916075
Fitness Variation: 29964.026127264002
Distribution: #1 -> 0.179, 475 -> 0.074, #0 -> 0.069, mkPair -> 0.061, [] -> 0.060, #4 -> 0.057, plus -> 0.056, bitOr -> 0.054, 142 -> 0.053, dec -> 0.039
Last fitness increase: 1 generations ago.
------------
[574.080s]Generation 37
Best Result: (fitness: 64027.6, performance: 64340.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 308; seedExpr: 308 }
[S1: EInt]{ seed: 169 ; iter: plus(plus(bitOr(308, 475), 142), dec(#1)); seedExpr: 169 }
[S2: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (195,74); seedExpr: (195,74) }
[S3: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (195,74); seedExpr: (195,74) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(169,169)]), Vector([(169,169),(821,821)]), Vector([(169,169),(821,821),(1473,1473)]), Vector([(169,169),(821,821),(1473,1473),(2125,2125)]), Vector([(169,169),(821,821),(1473,1473),(2125,2125),(2777,2777)]), Vector([(169,169),(821,821),(1473,1473),(2125,2125),(2777,2777),(3429,3429)]), ...
Diversity: 899
Average Size: 27.064449064449065
Average Fitness: 33768.64741955484
Fitness Variation: 30336.567424853787
Distribution: #1 -> 0.176, 475 -> 0.075, #0 -> 0.069, #4 -> 0.058, plus -> 0.057, mkPair -> 0.057, bitOr -> 0.057, [] -> 0.057, 142 -> 0.055, dec -> 0.040
Last fitness increase: 0 generations ago.
------------
[590.592s]Generation 38
Best Result: (fitness: 123755.0, performance: 132142.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 316 ; iter: plus(plus(bitOr(plus(times(290, 486), modular(bitXor(#1, #1), 263)), 475), 142), dec(#1)); seedExpr: 316 }
[S2: EPair(EInt,EInt)]{ seed: (195,74) ; iter: (189,208); seedExpr: (195,74) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: (308,8); seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(316,316)]), Vector([(316,316),(141736,141736)]), Vector([(316,316),(141736,141736),(283156,283156)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576),(565996,565996)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576),(565996,565996),(707416,707416)]), ...
Diversity: 891
Average Size: 26.533264033264032
Average Fitness: 33198.013122099925
Fitness Variation: 30299.709421192936
Distribution: #1 -> 0.176, 475 -> 0.073, #0 -> 0.068, #4 -> 0.060, [] -> 0.059, plus -> 0.058, bitOr -> 0.056, 142 -> 0.055, mkPair -> 0.054, dec -> 0.042
Last fitness increase: 1 generations ago.
------------
[606.588s]Generation 39
Best Result: (fitness: 123755.0, performance: 132142.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 316 ; iter: plus(plus(bitOr(plus(times(290, 486), modular(bitXor(#1, #1), 263)), 475), 142), dec(#1)); seedExpr: 316 }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: (189,208); seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: (308,8); seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(316,316)]), Vector([(316,316),(141736,141736)]), Vector([(316,316),(141736,141736),(283156,283156)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576),(565996,565996)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576),(565996,565996),(707416,707416)]), ...
Diversity: 865
Average Size: 26.60706860706861
Average Fitness: 35366.92631202279
Fitness Variation: 30290.862015513125
Distribution: #1 -> 0.178, 475 -> 0.071, #0 -> 0.069, [] -> 0.064, #4 -> 0.061, plus -> 0.059, bitOr -> 0.055, 142 -> 0.053, mkPair -> 0.050, dec -> 0.043
Last fitness increase: 0 generations ago.
------------
[622.264s]Generation 40
Best Result: (fitness: 125587.5, performance: 132142.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 316 ; iter: plus(plus(bitOr(plus(times(290, 486), length(append([], #2))), 475), 142), dec(#1)); seedExpr: 316 }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: (189,208); seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: (308,8); seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(316,316)]), Vector([(316,316),(141736,141736)]), Vector([(316,316),(141736,141736),(283156,283156)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576),(565996,565996)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576),(565996,565996),(707416,707416)]), ...
Diversity: 842
Average Size: 26.907484407484407
Average Fitness: 36666.34565756292
Fitness Variation: 30944.50287280531
Distribution: #1 -> 0.178, 475 -> 0.073, [] -> 0.071, #0 -> 0.065, plus -> 0.059, #4 -> 0.058, bitOr -> 0.056, 142 -> 0.054, mkPair -> 0.050, dec -> 0.042
Last fitness increase: 1 generations ago.
------------
[637.188s]Generation 41
Best Result: (fitness: 125587.5, performance: 132142.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 316 ; iter: plus(plus(bitOr(plus(times(290, 486), length(append([], #2))), 475), 142), dec(#1)); seedExpr: 316 }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: (189,208); seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: (308,8); seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(316,316)]), Vector([(316,316),(141736,141736)]), Vector([(316,316),(141736,141736),(283156,283156)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576),(565996,565996)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576),(565996,565996),(707416,707416)]), ...
Diversity: 824
Average Size: 26.53014553014553
Average Fitness: 37732.813441563296
Fitness Variation: 32517.876844771097
Distribution: #1 -> 0.187, 475 -> 0.072, [] -> 0.070, plus -> 0.061, #0 -> 0.061, #4 -> 0.058, bitOr -> 0.055, 142 -> 0.055, mkPair -> 0.048, 308 -> 0.046
Last fitness increase: 0 generations ago.
------------
[652.400s]Generation 42
Best Result: (fitness: 125703.5, performance: 132264.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 473 ; iter: plus(plus(bitOr(plus(times(290, 486), length(append([], #2))), 475), 142), dec(#1)); seedExpr: 473 }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: (189,208); seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: (308,8); seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(473,473)]), Vector([(473,473),(141893,141893)]), Vector([(473,473),(141893,141893),(283313,283313)]), Vector([(473,473),(141893,141893),(283313,283313),(424733,424733)]), Vector([(473,473),(141893,141893),(283313,283313),(424733,424733),(566153,566153)]), Vector([(473,473),(141893,141893),(283313,283313),(424733,424733),(566153,566153),(707573,707573)]), ...
Diversity: 836
Average Size: 27.10914760914761
Average Fitness: 39536.602870544564
Fitness Variation: 38249.60891314413
Distribution: #1 -> 0.192, plus -> 0.064, [] -> 0.064, 475 -> 0.063, #4 -> 0.052, bitOr -> 0.050, 142 -> 0.049, #0 -> 0.046, (195,74) -> 0.040, mkPair -> 0.040
Last fitness increase: 0 generations ago.
------------
[668.561s]Generation 43
Best Result: (fitness: 127109.2, performance: 132142.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 316 ; iter: plus(plus(bitOr(plus(times(290, 486), modular(263, 263)), 475), 142), dec(#1)); seedExpr: 316 }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: (487,2); seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: (308,8); seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(316,316)]), Vector([(316,316),(141736,141736)]), Vector([(316,316),(141736,141736),(283156,283156)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576),(565996,565996)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576),(565996,565996),(707416,707416)]), ...
Diversity: 862
Average Size: 30.39293139293139
Average Fitness: 50531.474391776195
Fitness Variation: 48886.04202068479
Distribution: #1 -> 0.187, plus -> 0.066, [] -> 0.056, 475 -> 0.050, bitOr -> 0.042, #4 -> 0.041, 142 -> 0.038, 486 -> 0.037, 290 -> 0.037, times -> 0.033
Last fitness increase: 0 generations ago.
------------
[685.871s]Generation 44
Best Result: (fitness: 128470.3, performance: 132264.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 473 ; iter: plus(plus(bitOr(plus(times(290, 486), length([])), 475), 142), dec(#1)); seedExpr: 473 }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: #2; seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: (308,8); seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(473,473)]), Vector([(473,473),(141893,141893)]), Vector([(473,473),(141893,141893),(283313,283313)]), Vector([(473,473),(141893,141893),(283313,283313),(424733,424733)]), Vector([(473,473),(141893,141893),(283313,283313),(424733,424733),(566153,566153)]), Vector([(473,473),(141893,141893),(283313,283313),(424733,424733),(566153,566153),(707573,707573)]), ...
Diversity: 891
Average Size: 34.107068607068605
Average Fitness: 61954.39688365974
Fitness Variation: 56619.10168524403
Distribution: #1 -> 0.177, plus -> 0.068, [] -> 0.058, 290 -> 0.050, 486 -> 0.050, times -> 0.045, 475 -> 0.040, bitOr -> 0.036, bitXor -> 0.036, #4 -> 0.033
Last fitness increase: 1 generations ago.
------------
[703.459s]Generation 45
Best Result: (fitness: 128470.3, performance: 132264.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 473 ; iter: plus(plus(bitOr(plus(times(290, 486), length([])), 475), 142), dec(#1)); seedExpr: 473 }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: (189,208); seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: (308,8); seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(473,473)]), Vector([(473,473),(141893,141893)]), Vector([(473,473),(141893,141893),(283313,283313)]), Vector([(473,473),(141893,141893),(283313,283313),(424733,424733)]), Vector([(473,473),(141893,141893),(283313,283313),(424733,424733),(566153,566153)]), Vector([(473,473),(141893,141893),(283313,283313),(424733,424733),(566153,566153),(707573,707573)]), ...
Diversity: 911
Average Size: 34.731808731808734
Average Fitness: 63069.170540888685
Fitness Variation: 58977.92550833652
Distribution: #1 -> 0.142, plus -> 0.071, [] -> 0.070, 290 -> 0.055, 486 -> 0.055, times -> 0.048, append -> 0.042, 475 -> 0.040, bitOr -> 0.036, #4 -> 0.031
Last fitness increase: 0 generations ago.
------------
[720.760s]Generation 46
Best Result: (fitness: 129348.2, performance: 132142.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 465 ; iter: 317; seedExpr: 465 }
[S1: EInt]{ seed: 316 ; iter: plus(plus(bitOr(plus(times(290, 486), 192), 475), 142), dec(#1)); seedExpr: 316 }
[S2: EPair(EInt,EInt)]{ seed: (35,224) ; iter: (189,208); seedExpr: (35,224) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: (308,8); seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(316,316)]), Vector([(316,316),(141736,141736)]), Vector([(316,316),(141736,141736),(283156,283156)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576),(565996,565996)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576),(565996,565996),(707416,707416)]), ...
Diversity: 909
Average Size: 34.435550935550935
Average Fitness: 68907.83378146405
Fitness Variation: 60117.37090348609
Distribution: #1 -> 0.110, [] -> 0.079, plus -> 0.075, 290 -> 0.058, 486 -> 0.058, times -> 0.049, append -> 0.048, 475 -> 0.041, bitOr -> 0.037, length -> 0.037
Last fitness increase: 1 generations ago.
------------
[737.682s]Generation 47
Best Result: (fitness: 129348.2, performance: 132142.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 465 ; iter: 317; seedExpr: 465 }
[S1: EInt]{ seed: 316 ; iter: plus(plus(bitOr(plus(times(290, 486), 192), 475), 142), dec(#1)); seedExpr: 316 }
[S2: EPair(EInt,EInt)]{ seed: (35,224) ; iter: (189,208); seedExpr: (35,224) }
[S3: EPair(EInt,EInt)]{ seed: (216,125) ; iter: (308,8); seedExpr: (216,125) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(316,316)]), Vector([(316,316),(141736,141736)]), Vector([(316,316),(141736,141736),(283156,283156)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576),(565996,565996)]), Vector([(316,316),(141736,141736),(283156,283156),(424576,424576),(565996,565996),(707416,707416)]), ...
Diversity: 893
Average Size: 33.17879417879418
Average Fitness: 68135.91567468525
Fitness Variation: 60639.59701286262
Distribution: #1 -> 0.110, plus -> 0.080, [] -> 0.072, 290 -> 0.063, 486 -> 0.063, times -> 0.054, 475 -> 0.044, bitOr -> 0.039, length -> 0.037, #4 -> 0.036
Last fitness increase: 0 generations ago.
------------
[754.848s]Generation 48
Best Result: (fitness: 129471.2, performance: 131175.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 460 ; iter: 475; seedExpr: bitOr(divide(307, 75), pair2((178,460))) }
[S1: EInt]{ seed: 316 ; iter: plus(plus(bitOr(times(290, 486), #0), 142), dec(#1)); seedExpr: 316 }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: (189,208); seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: (308,8); seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(dec(#1), #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(315,316)]), Vector([(315,316),(141716,141717)]), Vector([(315,316),(141716,141717),(283136,283137)]), Vector([(315,316),(141716,141717),(283136,283137),(424556,424557)]), Vector([(315,316),(141716,141717),(283136,283137),(424556,424557),(565976,565977)]), Vector([(315,316),(141716,141717),(283136,283137),(424556,424557),(565976,565977),(707396,707397)]), ...
Diversity: 901
Average Size: 32.82224532224532
Average Fitness: 67960.16381318528
Fitness Variation: 61020.91916493173
Distribution: #1 -> 0.117, plus -> 0.082, [] -> 0.076, 486 -> 0.065, 290 -> 0.065, times -> 0.057, length -> 0.046, 475 -> 0.045, bitOr -> 0.040, #4 -> 0.037
Last fitness increase: 0 generations ago.
------------
[771.887s]Generation 49
Best Result: (fitness: 130842.6, performance: 132264.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: neg(#1); seedExpr: 308 }
[S1: EInt]{ seed: 473 ; iter: plus(plus(bitOr(times(290, 486), 475), 142), dec(#1)); seedExpr: 473 }
[S2: EPair(EInt,EInt)]{ seed: (308,8) ; iter: #2; seedExpr: (308,8) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: (308,8); seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(473,473)]), Vector([(473,473),(141893,141893)]), Vector([(473,473),(141893,141893),(283313,283313)]), Vector([(473,473),(141893,141893),(283313,283313),(424733,424733)]), Vector([(473,473),(141893,141893),(283313,283313),(424733,424733),(566153,566153)]), Vector([(473,473),(141893,141893),(283313,283313),(424733,424733),(566153,566153),(707573,707573)]), ...
Diversity: 892
Average Size: 31.80977130977131
Average Fitness: 66876.30521165361
Fitness Variation: 61274.69319635165
Distribution: #1 -> 0.126, [] -> 0.086, plus -> 0.085, 486 -> 0.068, 290 -> 0.067, times -> 0.058, length -> 0.051, 475 -> 0.046, bitOr -> 0.040, #4 -> 0.039
Last fitness increase: 0 generations ago.
------------
[789.065s]Generation 50
Best Result: (fitness: 130851.2, performance: 132264.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 248 ; iter: 317; seedExpr: 248 }
[S1: EInt]{ seed: 473 ; iter: plus(plus(bitOr(times(290, 486), 475), 142), dec(#1)); seedExpr: 473 }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: (315,13); seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (315,13) ; iter: (26,448); seedExpr: (315,13) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(473,473)]), Vector([(473,473),(141893,141893)]), Vector([(473,473),(141893,141893),(283313,283313)]), Vector([(473,473),(141893,141893),(283313,283313),(424733,424733)]), Vector([(473,473),(141893,141893),(283313,283313),(424733,424733),(566153,566153)]), Vector([(473,473),(141893,141893),(283313,283313),(424733,424733),(566153,566153),(707573,707573)]), ...
Diversity: 898
Average Size: 31.975051975051976
Average Fitness: 67900.89010554571
Fitness Variation: 61528.05835832526
Distribution: #1 -> 0.127, plus -> 0.084, [] -> 0.078, 486 -> 0.070, 290 -> 0.069, times -> 0.060, 475 -> 0.047, length -> 0.042, bitOr -> 0.041, #4 -> 0.039
Last fitness increase: 0 generations ago.
------------
[806.172s]Generation 51
Best Result: (fitness: 211203.0, performance: 240374.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 473 ; iter: plus(plus(bitOr(plus(times(times(bitXor(bitShift(#1, 214), 99), 302), 486), length([])), 475), 142), dec(#1)); seedExpr: 473 }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: #2; seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: #2; seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(473,473)]), Vector([(473,473),(232634981,232634981)]), Vector([(473,473),(232634981,232634981),(-1749323023,-1749323023)]), Vector([(473,473),(232634981,232634981),(-1749323023,-1749323023),(-1650906243,-1650906243)]), Vector([(473,473),(232634981,232634981),(-1749323023,-1749323023),(-1650906243,-1650906243),(527885321,527885321)]), Vector([(473,473),(232634981,232634981),(-1749323023,-1749323023),(-1650906243,-1650906243),(527885321,527885321),(492084373,492084373)]), ...
Diversity: 913
Average Size: 32.38669438669439
Average Fitness: 68747.95753286837
Fitness Variation: 61604.013968825886
Distribution: #1 -> 0.131, plus -> 0.075, 486 -> 0.067, 290 -> 0.066, [] -> 0.059, times -> 0.057, 475 -> 0.045, bitOr -> 0.043, #4 -> 0.040, 142 -> 0.038
Last fitness increase: 0 generations ago.
------------
[823.332s]Generation 52
Best Result: (fitness: 377065.1, performance: 475352.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 473 ; iter: plus(plus(bitOr(plus(times(times(bitXor(bitAnd(neg(minus(#1, #1)), #0), 99), 302), 486), length([])), 475), 142), dec(#1)); seedExpr: 473 }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: #2; seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: #2; seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(473,473)]), Vector([(473,473),(14531173,14531173)]), Vector([(473,473),(14531173,14531173),(29061873,29061873)]), Vector([(473,473),(14531173,14531173),(29061873,29061873),(43592573,43592573)]), Vector([(473,473),(14531173,14531173),(29061873,29061873),(43592573,43592573),(58123273,58123273)]), Vector([(473,473),(14531173,14531173),(29061873,29061873),(43592573,43592573),(58123273,58123273),(72653973,72653973)]), ...
Diversity: 913
Average Size: 32.481288981288984
Average Fitness: 68068.79610334341
Fitness Variation: 63068.71431620228
Distribution: #1 -> 0.134, 486 -> 0.067, 290 -> 0.066, plus -> 0.064, times -> 0.057, [] -> 0.047, bitOr -> 0.044, 475 -> 0.044, #4 -> 0.040, 142 -> 0.038
Last fitness increase: 1 generations ago.
------------
[839.952s]Generation 53
Best Result: (fitness: 377065.1, performance: 475352.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 317; seedExpr: 308 }
[S1: EInt]{ seed: 473 ; iter: plus(plus(bitOr(plus(times(times(bitXor(bitAnd(neg(minus(#1, #1)), #0), 99), 302), 486), length([])), 475), 142), dec(#1)); seedExpr: 473 }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: #2; seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: #2; seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(473,473)]), Vector([(473,473),(14531173,14531173)]), Vector([(473,473),(14531173,14531173),(29061873,29061873)]), Vector([(473,473),(14531173,14531173),(29061873,29061873),(43592573,43592573)]), Vector([(473,473),(14531173,14531173),(29061873,29061873),(43592573,43592573),(58123273,58123273)]), Vector([(473,473),(14531173,14531173),(29061873,29061873),(43592573,43592573),(58123273,58123273),(72653973,72653973)]), ...
Diversity: 890
Average Size: 32.21725571725572
Average Fitness: 73736.40282303355
Fitness Variation: 64720.99450226955
Distribution: #1 -> 0.143, 486 -> 0.068, 290 -> 0.066, times -> 0.056, plus -> 0.051, bitOr -> 0.047, [] -> 0.047, 475 -> 0.047, #4 -> 0.042, 142 -> 0.041
Last fitness increase: 0 generations ago.
------------
[856.907s]Generation 54
Best Result: (fitness: 417607.1, performance: 475352.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: neg(#1); seedExpr: 308 }
[S1: EInt]{ seed: 473 ; iter: plus(plus(bitOr(times(times(bitXor(bitAnd(neg(minus(#1, #1)), #0), 99), 302), 486), 475), 142), dec(#1)); seedExpr: 473 }
[S2: EPair(EInt,EInt)]{ seed: (308,8) ; iter: #2; seedExpr: (308,8) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: (308,8); seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(473,473)]), Vector([(473,473),(14531173,14531173)]), Vector([(473,473),(14531173,14531173),(29061873,29061873)]), Vector([(473,473),(14531173,14531173),(29061873,29061873),(43592573,43592573)]), Vector([(473,473),(14531173,14531173),(29061873,29061873),(43592573,43592573),(58123273,58123273)]), Vector([(473,473),(14531173,14531173),(29061873,29061873),(43592573,43592573),(58123273,58123273),(72653973,72653973)]), ...
Diversity: 903
Average Size: 30.386694386694387
Average Fitness: 74041.08576290213
Fitness Variation: 71637.03063507144
Distribution: #1 -> 0.157, 486 -> 0.068, 290 -> 0.065, times -> 0.059, 475 -> 0.053, bitOr -> 0.048, plus -> 0.047, [] -> 0.046, #4 -> 0.045, 142 -> 0.043
Last fitness increase: 0 generations ago.
------------
[873.887s]Generation 55
Best Result: (fitness: 715818.6, performance: 902406.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: 340; seedExpr: 308 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(plus(times(times(bitXor(bitAnd(neg(minus(#1, #1)), #0), 99), 302), 486), length([])), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: #2; seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: #2; seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(475,475)]), Vector([(475,475),(14531175,14531175)]), Vector([(475,475),(14531175,14531175),(29061875,29061875)]), Vector([(475,475),(14531175,14531175),(29061875,29061875),(43592575,43592575)]), Vector([(475,475),(14531175,14531175),(29061875,29061875),(43592575,43592575),(58123275,58123275)]), Vector([(475,475),(14531175,14531175),(29061875,29061875),(43592575,43592575),(58123275,58123275),(72653975,72653975)]), ...
Diversity: 901
Average Size: 29.743243243243242
Average Fitness: 81194.26663335037
Fitness Variation: 93096.29825717154
Distribution: #1 -> 0.167, 486 -> 0.067, times -> 0.063, 290 -> 0.057, 475 -> 0.053, plus -> 0.048, [] -> 0.047, bitOr -> 0.043, #4 -> 0.043, 142 -> 0.041
Last fitness increase: 0 generations ago.
------------
[890.595s]Generation 56
Best Result: (fitness: 792499.3, performance: 902406.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 185 ; iter: neg(#1); seedExpr: 185 }
[S1: EInt]{ seed: 140940 ; iter: plus(plus(bitOr(times(times(bitXor(bitAnd(neg(minus(#1, #1)), #0), 99), 302), 486), 475), 142), dec(#1)); seedExpr: times(290, 486) }
[S2: EPair(EInt,EInt)]{ seed: (308,8) ; iter: #2; seedExpr: (308,8) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: (308,8); seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(140940,140940)]), Vector([(140940,140940),(14671640,14671640)]), Vector([(140940,140940),(14671640,14671640),(29202340,29202340)]), Vector([(140940,140940),(14671640,14671640),(29202340,29202340),(43733040,43733040)]), Vector([(140940,140940),(14671640,14671640),(29202340,29202340),(43733040,43733040),(58263740,58263740)]), Vector([(140940,140940),(14671640,14671640),(29202340,29202340),(43733040,43733040),(58263740,58263740),(72794440,72794440)]), ...
Diversity: 895
Average Size: 31.15072765072765
Average Fitness: 97078.6327201198
Fitness Variation: 131464.49647912814
Distribution: #1 -> 0.176, times -> 0.066, 486 -> 0.056, [] -> 0.048, plus -> 0.047, 475 -> 0.044, 290 -> 0.037, minus -> 0.036, bitOr -> 0.035, #4 -> 0.035
Last fitness increase: 0 generations ago.
------------
[908.370s]Generation 57
Best Result: (fitness: 809172.0, performance: 902406.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 141279 ; iter: 317; seedExpr: bitOr(times(290, 486), 475) }
[S1: EInt]{ seed: 1 ; iter: plus(plus(bitOr(plus(times(times(bitXor(length([]), 99), 302), 486), length([])), 475), 142), dec(#1)); seedExpr: length(prepend(access([], 385, (271,229)), [])) }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: #2; seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: #2; seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(1,1)]), Vector([(1,1),(14530701,14530701)]), Vector([(1,1),(14530701,14530701),(29061401,29061401)]), Vector([(1,1),(14530701,14530701),(29061401,29061401),(43592101,43592101)]), Vector([(1,1),(14530701,14530701),(29061401,29061401),(43592101,43592101),(58122801,58122801)]), Vector([(1,1),(14530701,14530701),(29061401,29061401),(43592101,43592101),(58122801,58122801),(72653501,72653501)]), ...
Diversity: 911
Average Size: 35.45114345114345
Average Fitness: 147479.3079755027
Fitness Variation: 194212.802366092
Distribution: #1 -> 0.179, times -> 0.067, minus -> 0.054, [] -> 0.051, 486 -> 0.044, neg -> 0.044, plus -> 0.044, bitAnd -> 0.038, 99 -> 0.035, bitXor -> 0.033
Last fitness increase: 0 generations ago.
------------
[926.964s]Generation 58
Best Result: (fitness: 811391.3, performance: 902406.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 141279 ; iter: 317; seedExpr: bitOr(times(290, 486), 475) }
[S1: EInt]{ seed: 1 ; iter: plus(plus(bitOr(plus(times(times(bitXor(length([]), 99), 302), 486), length([])), 475), 142), dec(#1)); seedExpr: length(prepend((315,13), [])) }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: #2; seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: #2; seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(1,1)]), Vector([(1,1),(14530701,14530701)]), Vector([(1,1),(14530701,14530701),(29061401,29061401)]), Vector([(1,1),(14530701,14530701),(29061401,29061401),(43592101,43592101)]), Vector([(1,1),(14530701,14530701),(29061401,29061401),(43592101,43592101),(58122801,58122801)]), Vector([(1,1),(14530701,14530701),(29061401,29061401),(43592101,43592101),(58122801,58122801),(72653501,72653501)]), ...
Diversity: 907
Average Size: 39.61226611226611
Average Fitness: 207583.9223115915
Fitness Variation: 251724.70741827492
Distribution: #1 -> 0.182, times -> 0.067, minus -> 0.059, neg -> 0.052, [] -> 0.049, bitAnd -> 0.046, 99 -> 0.044, #0 -> 0.042, plus -> 0.042, bitXor -> 0.040
Last fitness increase: 0 generations ago.
------------
[945.811s]Generation 59
Best Result: (fitness: 812009.3, performance: 902406.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 230875 ; iter: 317; seedExpr: bitOr(times(475, 486), 475) }
[S1: EInt]{ seed: 448 ; iter: plus(plus(bitOr(plus(times(times(bitXor(length([]), 99), 302), 486), length([])), 475), 142), dec(#1)); seedExpr: 448 }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: #2; seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: #2; seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(448,448)]), Vector([(448,448),(14531148,14531148)]), Vector([(448,448),(14531148,14531148),(29061848,29061848)]), Vector([(448,448),(14531148,14531148),(29061848,29061848),(43592548,43592548)]), Vector([(448,448),(14531148,14531148),(29061848,29061848),(43592548,43592548),(58123248,58123248)]), Vector([(448,448),(14531148,14531148),(29061848,29061848),(43592548,43592548),(58123248,58123248),(72653948,72653948)]), ...
Diversity: 908
Average Size: 40.977130977130976
Average Fitness: 276713.85590911144
Fitness Variation: 320814.3516942576
Distribution: #1 -> 0.182, times -> 0.066, minus -> 0.058, neg -> 0.053, [] -> 0.050, bitAnd -> 0.044, #0 -> 0.044, 99 -> 0.043, bitXor -> 0.041, 302 -> 0.039
Last fitness increase: 0 generations ago.
------------
[964.387s]Generation 60
Best Result: (fitness: 812421.3, performance: 902406.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 441 ; iter: 317; seedExpr: 441 }
[S1: EInt]{ seed: 1 ; iter: plus(plus(bitOr(plus(times(times(bitXor(length([]), 99), 302), 486), length([])), 475), 142), dec(#1)); seedExpr: length(prepend((315,13), [])) }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: #2; seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: #2; seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(1,1)]), Vector([(1,1),(14530701,14530701)]), Vector([(1,1),(14530701,14530701),(29061401,29061401)]), Vector([(1,1),(14530701,14530701),(29061401,29061401),(43592101,43592101)]), Vector([(1,1),(14530701,14530701),(29061401,29061401),(43592101,43592101),(58122801,58122801)]), Vector([(1,1),(14530701,14530701),(29061401,29061401),(43592101,43592101),(58122801,58122801),(72653501,72653501)]), ...
Diversity: 910
Average Size: 42.063409563409564
Average Fitness: 375918.31180408207
Fitness Variation: 365855.27283675753
Distribution: #1 -> 0.171, times -> 0.067, [] -> 0.059, minus -> 0.050, neg -> 0.049, 99 -> 0.045, bitXor -> 0.042, #0 -> 0.042, bitAnd -> 0.040, 302 -> 0.040
Last fitness increase: 0 generations ago.
------------
[982.565s]Generation 61
Best Result: (fitness: 855365.4, performance: 902406.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: neg(#1); seedExpr: 308 }
[S1: EInt]{ seed: 251 ; iter: plus(plus(bitOr(times(times(bitXor(length([]), 99), 302), 486), 475), 142), dec(#1)); seedExpr: pair2(mkPair(164, 251)) }
[S2: EPair(EInt,EInt)]{ seed: (296,335) ; iter: #2; seedExpr: (296,335) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: (308,8); seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(concat([], #4), mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(251,251)]), Vector([(251,251),(14530951,14530951)]), Vector([(251,251),(14530951,14530951),(29061651,29061651)]), Vector([(251,251),(14530951,14530951),(29061651,29061651),(43592351,43592351)]), Vector([(251,251),(14530951,14530951),(29061651,29061651),(43592351,43592351),(58123051,58123051)]), Vector([(251,251),(14530951,14530951),(29061651,29061651),(43592351,43592351),(58123051,58123051),(72653751,72653751)]), ...
Diversity: 912
Average Size: 42.29002079002079
Average Fitness: 392863.1491743532
Fitness Variation: 386849.5401551979
Distribution: #1 -> 0.147, [] -> 0.081, times -> 0.073, 99 -> 0.048, bitXor -> 0.045, 486 -> 0.043, 302 -> 0.041, length -> 0.041, neg -> 0.038, minus -> 0.036
Last fitness increase: 0 generations ago.
------------
[1001.159s]Generation 62
Best Result: (fitness: 857320.7, performance: 902406.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 185 ; iter: neg(#1); seedExpr: 185 }
[S1: EInt]{ seed: 409 ; iter: plus(plus(bitOr(times(times(bitXor(length([]), 99), 302), 486), 475), 142), dec(#1)); seedExpr: bitAnd(475, 441) }
[S2: EPair(EInt,EInt)]{ seed: (308,8) ; iter: #2; seedExpr: (308,8) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: (308,8); seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(409,409)]), Vector([(409,409),(14531109,14531109)]), Vector([(409,409),(14531109,14531109),(29061809,29061809)]), Vector([(409,409),(14531109,14531109),(29061809,29061809),(43592509,43592509)]), Vector([(409,409),(14531109,14531109),(29061809,29061809),(43592509,43592509),(58123209,58123209)]), Vector([(409,409),(14531109,14531109),(29061809,29061809),(43592509,43592509),(58123209,58123209),(72653909,72653909)]), ...
Diversity: 917
Average Size: 41.974012474012476
Average Fitness: 389690.2318347237
Fitness Variation: 395147.5838378737
Distribution: [] -> 0.122, #1 -> 0.103, times -> 0.083, length -> 0.071, 486 -> 0.051, 99 -> 0.050, 302 -> 0.046, bitXor -> 0.046, plus -> 0.044, 475 -> 0.040
Last fitness increase: 0 generations ago.
------------
[1018.731s]Generation 63
Best Result: (fitness: 857558.3, performance: 902406.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 212 ; iter: 317; seedExpr: 212 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(plus(times(times(99, 302), 486), length([])), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: #2; seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: #2; seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(14530700,14530700)]), Vector([(0,0),(14530700,14530700),(29061400,29061400)]), Vector([(0,0),(14530700,14530700),(29061400,29061400),(43592100,43592100)]), Vector([(0,0),(14530700,14530700),(29061400,29061400),(43592100,43592100),(58122800,58122800)]), Vector([(0,0),(14530700,14530700),(29061400,29061400),(43592100,43592100),(58122800,58122800),(72653500,72653500)]), ...
Diversity: 901
Average Size: 40.90956340956341
Average Fitness: 398637.225832111
Fitness Variation: 397393.1135108225
Distribution: [] -> 0.143, length -> 0.092, times -> 0.088, #1 -> 0.081, 486 -> 0.055, 99 -> 0.054, plus -> 0.051, 302 -> 0.049, bitXor -> 0.048, 475 -> 0.044
Last fitness increase: 0 generations ago.
------------
[1036.626s]Generation 64
Best Result: (fitness: 892396.8, performance: 1799408.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: neg(#1); seedExpr: 308 }
[S1: EInt]{ seed: 251 ; iter: plus(plus(bitOr(times(times(bitXor(length([]), 99), 302), 486), 475), 142), dec(plus(plus(bitOr(times(times(bitXor(length([]), 99), 302), 486), 475), 142), dec(#1)))); seedExpr: pair2(mkPair(164, 251)) }
[S2: EPair(EInt,EInt)]{ seed: (296,335) ; iter: mkPair(#1, #1); seedExpr: (296,335) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: (308,8); seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(concat([], #4), mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(251,251)]), Vector([(251,251),(29061651,29061651)]), Vector([(251,251),(29061651,29061651),(58123051,58123051)]), Vector([(251,251),(29061651,29061651),(58123051,58123051),(87184451,87184451)]), Vector([(251,251),(29061651,29061651),(58123051,58123051),(87184451,87184451),(116245851,116245851)]), Vector([(251,251),(29061651,29061651),(58123051,58123051),(87184451,87184451),(116245851,116245851),(145307251,145307251)]), ...
Diversity: 909
Average Size: 38.83991683991684
Average Fitness: 403539.64581570413
Fitness Variation: 400092.1757166972
Distribution: [] -> 0.141, length -> 0.096, times -> 0.090, #1 -> 0.084, 99 -> 0.058, 486 -> 0.055, plus -> 0.053, 302 -> 0.052, bitXor -> 0.050, 475 -> 0.045
Last fitness increase: 1 generations ago.
------------
[1054.147s]Generation 65
Best Result: (fitness: 892396.8, performance: 1799408.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: neg(#1); seedExpr: 308 }
[S1: EInt]{ seed: 251 ; iter: plus(plus(bitOr(times(times(bitXor(length([]), 99), 302), 486), 475), 142), dec(plus(plus(bitOr(times(times(bitXor(length([]), 99), 302), 486), 475), 142), dec(#1)))); seedExpr: pair2(mkPair(164, 251)) }
[S2: EPair(EInt,EInt)]{ seed: (296,335) ; iter: mkPair(#1, #1); seedExpr: (296,335) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: (308,8); seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(concat([], #4), mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(251,251)]), Vector([(251,251),(29061651,29061651)]), Vector([(251,251),(29061651,29061651),(58123051,58123051)]), Vector([(251,251),(29061651,29061651),(58123051,58123051),(87184451,87184451)]), Vector([(251,251),(29061651,29061651),(58123051,58123051),(87184451,87184451),(116245851,116245851)]), Vector([(251,251),(29061651,29061651),(58123051,58123051),(87184451,87184451),(116245851,116245851),(145307251,145307251)]), ...
Diversity: 893
Average Size: 38.07068607068607
Average Fitness: 429980.7388118727
Fitness Variation: 407240.5344711609
Distribution: [] -> 0.131, #1 -> 0.094, times -> 0.089, length -> 0.084, 99 -> 0.059, 302 -> 0.053, 486 -> 0.052, plus -> 0.050, bitXor -> 0.046, 475 -> 0.043
Last fitness increase: 2 generations ago.
------------
[1071.971s]Generation 66
Best Result: (fitness: 892396.8, performance: 1799408.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 308 ; iter: neg(#1); seedExpr: 308 }
[S1: EInt]{ seed: 251 ; iter: plus(plus(bitOr(times(times(bitXor(length([]), 99), 302), 486), 475), 142), dec(plus(plus(bitOr(times(times(bitXor(length([]), 99), 302), 486), 475), 142), dec(#1)))); seedExpr: pair2(mkPair(164, 251)) }
[S2: EPair(EInt,EInt)]{ seed: (296,335) ; iter: mkPair(#1, #1); seedExpr: (296,335) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: (308,8); seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(concat([], #4), mkPair(#1, #1)); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(251,251)]), Vector([(251,251),(29061651,29061651)]), Vector([(251,251),(29061651,29061651),(58123051,58123051)]), Vector([(251,251),(29061651,29061651),(58123051,58123051),(87184451,87184451)]), Vector([(251,251),(29061651,29061651),(58123051,58123051),(87184451,87184451),(116245851,116245851)]), Vector([(251,251),(29061651,29061651),(58123051,58123051),(87184451,87184451),(116245851,116245851),(145307251,145307251)]), ...
Diversity: 905
Average Size: 38.44906444906445
Average Fitness: 423682.8592754249
Fitness Variation: 416233.33780228096
Distribution: [] -> 0.118, #1 -> 0.101, times -> 0.092, length -> 0.067, 99 -> 0.060, 302 -> 0.055, 486 -> 0.053, plus -> 0.045, 475 -> 0.043, bitXor -> 0.036
Last fitness increase: 0 generations ago.
------------
[1089.599s]Generation 67
Best Result: (fitness: 1269693.2, performance: 1350908.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 141279 ; iter: #1; seedExpr: bitOr(times(290, 486), 475) }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(plus(times(times(99, 302), 486), length([])), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: #2; seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: #2; seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, bitShift(#1, length(prepend((437,9), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(14530700,29061400)]), Vector([(0,0),(14530700,29061400),(29061400,58122800)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200),(58122800,116245600)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200),(58122800,116245600),(72653500,145307000)]), ...
Diversity: 899
Average Size: 37.42099792099792
Average Fitness: 426249.0062667238
Fitness Variation: 417635.84399585903
Distribution: [] -> 0.108, #1 -> 0.103, times -> 0.099, 99 -> 0.064, length -> 0.062, 302 -> 0.060, 486 -> 0.057, plus -> 0.049, 475 -> 0.047, bitOr -> 0.034
Last fitness increase: 0 generations ago.
------------
[1107.271s]Generation 68
Best Result: (fitness: 1271305.0, performance: 1350908.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(plus(times(times(99, 302), 486), length([])), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: #2; seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: #2; seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, bitShift(#1, length(prepend((437,9), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(14530700,29061400)]), Vector([(0,0),(14530700,29061400),(29061400,58122800)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200),(58122800,116245600)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200),(58122800,116245600),(72653500,145307000)]), ...
Diversity: 893
Average Size: 36.897089397089395
Average Fitness: 442754.799401182
Fitness Variation: 420503.75911533163
Distribution: [] -> 0.104, times -> 0.102, #1 -> 0.102, 99 -> 0.065, 302 -> 0.062, length -> 0.062, 486 -> 0.059, plus -> 0.053, 475 -> 0.048, bitOr -> 0.035
Last fitness increase: 0 generations ago.
------------
[1125.422s]Generation 69
Best Result: (fitness: 1309580.7, performance: 1350908.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: #2; seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: #2; seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, bitShift(#1, length(prepend((437,9), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(14530700,29061400)]), Vector([(0,0),(14530700,29061400),(29061400,58122800)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200),(58122800,116245600)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200),(58122800,116245600),(72653500,145307000)]), ...
Diversity: 911
Average Size: 38.732848232848234
Average Fitness: 414399.59442210326
Fitness Variation: 427591.30402234057
Distribution: [] -> 0.106, times -> 0.100, #1 -> 0.097, 99 -> 0.066, 302 -> 0.063, length -> 0.061, 486 -> 0.056, plus -> 0.054, 475 -> 0.047, bitOr -> 0.036
Last fitness increase: 1 generations ago.
------------
[1143.944s]Generation 70
Best Result: (fitness: 1271305.0, performance: 1350908.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(plus(times(times(99, 302), 486), length([])), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: #2; seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: #2; seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, bitShift(#1, length(prepend((437,9), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(14530700,29061400)]), Vector([(0,0),(14530700,29061400),(29061400,58122800)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200),(58122800,116245600)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200),(58122800,116245600),(72653500,145307000)]), ...
Diversity: 926
Average Size: 44.818087318087315
Average Fitness: 406500.7967360879
Fitness Variation: 431412.6516165162
Distribution: [] -> 0.105, times -> 0.098, #1 -> 0.089, 99 -> 0.066, 302 -> 0.062, length -> 0.060, 486 -> 0.053, plus -> 0.050, 475 -> 0.045, bitXor -> 0.041
Last fitness increase: 2 generations ago.
------------
[1163.108s]Generation 71
Best Result: (fitness: 1271305.0, performance: 1350908.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(plus(times(times(99, 302), 486), length([])), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: #2; seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: #2; seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, bitShift(#1, length(prepend((459,102), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(14530700,29061400)]), Vector([(0,0),(14530700,29061400),(29061400,58122800)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200),(58122800,116245600)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200),(58122800,116245600),(72653500,145307000)]), ...
Diversity: 919
Average Size: 48.275467775467774
Average Fitness: 424478.2772890721
Fitness Variation: 441073.3003844173
Distribution: [] -> 0.104, times -> 0.099, #1 -> 0.086, 99 -> 0.068, 302 -> 0.062, length -> 0.061, 486 -> 0.054, plus -> 0.050, bitXor -> 0.047, 475 -> 0.046
Last fitness increase: 3 generations ago.
------------
[1182.092s]Generation 72
Best Result: (fitness: 1271305.0, performance: 1350908.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(plus(times(times(99, 302), 486), length([])), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: (26,84); seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: #2; seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, bitShift(#1, length(prepend((437,9), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(14530700,29061400)]), Vector([(0,0),(14530700,29061400),(29061400,58122800)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200),(58122800,116245600)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200),(58122800,116245600),(72653500,145307000)]), ...
Diversity: 925
Average Size: 49.51039501039501
Average Fitness: 416621.817618177
Fitness Variation: 465717.85785703745
Distribution: [] -> 0.104, times -> 0.100, #1 -> 0.084, 99 -> 0.068, length -> 0.066, 302 -> 0.062, 486 -> 0.053, plus -> 0.052, bitXor -> 0.048, 475 -> 0.045
Last fitness increase: 4 generations ago.
------------
[1201.087s]Generation 73
Best Result: (fitness: 1271305.0, performance: 1350908.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(plus(times(times(99, 302), 486), length([])), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (164,104) ; iter: (26,84); seedExpr: (164,104) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: #2; seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, bitShift(#1, length(prepend((437,9), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(14530700,29061400)]), Vector([(0,0),(14530700,29061400),(29061400,58122800)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200),(58122800,116245600)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200),(58122800,116245600),(72653500,145307000)]), ...
Diversity: 927
Average Size: 49.392931392931395
Average Fitness: 471630.50079322903
Fitness Variation: 518082.9939708543
Distribution: [] -> 0.108, times -> 0.097, #1 -> 0.078, length -> 0.073, 99 -> 0.066, 302 -> 0.060, plus -> 0.055, 486 -> 0.052, 475 -> 0.043, bitXor -> 0.043
Last fitness increase: 5 generations ago.
------------
[1219.971s]Generation 74
Best Result: (fitness: 1271494.5, performance: 1350908.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 430 ; iter: 251; seedExpr: 430 }
[S1: EInt]{ seed: 142 ; iter: plus(plus(bitOr(plus(times(times(99, 302), 486), length([])), 475), 142), dec(#1)); seedExpr: 142 }
[S2: EPair(EInt,EInt)]{ seed: (215,443) ; iter: #2; seedExpr: (215,443) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: #2; seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, bitShift(#1, length(prepend((437,9), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(142,284)]), Vector([(142,284),(14530842,29061684)]), Vector([(142,284),(14530842,29061684),(29061542,58123084)]), Vector([(142,284),(14530842,29061684),(29061542,58123084),(43592242,87184484)]), Vector([(142,284),(14530842,29061684),(29061542,58123084),(43592242,87184484),(58122942,116245884)]), Vector([(142,284),(14530842,29061684),(29061542,58123084),(43592242,87184484),(58122942,116245884),(72653642,145307284)]), ...
Diversity: 913
Average Size: 45.78898128898129
Average Fitness: 599274.7180125084
Fitness Variation: 577543.9886809005
Distribution: [] -> 0.114, times -> 0.090, #1 -> 0.082, length -> 0.074, plus -> 0.058, 99 -> 0.058, 302 -> 0.056, 486 -> 0.049, 475 -> 0.038, bitOr -> 0.034
Last fitness increase: 6 generations ago.
------------
[1239.148s]Generation 75
Best Result: (fitness: 1309167.7, performance: 1350908.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: -536870912 ; iter: #1; seedExpr: bitShift(175, 317) }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: (11,41); seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (291,81) ; iter: #2; seedExpr: (291,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, bitShift(#1, length(prepend((437,9), #5))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(14530700,29061400)]), Vector([(0,0),(14530700,29061400),(29061400,58122800)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200),(58122800,116245600)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200),(58122800,116245600),(72653500,145307000)]), ...
Diversity: 910
Average Size: 41.84407484407485
Average Fitness: 629340.9523134048
Fitness Variation: 606674.4079473532
Distribution: [] -> 0.121, #1 -> 0.088, times -> 0.086, length -> 0.077, plus -> 0.058, 99 -> 0.054, 302 -> 0.053, 486 -> 0.047, prepend -> 0.037, 475 -> 0.035
Last fitness increase: 7 generations ago.
------------
[1258.141s]Generation 76
Best Result: (fitness: 1309167.7, performance: 1350908.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: mkPair(164, #1); seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: #2; seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(#1, bitShift(#1, length(prepend((459,102), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(14530700,29061400)]), Vector([(0,0),(14530700,29061400),(29061400,58122800)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200),(58122800,116245600)]), Vector([(0,0),(14530700,29061400),(29061400,58122800),(43592100,87184200),(58122800,116245600),(72653500,145307000)]), ...
Diversity: 897
Average Size: 39.44178794178794
Average Fitness: 626461.4101395785
Fitness Variation: 604929.0354480238
Distribution: [] -> 0.124, #1 -> 0.093, times -> 0.088, length -> 0.080, plus -> 0.059, 99 -> 0.054, 302 -> 0.053, 486 -> 0.048, prepend -> 0.039, 475 -> 0.036
Last fitness increase: 0 generations ago.
------------
[1276.870s]Generation 77
Best Result: (fitness: 1625892.7, performance: 1799408.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(plus(times(times(99, 302), 486), length([])), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: (26,84); seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: #2; seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, length(prepend(#2, []))), bitShift(#1, length(prepend((437,9), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(29061400,29061400)]), Vector([(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600),(145307000,145307000)]), ...
Diversity: 900
Average Size: 38.57068607068607
Average Fitness: 608007.4354961117
Fitness Variation: 611455.888089249
Distribution: [] -> 0.124, #1 -> 0.093, times -> 0.089, length -> 0.079, plus -> 0.059, 99 -> 0.054, 302 -> 0.054, 486 -> 0.048, prepend -> 0.040, 475 -> 0.035
Last fitness increase: 1 generations ago.
------------
[1295.624s]Generation 78
Best Result: (fitness: 1625892.7, performance: 1799408.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(plus(times(times(99, 302), 486), length([])), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: (26,84); seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: (50,417); seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, length(prepend(#2, []))), bitShift(#1, length(prepend((437,9), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(29061400,29061400)]), Vector([(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600),(145307000,145307000)]), ...
Diversity: 905
Average Size: 38.21829521829522
Average Fitness: 586001.9406210769
Fitness Variation: 608857.6553856687
Distribution: [] -> 0.118, #1 -> 0.097, times -> 0.089, length -> 0.075, plus -> 0.058, 302 -> 0.054, 99 -> 0.054, 486 -> 0.048, prepend -> 0.042, 475 -> 0.035
Last fitness increase: 2 generations ago.
------------
[1314.908s]Generation 79
Best Result: (fitness: 1625892.7, performance: 1799408.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(plus(times(times(99, 302), 486), length([])), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: (26,84); seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: (478,45); seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, length(prepend(#2, []))), bitShift(#1, length(prepend((437,9), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(29061400,29061400)]), Vector([(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600),(145307000,145307000)]), ...
Diversity: 901
Average Size: 38.39085239085239
Average Fitness: 628460.6540444824
Fitness Variation: 620665.5428778165
Distribution: [] -> 0.104, #1 -> 0.099, times -> 0.085, length -> 0.065, 302 -> 0.053, 99 -> 0.052, plus -> 0.052, 486 -> 0.045, prepend -> 0.045, (437,9) -> 0.036
Last fitness increase: 3 generations ago.
------------
[1334.620s]Generation 80
Best Result: (fitness: 1625892.7, performance: 1799408.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(plus(times(times(99, 302), 486), length([])), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: (26,84); seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: #3; seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, length(prepend(#2, []))), bitShift(#1, length(prepend((437,9), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(29061400,29061400)]), Vector([(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600),(145307000,145307000)]), ...
Diversity: 918
Average Size: 40.38773388773389
Average Fitness: 663499.7592901621
Fitness Variation: 635174.8755448227
Distribution: #1 -> 0.098, [] -> 0.089, times -> 0.085, length -> 0.057, 302 -> 0.053, 99 -> 0.052, prepend -> 0.046, 486 -> 0.044, plus -> 0.044, (437,9) -> 0.036
Last fitness increase: 4 generations ago.
------------
[1354.273s]Generation 81
Best Result: (fitness: 1625892.7, performance: 1799408.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(plus(times(times(99, 302), 486), length([])), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: (26,84); seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (437,9) ; iter: #3; seedExpr: (437,9) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, length(prepend(#2, []))), bitShift(#1, length(prepend((437,9), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(29061400,29061400)]), Vector([(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600),(145307000,145307000)]), ...
Diversity: 910
Average Size: 42.58316008316008
Average Fitness: 722140.3853882732
Fitness Variation: 665514.0772651146
Distribution: [] -> 0.099, #1 -> 0.096, times -> 0.078, length -> 0.060, prepend -> 0.050, 302 -> 0.049, 99 -> 0.048, 486 -> 0.041, plus -> 0.036, bitShift -> 0.036
Last fitness increase: 5 generations ago.
------------
[1373.669s]Generation 82
Best Result: (fitness: 1625892.7, performance: 1799408.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(plus(times(times(99, 302), 486), length([])), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (315,13) ; iter: (26,84); seedExpr: (315,13) }
[S3: EPair(EInt,EInt)]{ seed: (437,9) ; iter: #3; seedExpr: (437,9) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, length(prepend(#2, []))), bitShift(#1, length(prepend((437,9), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(29061400,29061400)]), Vector([(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600),(145307000,145307000)]), ...
Diversity: 910
Average Size: 45.984407484407484
Average Fitness: 811554.3189825795
Fitness Variation: 716712.7785156216
Distribution: [] -> 0.128, #1 -> 0.087, length -> 0.072, times -> 0.070, prepend -> 0.056, 99 -> 0.044, 302 -> 0.044, plus -> 0.040, (437,9) -> 0.039, 486 -> 0.037
Last fitness increase: 0 generations ago.
------------
[1393.276s]Generation 83
Best Result: (fitness: 1675145.3, performance: 1799408.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (26,84); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: (301,22); seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, length(prepend(#2, []))), bitShift(#1, length(prepend((34,273), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(29061400,29061400)]), Vector([(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600),(145307000,145307000)]), ...
Diversity: 896
Average Size: 47.29313929313929
Average Fitness: 855605.9210988414
Fitness Variation: 758278.7649822057
Distribution: [] -> 0.146, length -> 0.084, #1 -> 0.082, times -> 0.068, prepend -> 0.062, plus -> 0.044, (437,9) -> 0.042, 99 -> 0.042, 302 -> 0.042, bitShift -> 0.039
Last fitness increase: 1 generations ago.
------------
[1411.697s]Generation 84
Best Result: (fitness: 1675145.3, performance: 1799408.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (26,84); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: (301,22); seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, length(prepend(#2, []))), bitShift(#1, length(prepend((34,273), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(29061400,29061400)]), Vector([(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600),(145307000,145307000)]), ...
Diversity: 886
Average Size: 44.93139293139293
Average Fitness: 834632.3729059795
Fitness Variation: 764064.8056106549
Distribution: [] -> 0.150, length -> 0.090, #1 -> 0.083, times -> 0.073, prepend -> 0.066, plus -> 0.048, 99 -> 0.045, 302 -> 0.045, bitShift -> 0.040, (437,9) -> 0.040
Last fitness increase: 2 generations ago.
------------
[1430.989s]Generation 85
Best Result: (fitness: 1675145.3, performance: 1799408.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (26,84); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: (26,84); seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, length(prepend(#2, []))), bitShift(#1, length(prepend((34,273), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(29061400,29061400)]), Vector([(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600),(145307000,145307000)]), ...
Diversity: 899
Average Size: 43.88461538461539
Average Fitness: 809168.4279611924
Fitness Variation: 763204.1925103137
Distribution: [] -> 0.150, length -> 0.090, #1 -> 0.084, times -> 0.072, prepend -> 0.067, plus -> 0.047, 302 -> 0.045, 99 -> 0.044, bitShift -> 0.041, (437,9) -> 0.040
Last fitness increase: 3 generations ago.
------------
[1450.277s]Generation 86
Best Result: (fitness: 1675145.3, performance: 1799408.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (26,84); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (174,359) ; iter: (301,22); seedExpr: (174,359) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, length(prepend(#2, []))), bitShift(#1, length(prepend((34,273), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(29061400,29061400)]), Vector([(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600),(145307000,145307000)]), ...
Diversity: 896
Average Size: 43.37733887733888
Average Fitness: 800368.4027524213
Fitness Variation: 767348.5943393395
Distribution: [] -> 0.146, length -> 0.088, #1 -> 0.085, times -> 0.072, prepend -> 0.069, 302 -> 0.045, plus -> 0.044, 99 -> 0.044, bitShift -> 0.043, 486 -> 0.039
Last fitness increase: 4 generations ago.
------------
[1469.331s]Generation 87
Best Result: (fitness: 1675145.3, performance: 1799408.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (26,84); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: (26,84); seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, length(prepend(#2, []))), bitShift(#1, length(prepend((315,13), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(29061400,29061400)]), Vector([(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600),(145307000,145307000)]), ...
Diversity: 903
Average Size: 43.25675675675676
Average Fitness: 784894.7635924418
Fitness Variation: 774026.4322842829
Distribution: [] -> 0.136, #1 -> 0.086, length -> 0.081, prepend -> 0.071, times -> 0.070, bitShift -> 0.044, 302 -> 0.044, 99 -> 0.043, 486 -> 0.038, plus -> 0.038
Last fitness increase: 0 generations ago.
------------
[1488.745s]Generation 88
Best Result: (fitness: 1695576.1, performance: 1799408.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: #2; seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: (26,84); seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, length(prepend(#2, []))), bitShift(#1, inc(length(#5))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(29061400,29061400)]), Vector([(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600),(145307000,145307000)]), ...
Diversity: 907
Average Size: 43.13409563409564
Average Fitness: 797234.1858211809
Fitness Variation: 784831.1302477496
Distribution: [] -> 0.125, #1 -> 0.090, length -> 0.073, prepend -> 0.072, times -> 0.070, 302 -> 0.045, bitShift -> 0.044, 99 -> 0.044, 486 -> 0.039, #2 -> 0.032
Last fitness increase: 0 generations ago.
------------
[1508.196s]Generation 89
Best Result: (fitness: 1708648.5, performance: 1799408.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 302 ; iter: #1; seedExpr: 302 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (26,84); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: (26,84); seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, length(#5)), bitShift(#1, length(prepend((459,102), []))))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: prepend(mkPair(117, length([])), []); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(29061400,29061400)]), Vector([(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600),(145307000,145307000)]), ...
Diversity: 901
Average Size: 42.26195426195426
Average Fitness: 787204.6530852182
Fitness Variation: 783893.1725442685
Distribution: [] -> 0.121, #1 -> 0.093, prepend -> 0.075, length -> 0.069, times -> 0.068, bitShift -> 0.047, 302 -> 0.045, 99 -> 0.044, 486 -> 0.038, #2 -> 0.035
Last fitness increase: 0 generations ago.
------------
[1527.743s]Generation 90
Best Result: (fitness: 1725694.0, performance: 1799408.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (26,84); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: (26,84); seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, length(prepend((26,84), []))), bitShift(#1, 385))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(29061400,29061400)]), Vector([(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600),(145307000,145307000)]), ...
Diversity: 911
Average Size: 41.21413721413722
Average Fitness: 802024.3344761997
Fitness Variation: 788896.8874264386
Distribution: [] -> 0.120, #1 -> 0.096, prepend -> 0.076, times -> 0.070, length -> 0.069, bitShift -> 0.048, 302 -> 0.047, 99 -> 0.045, 486 -> 0.039, #2 -> 0.036
Last fitness increase: 1 generations ago.
------------
[1547.371s]Generation 91
Best Result: (fitness: 1725694.0, performance: 1799408.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (26,84); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: (26,84); seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, length(prepend((26,84), []))), bitShift(#1, 385))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(29061400,29061400)]), Vector([(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600),(145307000,145307000)]), ...
Diversity: 905
Average Size: 40.36694386694387
Average Fitness: 868264.3425048435
Fitness Variation: 788653.374472388
Distribution: [] -> 0.123, #1 -> 0.097, prepend -> 0.075, times -> 0.071, length -> 0.071, bitShift -> 0.049, 302 -> 0.047, 99 -> 0.046, 486 -> 0.039, #2 -> 0.034
Last fitness increase: 0 generations ago.
------------
[1566.711s]Generation 92
Best Result: (fitness: 1727370.8, performance: 1799408.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 302 ; iter: #1; seedExpr: 302 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (26,84); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: (174,359); seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, length(#5)), bitShift(#1, length(#5)))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: prepend(mkPair(117, length(concat(#5, #5))), []); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(29061400,29061400)]), Vector([(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600),(145307000,145307000)]), ...
Diversity: 905
Average Size: 39.773388773388774
Average Fitness: 785910.3897220298
Fitness Variation: 793330.71605715
Distribution: [] -> 0.121, #1 -> 0.099, times -> 0.071, prepend -> 0.070, length -> 0.069, bitShift -> 0.049, 302 -> 0.049, 99 -> 0.046, 486 -> 0.039, #2 -> 0.035
Last fitness increase: 1 generations ago.
------------
[1586.318s]Generation 93
Best Result: (fitness: 1727370.8, performance: 1799408.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 302 ; iter: #1; seedExpr: 302 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (26,84); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: (174,359); seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, length(#5)), bitShift(#1, length(#5)))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: prepend(mkPair(117, length(concat(#5, #5))), []); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(29061400,29061400)]), Vector([(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600),(145307000,145307000)]), ...
Diversity: 902
Average Size: 40.71205821205821
Average Fitness: 831706.6605705665
Fitness Variation: 793681.862821979
Distribution: [] -> 0.116, #1 -> 0.099, times -> 0.071, length -> 0.069, prepend -> 0.063, 302 -> 0.052, bitShift -> 0.048, 99 -> 0.046, 486 -> 0.040, 475 -> 0.032
Last fitness increase: 0 generations ago.
------------
[1606.183s]Generation 94
Best Result: (fitness: 1739274.5, performance: 1799408.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: mkPair(bitXor(302, length(prepend(#3, #5))), 302); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (71,302) ; iter: (301,22); seedExpr: mkPair(bitXor(302, 361), 302) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, 353), bitShift(#1, 353))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(29061400,29061400)]), Vector([(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600),(145307000,145307000)]), ...
Diversity: 919
Average Size: 42.50519750519751
Average Fitness: 915852.9700598327
Fitness Variation: 803569.9737406608
Distribution: [] -> 0.108, #1 -> 0.098, times -> 0.070, length -> 0.065, 302 -> 0.059, prepend -> 0.053, bitShift -> 0.047, 99 -> 0.045, 486 -> 0.038, 475 -> 0.031
Last fitness increase: 1 generations ago.
------------
[1624.891s]Generation 95
Best Result: (fitness: 1739274.5, performance: 1799408.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: mkPair(bitXor(302, length(prepend(#3, #5))), 302); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (71,302) ; iter: (301,22); seedExpr: mkPair(bitXor(302, 361), 302) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, 353), bitShift(#1, 353))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(0,0)]), Vector([(0,0),(29061400,29061400)]), Vector([(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), Vector([(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600),(145307000,145307000)]), ...
Diversity: 906
Average Size: 43.768191268191266
Average Fitness: 913235.9812575073
Fitness Variation: 817900.8718624455
Distribution: #1 -> 0.098, [] -> 0.097, times -> 0.072, 302 -> 0.071, length -> 0.057, bitShift -> 0.048, 99 -> 0.047, prepend -> 0.043, 486 -> 0.039, mkPair -> 0.033
Last fitness increase: 0 generations ago.
------------
[1644.166s]Generation 96
Best Result: (fitness: 1750622.5, performance: 1799408.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 262 ; iter: #1; seedExpr: 262 }
[S1: EInt]{ seed: 373 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 373 }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (26,84); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: (26,84); seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, 385), bitShift(#1, 385))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(746,746)]), Vector([(746,746),(29062146,29062146)]), Vector([(746,746),(29062146,29062146),(58123546,58123546)]), Vector([(746,746),(29062146,29062146),(58123546,58123546),(87184946,87184946)]), Vector([(746,746),(29062146,29062146),(58123546,58123546),(87184946,87184946),(116246346,116246346)]), Vector([(746,746),(29062146,29062146),(58123546,58123546),(87184946,87184946),(116246346,116246346),(145307746,145307746)]), ...
Diversity: 906
Average Size: 43.20582120582121
Average Fitness: 907327.9947102432
Fitness Variation: 825134.6447838317
Distribution: #1 -> 0.101, [] -> 0.089, 302 -> 0.074, times -> 0.070, length -> 0.055, bitShift -> 0.049, 99 -> 0.046, 486 -> 0.038, prepend -> 0.038, mkPair -> 0.035
Last fitness increase: 1 generations ago.
------------
[1663.314s]Generation 97
Best Result: (fitness: 1750622.5, performance: 1799408.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 262 ; iter: #1; seedExpr: 262 }
[S1: EInt]{ seed: 373 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 373 }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (26,84); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: (26,84); seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, 385), bitShift(#1, 385))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(746,746)]), Vector([(746,746),(29062146,29062146)]), Vector([(746,746),(29062146,29062146),(58123546,58123546)]), Vector([(746,746),(29062146,29062146),(58123546,58123546),(87184946,87184946)]), Vector([(746,746),(29062146,29062146),(58123546,58123546),(87184946,87184946),(116246346,116246346)]), Vector([(746,746),(29062146,29062146),(58123546,58123546),(87184946,87184946),(116246346,116246346),(145307746,145307746)]), ...
Diversity: 899
Average Size: 42.5
Average Fitness: 902144.0312194447
Fitness Variation: 824416.3413823354
Distribution: #1 -> 0.103, [] -> 0.080, times -> 0.075, 302 -> 0.072, length -> 0.059, #5 -> 0.050, bitShift -> 0.049, 99 -> 0.049, 486 -> 0.041, 475 -> 0.034
Last fitness increase: 2 generations ago.
------------
[1682.634s]Generation 98
Best Result: (fitness: 1750622.5, performance: 1799408.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 262 ; iter: #1; seedExpr: 262 }
[S1: EInt]{ seed: 373 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 373 }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (26,84); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: (26,84); seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, 385), bitShift(#1, 385))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(746,746)]), Vector([(746,746),(29062146,29062146)]), Vector([(746,746),(29062146,29062146),(58123546,58123546)]), Vector([(746,746),(29062146,29062146),(58123546,58123546),(87184946,87184946)]), Vector([(746,746),(29062146,29062146),(58123546,58123546),(87184946,87184946),(116246346,116246346)]), Vector([(746,746),(29062146,29062146),(58123546,58123546),(87184946,87184946),(116246346,116246346),(145307746,145307746)]), ...
Diversity: 909
Average Size: 41.84095634095634
Average Fitness: 824762.8722001333
Fitness Variation: 824451.4392141692
Distribution: #1 -> 0.108, times -> 0.075, 302 -> 0.071, [] -> 0.071, length -> 0.061, #5 -> 0.059, bitShift -> 0.051, 99 -> 0.048, 486 -> 0.041, 475 -> 0.034
Last fitness increase: 3 generations ago.
------------
[1701.946s]Generation 99
Best Result: (fitness: 1750622.5, performance: 1799408.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 262 ; iter: #1; seedExpr: 262 }
[S1: EInt]{ seed: 385 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 385 }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (26,84); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: (26,84); seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, 385), bitShift(#1, 385))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(770,770)]), Vector([(770,770),(29062170,29062170)]), Vector([(770,770),(29062170,29062170),(58123570,58123570)]), Vector([(770,770),(29062170,29062170),(58123570,58123570),(87184970,87184970)]), Vector([(770,770),(29062170,29062170),(58123570,58123570),(87184970,87184970),(116246370,116246370)]), Vector([(770,770),(29062170,29062170),(58123570,58123570),(87184970,87184970),(116246370,116246370),(145307770,145307770)]), ...
Diversity: 910
Average Size: 42.21725571725572
Average Fitness: 935026.237061959
Fitness Variation: 828987.2832549128
Distribution: #1 -> 0.110, 302 -> 0.083, times -> 0.077, [] -> 0.063, bitShift -> 0.053, length -> 0.051, 99 -> 0.050, #5 -> 0.048, 486 -> 0.042, 475 -> 0.035
Last fitness increase: 4 generations ago.
------------
[1720.563s]Generation 100
Best Result: (fitness: 1750622.5, performance: 1799408.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 262 ; iter: #0; seedExpr: 262 }
[S1: EInt]{ seed: 373 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 373 }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (37,94); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (50,417) ; iter: (26,84); seedExpr: (50,417) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, mkPair(bitShift(#1, 385), bitShift(#1, 385))); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(746,746)]), Vector([(746,746),(29062146,29062146)]), Vector([(746,746),(29062146,29062146),(58123546,58123546)]), Vector([(746,746),(29062146,29062146),(58123546,58123546),(87184946,87184946)]), Vector([(746,746),(29062146,29062146),(58123546,58123546),(87184946,87184946),(116246346,116246346)]), Vector([(746,746),(29062146,29062146),(58123546,58123546),(87184946,87184946),(116246346,116246346),(145307746,145307746)]), ...
Diversity: 890
Average Size: 41.62266112266112
Average Fitness: 966315.4265035088
Fitness Variation: 841909.1427068212
Distribution: #1 -> 0.115, 302 -> 0.094, times -> 0.079, [] -> 0.058, 353 -> 0.056, bitShift -> 0.055, 99 -> 0.051, 486 -> 0.043, 475 -> 0.036, mkPair -> 0.034
Last fitness increase: 0 generations ago.
------------
[1739.538s]Generation 101
Best Result: (fitness: 1751601.3, performance: 1793426.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(26,84)]), Vector([(26,84),(0,0)]), Vector([(26,84),(0,0),(29061400,29061400)]), Vector([(26,84),(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(26,84),(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(26,84),(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), ...
Diversity: 895
Average Size: 40.2972972972973
Average Fitness: 943188.1826808652
Fitness Variation: 840076.9714044979
Distribution: #1 -> 0.120, 302 -> 0.099, times -> 0.084, 353 -> 0.066, bitShift -> 0.057, [] -> 0.054, 99 -> 0.054, 486 -> 0.046, 475 -> 0.037, mkPair -> 0.036
Last fitness increase: 1 generations ago.
------------
[1759.543s]Generation 102
Best Result: (fitness: 1751601.3, performance: 1793426.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 0 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: length([]) }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(26,84)]), Vector([(26,84),(0,0)]), Vector([(26,84),(0,0),(29061400,29061400)]), Vector([(26,84),(0,0),(29061400,29061400),(58122800,58122800)]), Vector([(26,84),(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200)]), Vector([(26,84),(0,0),(29061400,29061400),(58122800,58122800),(87184200,87184200),(116245600,116245600)]), ...
Diversity: 910
Average Size: 38.24220374220374
Average Fitness: 886466.0885759942
Fitness Variation: 844953.7907389889
Distribution: #1 -> 0.128, 302 -> 0.090, times -> 0.087, 353 -> 0.064, bitShift -> 0.060, 99 -> 0.056, [] -> 0.051, 486 -> 0.048, 475 -> 0.040, mkPair -> 0.035
Last fitness increase: 0 generations ago.
------------
[1778.963s]Generation 103
Best Result: (fitness: 1751793.1, performance: 1793426.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 187 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 187 }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(26,84)]), Vector([(26,84),(374,374)]), Vector([(26,84),(374,374),(29061774,29061774)]), Vector([(26,84),(374,374),(29061774,29061774),(58123174,58123174)]), Vector([(26,84),(374,374),(29061774,29061774),(58123174,58123174),(87184574,87184574)]), Vector([(26,84),(374,374),(29061774,29061774),(58123174,58123174),(87184574,87184574),(116245974,116245974)]), ...
Diversity: 907
Average Size: 36.771309771309774
Average Fitness: 867318.840160968
Fitness Variation: 840219.7672900442
Distribution: #1 -> 0.128, times -> 0.092, 302 -> 0.081, bitShift -> 0.061, 99 -> 0.060, 353 -> 0.058, 486 -> 0.052, [] -> 0.049, 475 -> 0.041, #4 -> 0.035
Last fitness increase: 1 generations ago.
------------
[1799.066s]Generation 104
Best Result: (fitness: 1751793.1, performance: 1793426.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 187 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 187 }
[S2: EPair(EInt,EInt)]{ seed: (22,93) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (22,93) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(22,93)]), Vector([(22,93),(374,374)]), Vector([(22,93),(374,374),(29061774,29061774)]), Vector([(22,93),(374,374),(29061774,29061774),(58123174,58123174)]), Vector([(22,93),(374,374),(29061774,29061774),(58123174,58123174),(87184574,87184574)]), Vector([(22,93),(374,374),(29061774,29061774),(58123174,58123174),(87184574,87184574),(116245974,116245974)]), ...
Diversity: 904
Average Size: 35.57588357588357
Average Fitness: 776494.5771737037
Fitness Variation: 832125.2329485585
Distribution: #1 -> 0.128, times -> 0.095, 302 -> 0.074, bitShift -> 0.062, 99 -> 0.061, 486 -> 0.052, 353 -> 0.052, [] -> 0.051, 475 -> 0.042, #4 -> 0.036
Last fitness increase: 2 generations ago.
------------
[1818.369s]Generation 105
Best Result: (fitness: 1751793.1, performance: 1793426.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 142 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 142 }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(26,84)]), Vector([(26,84),(284,284)]), Vector([(26,84),(284,284),(29061684,29061684)]), Vector([(26,84),(284,284),(29061684,29061684),(58123084,58123084)]), Vector([(26,84),(284,284),(29061684,29061684),(58123084,58123084),(87184484,87184484)]), Vector([(26,84),(284,284),(29061684,29061684),(58123084,58123084),(87184484,87184484),(116245884,116245884)]), ...
Diversity: 884
Average Size: 34.95841995841996
Average Fitness: 812846.7283903452
Fitness Variation: 835699.3491391093
Distribution: #1 -> 0.132, times -> 0.098, 302 -> 0.070, bitShift -> 0.064, 99 -> 0.063, 486 -> 0.054, [] -> 0.048, 353 -> 0.044, 475 -> 0.041, 385 -> 0.039
Last fitness increase: 3 generations ago.
------------
[1837.363s]Generation 106
Best Result: (fitness: 1751793.1, performance: 1793426.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 187 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 187 }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (37,94) ; iter: (301,22); seedExpr: (37,94) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(26,84)]), Vector([(26,84),(374,374)]), Vector([(26,84),(374,374),(29061774,29061774)]), Vector([(26,84),(374,374),(29061774,29061774),(58123174,58123174)]), Vector([(26,84),(374,374),(29061774,29061774),(58123174,58123174),(87184574,87184574)]), Vector([(26,84),(374,374),(29061774,29061774),(58123174,58123174),(87184574,87184574),(116245974,116245974)]), ...
Diversity: 879
Average Size: 33.83575883575884
Average Fitness: 782024.3397750756
Fitness Variation: 837172.1913846291
Distribution: #1 -> 0.134, times -> 0.098, 302 -> 0.065, bitShift -> 0.064, 99 -> 0.062, 486 -> 0.054, 385 -> 0.050, [] -> 0.044, 475 -> 0.041, #4 -> 0.038
Last fitness increase: 4 generations ago.
------------
[1857.113s]Generation 107
Best Result: (fitness: 1751793.1, performance: 1793426.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: 169; seedExpr: 402 }
[S1: EInt]{ seed: 142 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 142 }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(26,84)]), Vector([(26,84),(284,284)]), Vector([(26,84),(284,284),(29061684,29061684)]), Vector([(26,84),(284,284),(29061684,29061684),(58123084,58123084)]), Vector([(26,84),(284,284),(29061684,29061684),(58123084,58123084),(87184484,87184484)]), Vector([(26,84),(284,284),(29061684,29061684),(58123084,58123084),(87184484,87184484),(116245884,116245884)]), ...
Diversity: 896
Average Size: 33.764033264033266
Average Fitness: 797649.7684294872
Fitness Variation: 837676.3211448553
Distribution: #1 -> 0.131, times -> 0.100, 302 -> 0.065, 99 -> 0.063, bitShift -> 0.063, 486 -> 0.055, 385 -> 0.052, [] -> 0.044, 475 -> 0.041, #4 -> 0.039
Last fitness increase: 5 generations ago.
------------
[1876.301s]Generation 108
Best Result: (fitness: 1751793.1, performance: 1793426.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 402 ; iter: #1; seedExpr: 402 }
[S1: EInt]{ seed: 187 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 187 }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: mkPair(bitShift(#1, 385), bitShift(#1, 385)); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (37,94) ; iter: (301,22); seedExpr: (37,94) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(26,84)]), Vector([(26,84),(374,374)]), Vector([(26,84),(374,374),(29061774,29061774)]), Vector([(26,84),(374,374),(29061774,29061774),(58123174,58123174)]), Vector([(26,84),(374,374),(29061774,29061774),(58123174,58123174),(87184574,87184574)]), Vector([(26,84),(374,374),(29061774,29061774),(58123174,58123174),(87184574,87184574),(116245974,116245974)]), ...
Diversity: 897
Average Size: 33.695426195426194
Average Fitness: 762022.0213240206
Fitness Variation: 831203.8309100629
Distribution: #1 -> 0.133, times -> 0.098, 302 -> 0.063, 99 -> 0.062, bitShift -> 0.060, 486 -> 0.054, 385 -> 0.045, [] -> 0.044, 475 -> 0.041, #4 -> 0.038
Last fitness increase: 6 generations ago.
------------
[1895.119s]Generation 109
Best Result: (fitness: 1751793.1, performance: 1793426.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 353 ; iter: #1; seedExpr: 353 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(26,84)]), Vector([(26,84),(950,950)]), Vector([(26,84),(950,950),(29062350,29062350)]), Vector([(26,84),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(26,84),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(26,84),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 886
Average Size: 33.899168399168396
Average Fitness: 767618.9608408709
Fitness Variation: 836256.3409355532
Distribution: #1 -> 0.126, times -> 0.101, 302 -> 0.066, 99 -> 0.064, bitShift -> 0.057, 486 -> 0.055, 353 -> 0.049, [] -> 0.048, 475 -> 0.044, #4 -> 0.039
Last fitness increase: 7 generations ago.
------------
[1913.797s]Generation 110
Best Result: (fitness: 1751793.1, performance: 1793426.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 8 ; iter: #1; seedExpr: 8 }
[S1: EInt]{ seed: 142 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 142 }
[S2: EPair(EInt,EInt)]{ seed: (26,84) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (26,84) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(26,84)]), Vector([(26,84),(284,284)]), Vector([(26,84),(284,284),(29061684,29061684)]), Vector([(26,84),(284,284),(29061684,29061684),(58123084,58123084)]), Vector([(26,84),(284,284),(29061684,29061684),(58123084,58123084),(87184484,87184484)]), Vector([(26,84),(284,284),(29061684,29061684),(58123084,58123084),(87184484,87184484),(116245884,116245884)]), ...
Diversity: 893
Average Size: 33.74220374220374
Average Fitness: 709084.5259172438
Fitness Variation: 822316.1200361262
Distribution: #1 -> 0.127, times -> 0.102, 99 -> 0.065, 302 -> 0.065, 353 -> 0.060, 486 -> 0.056, bitShift -> 0.053, [] -> 0.051, 475 -> 0.045, #4 -> 0.039
Last fitness increase: 0 generations ago.
------------
[1932.086s]Generation 111
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 199 ; iter: #1; seedExpr: 199 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 884
Average Size: 33.735966735966734
Average Fitness: 775121.8991001968
Fitness Variation: 826026.6600807084
Distribution: #1 -> 0.125, times -> 0.102, 302 -> 0.066, 353 -> 0.065, 99 -> 0.064, 486 -> 0.056, [] -> 0.053, bitShift -> 0.052, 475 -> 0.047, #4 -> 0.039
Last fitness increase: 1 generations ago.
------------
[1951.106s]Generation 112
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 199 ; iter: #1; seedExpr: 199 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 893
Average Size: 33.644490644490645
Average Fitness: 731469.8505087085
Fitness Variation: 820657.6960138509
Distribution: #1 -> 0.122, times -> 0.104, 353 -> 0.068, 99 -> 0.066, 302 -> 0.066, 486 -> 0.057, bitShift -> 0.050, 475 -> 0.049, [] -> 0.049, #4 -> 0.040
Last fitness increase: 2 generations ago.
------------
[1970.075s]Generation 113
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 199 ; iter: #1; seedExpr: 199 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 895
Average Size: 33.56029106029106
Average Fitness: 748884.5089880037
Fitness Variation: 828315.7591419689
Distribution: #1 -> 0.121, times -> 0.104, 353 -> 0.072, 99 -> 0.068, 302 -> 0.067, 486 -> 0.057, 475 -> 0.051, bitShift -> 0.049, [] -> 0.048, #4 -> 0.039
Last fitness increase: 3 generations ago.
------------
[1989.462s]Generation 114
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 470 ; iter: #1; seedExpr: 470 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 921
Average Size: 33.21309771309771
Average Fitness: 714558.0736776305
Fitness Variation: 820412.8479978488
Distribution: #1 -> 0.124, times -> 0.105, 353 -> 0.073, 99 -> 0.068, 302 -> 0.066, 486 -> 0.058, 475 -> 0.050, bitShift -> 0.049, [] -> 0.047, #4 -> 0.040
Last fitness increase: 4 generations ago.
------------
[2007.908s]Generation 115
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 353 ; iter: 209; seedExpr: 353 }
[S1: EInt]{ seed: 182 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 182 }
[S2: EPair(EInt,EInt)]{ seed: (67,241) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (67,241) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(67,241)]), Vector([(67,241),(364,364)]), Vector([(67,241),(364,364),(29061764,29061764)]), Vector([(67,241),(364,364),(29061764,29061764),(58123164,58123164)]), Vector([(67,241),(364,364),(29061764,29061764),(58123164,58123164),(87184564,87184564)]), Vector([(67,241),(364,364),(29061764,29061764),(58123164,58123164),(87184564,87184564),(116245964,116245964)]), ...
Diversity: 899
Average Size: 33.38357588357589
Average Fitness: 724185.441365657
Fitness Variation: 826094.9414352519
Distribution: #1 -> 0.119, times -> 0.107, 353 -> 0.073, 99 -> 0.069, 302 -> 0.068, 486 -> 0.059, 475 -> 0.051, bitShift -> 0.049, [] -> 0.043, 142 -> 0.039
Last fitness increase: 5 generations ago.
------------
[2026.502s]Generation 116
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 470 ; iter: #1; seedExpr: 470 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 909
Average Size: 33.62681912681913
Average Fitness: 704068.8722044223
Fitness Variation: 820168.9746883722
Distribution: #1 -> 0.119, times -> 0.106, 353 -> 0.072, 99 -> 0.069, 302 -> 0.067, 486 -> 0.059, 475 -> 0.050, bitShift -> 0.049, [] -> 0.045, #4 -> 0.040
Last fitness increase: 6 generations ago.
------------
[2045.632s]Generation 117
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 353 ; iter: 209; seedExpr: 353 }
[S1: EInt]{ seed: 182 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 182 }
[S2: EPair(EInt,EInt)]{ seed: (67,241) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (67,241) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(67,241)]), Vector([(67,241),(364,364)]), Vector([(67,241),(364,364),(29061764,29061764)]), Vector([(67,241),(364,364),(29061764,29061764),(58123164,58123164)]), Vector([(67,241),(364,364),(29061764,29061764),(58123164,58123164),(87184564,87184564)]), Vector([(67,241),(364,364),(29061764,29061764),(58123164,58123164),(87184564,87184564),(116245964,116245964)]), ...
Diversity: 912
Average Size: 33.63721413721414
Average Fitness: 724631.2098515494
Fitness Variation: 830588.4066645626
Distribution: #1 -> 0.121, times -> 0.105, 353 -> 0.072, 302 -> 0.067, 99 -> 0.066, 486 -> 0.058, 475 -> 0.051, bitShift -> 0.049, [] -> 0.045, #4 -> 0.040
Last fitness increase: 7 generations ago.
------------
[2065.208s]Generation 118
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 470 ; iter: #1; seedExpr: 470 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 917
Average Size: 33.33367983367983
Average Fitness: 690996.764689386
Fitness Variation: 820395.1010082227
Distribution: #1 -> 0.121, times -> 0.105, 353 -> 0.073, 99 -> 0.067, 302 -> 0.066, 486 -> 0.057, 475 -> 0.052, bitShift -> 0.049, [] -> 0.044, #4 -> 0.041
Last fitness increase: 8 generations ago.
------------
[2084.208s]Generation 119
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 470 ; iter: #1; seedExpr: 470 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 910
Average Size: 33.471933471933475
Average Fitness: 710500.9726918394
Fitness Variation: 819825.3755457832
Distribution: #1 -> 0.122, times -> 0.106, 353 -> 0.073, 99 -> 0.068, 302 -> 0.067, 486 -> 0.058, 475 -> 0.053, bitShift -> 0.049, [] -> 0.043, #4 -> 0.040
Last fitness increase: 9 generations ago.
------------
[2104.086s]Generation 120
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 470 ; iter: #1; seedExpr: 470 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 903
Average Size: 33.62370062370062
Average Fitness: 738608.6838978064
Fitness Variation: 830864.4667962092
Distribution: #1 -> 0.120, times -> 0.104, 353 -> 0.073, 99 -> 0.067, 302 -> 0.067, 486 -> 0.057, 475 -> 0.054, bitShift -> 0.049, [] -> 0.045, #4 -> 0.041
Last fitness increase: 10 generations ago.
------------
[2123.236s]Generation 121
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: #1; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (5,204) ; iter: (301,22); seedExpr: (5,204) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 899
Average Size: 33.88045738045738
Average Fitness: 742065.2227284898
Fitness Variation: 835128.4919643844
Distribution: #1 -> 0.120, times -> 0.104, 353 -> 0.074, 302 -> 0.068, 99 -> 0.067, 486 -> 0.057, 475 -> 0.055, bitShift -> 0.049, #4 -> 0.041, [] -> 0.041
Last fitness increase: 11 generations ago.
------------
[2142.355s]Generation 122
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: #1; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (105,315) ; iter: (339,27); seedExpr: (105,315) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 895
Average Size: 33.69126819126819
Average Fitness: 712977.8483962924
Fitness Variation: 823310.1039721364
Distribution: #1 -> 0.122, times -> 0.105, 353 -> 0.073, 302 -> 0.068, 99 -> 0.067, 486 -> 0.057, 475 -> 0.057, bitShift -> 0.049, [] -> 0.042, #4 -> 0.041
Last fitness increase: 12 generations ago.
------------
[2161.981s]Generation 123
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 353 ; iter: #1; seedExpr: 353 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (339,27); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 901
Average Size: 33.43035343035343
Average Fitness: 713861.0481428981
Fitness Variation: 832175.9737437845
Distribution: #1 -> 0.121, times -> 0.104, 353 -> 0.075, 302 -> 0.067, 99 -> 0.066, 475 -> 0.057, 486 -> 0.056, bitShift -> 0.050, [] -> 0.044, #4 -> 0.040
Last fitness increase: 13 generations ago.
------------
[2180.226s]Generation 124
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 470 ; iter: #1; seedExpr: 470 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (271,212); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 880
Average Size: 33.58108108108108
Average Fitness: 779445.9674380074
Fitness Variation: 841082.0703310841
Distribution: #1 -> 0.121, times -> 0.106, 353 -> 0.074, 302 -> 0.069, 99 -> 0.068, 475 -> 0.058, 486 -> 0.057, bitShift -> 0.050, [] -> 0.044, #4 -> 0.039
Last fitness increase: 14 generations ago.
------------
[2199.200s]Generation 125
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 470 ; iter: #1; seedExpr: 470 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (339,27) ; iter: (339,27); seedExpr: (339,27) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 894
Average Size: 33.223492723492726
Average Fitness: 730565.4996430709
Fitness Variation: 830741.4957579701
Distribution: #1 -> 0.122, times -> 0.105, 353 -> 0.073, 302 -> 0.068, 99 -> 0.068, 475 -> 0.058, 486 -> 0.057, bitShift -> 0.050, [] -> 0.044, #4 -> 0.040
Last fitness increase: 15 generations ago.
------------
[2217.396s]Generation 126
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 108 ; iter: #1; seedExpr: 108 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (339,27); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 888
Average Size: 33.438669438669436
Average Fitness: 713106.4711341013
Fitness Variation: 825985.4656246762
Distribution: #1 -> 0.122, times -> 0.106, 353 -> 0.072, 99 -> 0.068, 302 -> 0.067, 475 -> 0.059, 486 -> 0.057, bitShift -> 0.050, [] -> 0.045, plus -> 0.039
Last fitness increase: 16 generations ago.
------------
[2236.180s]Generation 127
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 142 ; iter: 294; seedExpr: 142 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: #3; seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 890
Average Size: 33.28274428274428
Average Fitness: 704558.855949729
Fitness Variation: 825719.2573159176
Distribution: #1 -> 0.122, times -> 0.103, 353 -> 0.073, 302 -> 0.066, 99 -> 0.065, 475 -> 0.059, 486 -> 0.056, bitShift -> 0.051, [] -> 0.045, #4 -> 0.039
Last fitness increase: 17 generations ago.
------------
[2254.818s]Generation 128
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 470 ; iter: #1; seedExpr: 470 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (481,422) ; iter: (26,84); seedExpr: (481,422) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 901
Average Size: 33.37110187110187
Average Fitness: 745464.9399800295
Fitness Variation: 830726.0318479445
Distribution: #1 -> 0.123, times -> 0.106, 353 -> 0.071, 99 -> 0.068, 302 -> 0.068, 475 -> 0.059, 486 -> 0.057, bitShift -> 0.050, [] -> 0.043, plus -> 0.039
Last fitness increase: 18 generations ago.
------------
[2273.519s]Generation 129
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 449 ; iter: #1; seedExpr: 449 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (163,62); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 907
Average Size: 33.46361746361746
Average Fitness: 751058.2805833188
Fitness Variation: 829437.7851849485
Distribution: #1 -> 0.121, times -> 0.107, 353 -> 0.069, 99 -> 0.068, 302 -> 0.068, 475 -> 0.060, 486 -> 0.058, bitShift -> 0.049, [] -> 0.044, #4 -> 0.039
Last fitness increase: 19 generations ago.
------------
[2292.076s]Generation 130
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 470 ; iter: 486; seedExpr: 470 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (356,45) ; iter: (26,84); seedExpr: (356,45) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 896
Average Size: 33.396049896049895
Average Fitness: 699708.7176893037
Fitness Variation: 827474.076212781
Distribution: #1 -> 0.123, times -> 0.106, 353 -> 0.071, 302 -> 0.068, 99 -> 0.068, 475 -> 0.058, 486 -> 0.057, bitShift -> 0.050, [] -> 0.043, #4 -> 0.039
Last fitness increase: 20 generations ago.
------------
[2310.420s]Generation 131
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 486 ; iter: #1; seedExpr: 486 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (83,72) ; iter: (301,22); seedExpr: (83,72) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 891
Average Size: 33.4012474012474
Average Fitness: 720843.6673134319
Fitness Variation: 834322.6193592062
Distribution: #1 -> 0.122, times -> 0.106, 353 -> 0.071, 99 -> 0.068, 302 -> 0.068, 475 -> 0.059, 486 -> 0.058, bitShift -> 0.050, [] -> 0.043, #4 -> 0.039
Last fitness increase: 21 generations ago.
------------
[2329.233s]Generation 132
Best Result: (fitness: 1754715.7, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 222 ; iter: 471; seedExpr: 222 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(bitShift(#1, 353), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (326,148) ; iter: (301,22); seedExpr: (326,148) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(950,950)]), Vector([(271,212),(950,950),(29062350,29062350)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150)]), Vector([(271,212),(950,950),(29062350,29062350),(58123750,58123750),(87185150,87185150),(116246550,116246550)]), ...
Diversity: 901
Average Size: 33.187110187110186
Average Fitness: 689963.0927443587
Fitness Variation: 827610.9639214193
Distribution: #1 -> 0.122, times -> 0.105, 353 -> 0.071, 302 -> 0.068, 99 -> 0.067, 475 -> 0.058, 486 -> 0.058, bitShift -> 0.050, [] -> 0.044, #4 -> 0.040
Last fitness increase: 0 generations ago.
------------
[2348.228s]Generation 133
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 39 ; iter: 372; seedExpr: 39 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 915
Average Size: 33.34511434511435
Average Fitness: 651446.3396603424
Fitness Variation: 810204.0670906352
Distribution: #1 -> 0.124, times -> 0.105, 353 -> 0.071, 302 -> 0.067, 99 -> 0.066, 475 -> 0.059, 486 -> 0.057, bitShift -> 0.051, [] -> 0.045, #4 -> 0.039
Last fitness increase: 1 generations ago.
------------
[2366.125s]Generation 134
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 39 ; iter: 372; seedExpr: 39 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 899
Average Size: 33.2972972972973
Average Fitness: 736566.751600956
Fitness Variation: 830115.9913639813
Distribution: #1 -> 0.124, times -> 0.104, 353 -> 0.070, 302 -> 0.067, 99 -> 0.067, 475 -> 0.058, 486 -> 0.057, bitShift -> 0.050, [] -> 0.044, plus -> 0.040
Last fitness increase: 2 generations ago.
------------
[2384.509s]Generation 135
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 39 ; iter: 372; seedExpr: 39 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 901
Average Size: 33.2952182952183
Average Fitness: 700578.5405443158
Fitness Variation: 827164.9248616343
Distribution: #1 -> 0.121, times -> 0.105, 353 -> 0.070, 302 -> 0.068, 99 -> 0.067, 486 -> 0.058, 475 -> 0.058, bitShift -> 0.049, [] -> 0.045, #4 -> 0.039
Last fitness increase: 3 generations ago.
------------
[2402.889s]Generation 136
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 353 ; iter: 372; seedExpr: 353 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 886
Average Size: 33.266112266112266
Average Fitness: 708301.2710425731
Fitness Variation: 823747.873774931
Distribution: #1 -> 0.121, times -> 0.103, 353 -> 0.070, 302 -> 0.067, 99 -> 0.066, 475 -> 0.058, 486 -> 0.057, bitShift -> 0.050, [] -> 0.043, #4 -> 0.040
Last fitness increase: 4 generations ago.
------------
[2421.866s]Generation 137
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 353 ; iter: #0; seedExpr: 353 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 901
Average Size: 33.181912681912685
Average Fitness: 690304.7347512649
Fitness Variation: 819908.6201297289
Distribution: #1 -> 0.121, times -> 0.106, 353 -> 0.071, 99 -> 0.068, 302 -> 0.068, 475 -> 0.059, 486 -> 0.058, bitShift -> 0.049, [] -> 0.041, #4 -> 0.040
Last fitness increase: 5 generations ago.
------------
[2440.944s]Generation 138
Best Result: (fitness: 1756591.1, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 0 ; iter: 372; seedExpr: length([]) }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 909
Average Size: 33.11330561330561
Average Fitness: 680390.4463488025
Fitness Variation: 823269.2588704227
Distribution: #1 -> 0.120, times -> 0.104, 353 -> 0.071, 99 -> 0.068, 302 -> 0.067, 475 -> 0.060, 486 -> 0.057, bitShift -> 0.049, [] -> 0.044, #4 -> 0.040
Last fitness increase: 6 generations ago.
------------
[2459.470s]Generation 139
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: 372; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 895
Average Size: 33.33471933471934
Average Fitness: 712455.3212799883
Fitness Variation: 828395.06537844
Distribution: #1 -> 0.118, times -> 0.103, 353 -> 0.071, 302 -> 0.067, 99 -> 0.066, 475 -> 0.059, 486 -> 0.057, bitShift -> 0.049, [] -> 0.046, #4 -> 0.040
Last fitness increase: 7 generations ago.
------------
[2478.396s]Generation 140
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: 372; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,22); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 898
Average Size: 33.62370062370062
Average Fitness: 755444.0243045539
Fitness Variation: 833181.4809494724
Distribution: #1 -> 0.114, times -> 0.106, 302 -> 0.068, 99 -> 0.068, 353 -> 0.067, 475 -> 0.059, 486 -> 0.057, [] -> 0.047, bitShift -> 0.046, #4 -> 0.039
Last fitness increase: 8 generations ago.
------------
[2496.431s]Generation 141
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 372 ; iter: 372; seedExpr: 372 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (446,124) ; iter: (301,22); seedExpr: (446,124) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 899
Average Size: 33.91580041580042
Average Fitness: 744417.3480793928
Fitness Variation: 834768.5421673174
Distribution: #1 -> 0.108, times -> 0.105, 302 -> 0.068, 99 -> 0.067, 353 -> 0.063, 475 -> 0.060, 486 -> 0.058, [] -> 0.050, bitShift -> 0.043, #4 -> 0.040
Last fitness increase: 9 generations ago.
------------
[2514.971s]Generation 142
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 256 ; iter: #0; seedExpr: 256 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (369,16) ; iter: #2; seedExpr: (369,16) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 897
Average Size: 34.04677754677755
Average Fitness: 767629.7878387853
Fitness Variation: 843708.2907779643
Distribution: times -> 0.104, #1 -> 0.103, 302 -> 0.067, 99 -> 0.067, 475 -> 0.060, 353 -> 0.059, 486 -> 0.058, [] -> 0.052, #2 -> 0.043, plus -> 0.040
Last fitness increase: 10 generations ago.
------------
[2532.557s]Generation 143
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 256 ; iter: #1; seedExpr: 256 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (369,16) ; iter: #2; seedExpr: (369,16) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 898
Average Size: 34.21725571725572
Average Fitness: 729948.3338297233
Fitness Variation: 839790.0371810016
Distribution: times -> 0.103, #1 -> 0.095, 99 -> 0.066, 302 -> 0.066, [] -> 0.059, 475 -> 0.058, 486 -> 0.056, #2 -> 0.051, 353 -> 0.050, plus -> 0.041
Last fitness increase: 11 generations ago.
------------
[2549.977s]Generation 144
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 353 ; iter: 372; seedExpr: 353 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,8); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 901
Average Size: 34.30977130977131
Average Fitness: 748476.2971862734
Fitness Variation: 840163.991462485
Distribution: times -> 0.102, #1 -> 0.089, 99 -> 0.066, 302 -> 0.066, [] -> 0.063, 475 -> 0.059, #2 -> 0.058, 486 -> 0.057, plus -> 0.041, 353 -> 0.041
Last fitness increase: 12 generations ago.
------------
[2567.458s]Generation 145
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 256 ; iter: #1; seedExpr: 256 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (369,16) ; iter: #2; seedExpr: (369,16) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 884
Average Size: 33.767151767151766
Average Fitness: 780126.1905857044
Fitness Variation: 849564.8977765278
Distribution: times -> 0.104, #1 -> 0.086, 99 -> 0.067, 302 -> 0.067, [] -> 0.063, #2 -> 0.063, 475 -> 0.060, 486 -> 0.057, plus -> 0.040, #4 -> 0.039
Last fitness increase: 13 generations ago.
------------
[2584.610s]Generation 146
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 353 ; iter: 372; seedExpr: 353 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (301,22) ; iter: (301,8); seedExpr: (301,22) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 884
Average Size: 33.38669438669439
Average Fitness: 750846.5304437012
Fitness Variation: 848910.0458961568
Distribution: times -> 0.107, #1 -> 0.087, 99 -> 0.068, 302 -> 0.068, #2 -> 0.063, 475 -> 0.061, [] -> 0.060, 486 -> 0.058, plus -> 0.040, #4 -> 0.038
Last fitness increase: 14 generations ago.
------------
[2601.991s]Generation 147
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 430 ; iter: 372; seedExpr: 430 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (26,84); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 875
Average Size: 32.78794178794179
Average Fitness: 704583.331203489
Fitness Variation: 836109.3033714755
Distribution: times -> 0.105, #1 -> 0.088, 99 -> 0.068, 302 -> 0.067, #2 -> 0.065, 475 -> 0.061, 486 -> 0.058, [] -> 0.056, #4 -> 0.041, plus -> 0.040
Last fitness increase: 15 generations ago.
------------
[2619.736s]Generation 148
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 355 ; iter: 372; seedExpr: 355 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (111,127) ; iter: (271,212); seedExpr: (111,127) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 881
Average Size: 32.5031185031185
Average Fitness: 743312.202869839
Fitness Variation: 845322.049563858
Distribution: times -> 0.108, #1 -> 0.087, 302 -> 0.070, 99 -> 0.069, #2 -> 0.067, 475 -> 0.062, 486 -> 0.059, [] -> 0.052, #4 -> 0.041, plus -> 0.040
Last fitness increase: 16 generations ago.
------------
[2637.328s]Generation 149
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 302 ; iter: 475; seedExpr: 302 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (271,212); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 898
Average Size: 32.54781704781705
Average Fitness: 757563.45082332
Fitness Variation: 847453.7128297719
Distribution: times -> 0.109, #1 -> 0.084, 99 -> 0.071, 302 -> 0.070, #2 -> 0.066, 475 -> 0.063, 486 -> 0.060, [] -> 0.052, #4 -> 0.041, plus -> 0.040
Last fitness increase: 17 generations ago.
------------
[2654.745s]Generation 150
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 222 ; iter: 372; seedExpr: 222 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: #2; seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 909
Average Size: 32.262993762993766
Average Fitness: 683518.4292467129
Fitness Variation: 834884.6634942689
Distribution: times -> 0.109, #1 -> 0.085, 302 -> 0.071, 99 -> 0.070, #2 -> 0.068, 475 -> 0.063, 486 -> 0.060, [] -> 0.049, #4 -> 0.041, plus -> 0.040
Last fitness increase: 18 generations ago.
------------
[2673.214s]Generation 151
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: 353; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (301,8) ; iter: #2; seedExpr: (301,8) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 914
Average Size: 32.04365904365904
Average Fitness: 696751.9579526052
Fitness Variation: 835792.5217080549
Distribution: times -> 0.108, #1 -> 0.086, 302 -> 0.070, 99 -> 0.070, #2 -> 0.068, 475 -> 0.062, 486 -> 0.060, [] -> 0.048, #4 -> 0.042, plus -> 0.040
Last fitness increase: 19 generations ago.
------------
[2691.224s]Generation 152
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 302 ; iter: 161; seedExpr: 302 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: #2; seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 901
Average Size: 32.45218295218295
Average Fitness: 741761.9267367632
Fitness Variation: 842259.0025952113
Distribution: times -> 0.110, #1 -> 0.087, 302 -> 0.071, 99 -> 0.069, #2 -> 0.067, 475 -> 0.062, 486 -> 0.061, [] -> 0.045, #4 -> 0.041, plus -> 0.040
Last fitness increase: 20 generations ago.
------------
[2709.109s]Generation 153
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 256 ; iter: 256; seedExpr: 256 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (234,427) ; iter: #2; seedExpr: (234,427) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 911
Average Size: 32.37318087318087
Average Fitness: 685682.5337674392
Fitness Variation: 836294.3626415024
Distribution: times -> 0.109, #1 -> 0.084, 302 -> 0.071, 99 -> 0.070, #2 -> 0.067, 475 -> 0.062, 486 -> 0.060, [] -> 0.046, #4 -> 0.041, plus -> 0.039
Last fitness increase: 21 generations ago.
------------
[2727.645s]Generation 154
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 355 ; iter: 372; seedExpr: 355 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (301,8); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 904
Average Size: 32.41476091476091
Average Fitness: 692703.8024702471
Fitness Variation: 834145.606008199
Distribution: times -> 0.109, #1 -> 0.085, 302 -> 0.070, 99 -> 0.070, #2 -> 0.067, 475 -> 0.063, 486 -> 0.060, [] -> 0.046, #4 -> 0.042, plus -> 0.041
Last fitness increase: 22 generations ago.
------------
[2745.202s]Generation 155
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 471 ; iter: #1; seedExpr: 471 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (369,16) ; iter: (369,16); seedExpr: (369,16) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 892
Average Size: 32.6985446985447
Average Fitness: 702649.3206243579
Fitness Variation: 833386.7331250104
Distribution: times -> 0.108, #1 -> 0.084, 99 -> 0.071, 302 -> 0.069, #2 -> 0.066, 475 -> 0.062, 486 -> 0.060, [] -> 0.046, #4 -> 0.041, plus -> 0.039
Last fitness increase: 23 generations ago.
------------
[2763.047s]Generation 156
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 353 ; iter: 332; seedExpr: 353 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (111,127) ; iter: (111,127); seedExpr: (111,127) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 903
Average Size: 32.12162162162162
Average Fitness: 703656.4455623662
Fitness Variation: 834872.4640264164
Distribution: times -> 0.108, #1 -> 0.087, 302 -> 0.070, 99 -> 0.070, #2 -> 0.068, 475 -> 0.063, 486 -> 0.060, [] -> 0.045, #4 -> 0.043, plus -> 0.039
Last fitness increase: 24 generations ago.
------------
[2781.094s]Generation 157
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 403 ; iter: #0; seedExpr: 403 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (234,427) ; iter: #2; seedExpr: (234,427) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 904
Average Size: 32.314968814968815
Average Fitness: 712652.0347396992
Fitness Variation: 832677.1806765202
Distribution: times -> 0.109, #1 -> 0.087, 302 -> 0.070, 99 -> 0.070, #2 -> 0.067, 475 -> 0.063, 486 -> 0.061, [] -> 0.046, #4 -> 0.042, plus -> 0.039
Last fitness increase: 25 generations ago.
------------
[2799.424s]Generation 158
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 482 ; iter: 372; seedExpr: 482 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (11,443); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 897
Average Size: 32.30873180873181
Average Fitness: 699545.9000162244
Fitness Variation: 837406.2015461698
Distribution: times -> 0.109, #1 -> 0.086, 302 -> 0.071, 99 -> 0.070, #2 -> 0.067, 475 -> 0.064, 486 -> 0.061, [] -> 0.046, #4 -> 0.042, plus -> 0.040
Last fitness increase: 26 generations ago.
------------
[2817.673s]Generation 159
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 301 ; iter: #1; seedExpr: 301 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (155,366) ; iter: (444,283); seedExpr: (155,366) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 891
Average Size: 32.46361746361746
Average Fitness: 719452.8172852765
Fitness Variation: 842030.6049392549
Distribution: times -> 0.109, #1 -> 0.086, 302 -> 0.070, 99 -> 0.069, #2 -> 0.068, 475 -> 0.063, 486 -> 0.060, [] -> 0.046, #4 -> 0.041, plus -> 0.039
Last fitness increase: 27 generations ago.
------------
[2835.955s]Generation 160
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 256 ; iter: #1; seedExpr: 256 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (84,162) ; iter: (111,127); seedExpr: (84,162) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 895
Average Size: 32.025987525987524
Average Fitness: 702972.7886956489
Fitness Variation: 838052.6652357068
Distribution: times -> 0.107, #1 -> 0.089, #2 -> 0.070, 302 -> 0.070, 99 -> 0.068, 475 -> 0.063, 486 -> 0.060, [] -> 0.044, #4 -> 0.043, plus -> 0.039
Last fitness increase: 28 generations ago.
------------
[2854.141s]Generation 161
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 355 ; iter: 372; seedExpr: 355 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (466,466) ; iter: (26,84); seedExpr: (466,466) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 886
Average Size: 32.49584199584199
Average Fitness: 776825.5057897216
Fitness Variation: 849232.8866191031
Distribution: times -> 0.107, #1 -> 0.086, 302 -> 0.070, 99 -> 0.069, #2 -> 0.068, 475 -> 0.063, 486 -> 0.060, [] -> 0.046, #4 -> 0.042, plus -> 0.040
Last fitness increase: 29 generations ago.
------------
[2872.910s]Generation 162
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 159 ; iter: #1; seedExpr: 159 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: (111,127); seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 885
Average Size: 32.08108108108108
Average Fitness: 711166.5603254065
Fitness Variation: 839680.8949715547
Distribution: times -> 0.107, #1 -> 0.089, #2 -> 0.069, 302 -> 0.069, 99 -> 0.067, 475 -> 0.062, 486 -> 0.060, [] -> 0.044, #4 -> 0.043, plus -> 0.040
Last fitness increase: 30 generations ago.
------------
[2891.255s]Generation 163
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 451 ; iter: 475; seedExpr: 451 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 479), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (234,427) ; iter: (26,84); seedExpr: (234,427) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 900
Average Size: 32.14968814968815
Average Fitness: 703694.3430907701
Fitness Variation: 836429.4959578284
Distribution: times -> 0.108, #1 -> 0.089, 302 -> 0.069, #2 -> 0.068, 99 -> 0.068, 475 -> 0.064, 486 -> 0.059, [] -> 0.044, #4 -> 0.042, plus -> 0.041
Last fitness increase: 31 generations ago.
------------
[2908.537s]Generation 164
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 212 ; iter: #1; seedExpr: 212 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (483,373) ; iter: #3; seedExpr: (483,373) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 889
Average Size: 32.435550935550935
Average Fitness: 720058.0296566924
Fitness Variation: 838729.298884769
Distribution: times -> 0.110, #1 -> 0.086, 302 -> 0.071, 99 -> 0.071, #2 -> 0.066, 475 -> 0.064, 486 -> 0.061, [] -> 0.044, #4 -> 0.042, plus -> 0.041
Last fitness increase: 32 generations ago.
------------
[2926.631s]Generation 165
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 266 ; iter: 372; seedExpr: 266 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: (271,212); seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 903
Average Size: 32.3004158004158
Average Fitness: 720469.5989448032
Fitness Variation: 841212.5648615368
Distribution: times -> 0.111, #1 -> 0.085, 302 -> 0.073, 99 -> 0.071, #2 -> 0.066, 475 -> 0.065, 486 -> 0.060, [] -> 0.044, #4 -> 0.042, plus -> 0.040
Last fitness increase: 33 generations ago.
------------
[2944.809s]Generation 166
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 403 ; iter: #0; seedExpr: 403 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (234,427) ; iter: #2; seedExpr: (234,427) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 906
Average Size: 31.95010395010395
Average Fitness: 664455.2666569725
Fitness Variation: 825095.6069530325
Distribution: times -> 0.108, #1 -> 0.088, 302 -> 0.071, 99 -> 0.070, #2 -> 0.066, 475 -> 0.063, 486 -> 0.059, [] -> 0.044, #4 -> 0.042, plus -> 0.040
Last fitness increase: 34 generations ago.
------------
[2962.642s]Generation 167
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 144 ; iter: #0; seedExpr: 144 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (79,97) ; iter: #2; seedExpr: (79,97) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 896
Average Size: 32.23076923076923
Average Fitness: 713891.4126836365
Fitness Variation: 840701.458466814
Distribution: times -> 0.106, #1 -> 0.087, 302 -> 0.070, #2 -> 0.068, 99 -> 0.068, 475 -> 0.061, 486 -> 0.059, [] -> 0.044, #4 -> 0.043, 353 -> 0.040
Last fitness increase: 35 generations ago.
------------
[2981.009s]Generation 168
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 486 ; iter: #0; seedExpr: 486 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (234,427) ; iter: #3; seedExpr: (234,427) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 902
Average Size: 32.25883575883576
Average Fitness: 692249.7768101542
Fitness Variation: 837068.399802961
Distribution: times -> 0.110, #1 -> 0.085, 302 -> 0.072, 99 -> 0.072, #2 -> 0.068, 475 -> 0.063, 486 -> 0.060, #4 -> 0.043, [] -> 0.041, plus -> 0.040
Last fitness increase: 36 generations ago.
------------
[2998.828s]Generation 169
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 355 ; iter: 372; seedExpr: 355 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 885
Average Size: 32.04781704781705
Average Fitness: 702806.05840975
Fitness Variation: 840245.4408050843
Distribution: times -> 0.107, #1 -> 0.087, 302 -> 0.069, #2 -> 0.069, 99 -> 0.069, 475 -> 0.062, 486 -> 0.059, #4 -> 0.044, [] -> 0.043, plus -> 0.040
Last fitness increase: 37 generations ago.
------------
[3016.722s]Generation 170
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 353 ; iter: #1; seedExpr: 353 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (483,373) ; iter: #3; seedExpr: (483,373) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 900
Average Size: 32.12266112266112
Average Fitness: 676855.9839549594
Fitness Variation: 834797.5301667406
Distribution: times -> 0.110, #1 -> 0.087, 99 -> 0.071, 302 -> 0.071, #2 -> 0.069, 486 -> 0.061, 475 -> 0.061, [] -> 0.043, #4 -> 0.043, plus -> 0.040
Last fitness increase: 38 generations ago.
------------
[3034.708s]Generation 171
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 99 ; iter: #1; seedExpr: 99 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (82,8) ; iter: #2; seedExpr: (82,8) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 900
Average Size: 31.886694386694387
Average Fitness: 690401.1407886656
Fitness Variation: 837300.5891647233
Distribution: times -> 0.108, #1 -> 0.087, 99 -> 0.071, 302 -> 0.069, #2 -> 0.069, 475 -> 0.063, 486 -> 0.060, [] -> 0.044, #4 -> 0.044, plus -> 0.040
Last fitness increase: 39 generations ago.
------------
[3052.613s]Generation 172
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 76 ; iter: #0; seedExpr: 76 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 891
Average Size: 32.03950103950104
Average Fitness: 735938.4852391547
Fitness Variation: 844906.0202254069
Distribution: times -> 0.107, #1 -> 0.087, 99 -> 0.070, 302 -> 0.070, #2 -> 0.069, 475 -> 0.062, 486 -> 0.059, [] -> 0.044, #4 -> 0.043, plus -> 0.040
Last fitness increase: 40 generations ago.
------------
[3070.807s]Generation 173
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 212 ; iter: #1; seedExpr: 212 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (483,373) ; iter: (271,212); seedExpr: (483,373) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 888
Average Size: 32.264033264033266
Average Fitness: 727195.5066701483
Fitness Variation: 842946.1460754229
Distribution: times -> 0.107, #1 -> 0.087, 99 -> 0.070, 302 -> 0.069, #2 -> 0.068, 475 -> 0.062, 486 -> 0.059, [] -> 0.045, #4 -> 0.042, plus -> 0.040
Last fitness increase: 41 generations ago.
------------
[3089.137s]Generation 174
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: #0; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (31,87) ; iter: #2; seedExpr: (31,87) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 899
Average Size: 32.20997920997921
Average Fitness: 671392.2345675349
Fitness Variation: 829746.0511008998
Distribution: times -> 0.106, #1 -> 0.086, #2 -> 0.070, 302 -> 0.070, 99 -> 0.069, 475 -> 0.061, 486 -> 0.059, [] -> 0.044, #4 -> 0.044, plus -> 0.040
Last fitness increase: 42 generations ago.
------------
[3107.871s]Generation 175
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 87 ; iter: 331; seedExpr: 87 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: (271,212); seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 902
Average Size: 32.46569646569647
Average Fitness: 675880.2810492645
Fitness Variation: 831296.5967469022
Distribution: times -> 0.107, #1 -> 0.085, 99 -> 0.069, 302 -> 0.068, #2 -> 0.068, 475 -> 0.062, 486 -> 0.060, #4 -> 0.043, [] -> 0.042, plus -> 0.040
Last fitness increase: 43 generations ago.
------------
[3126.468s]Generation 176
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 302 ; iter: #1; seedExpr: 302 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: (271,212); seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 900
Average Size: 32.432432432432435
Average Fitness: 676326.2235282311
Fitness Variation: 829162.8792036463
Distribution: times -> 0.109, #1 -> 0.087, 99 -> 0.072, 302 -> 0.070, #2 -> 0.067, 475 -> 0.062, 486 -> 0.060, #4 -> 0.043, [] -> 0.042, plus -> 0.041
Last fitness increase: 44 generations ago.
------------
[3144.816s]Generation 177
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: #0; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (31,87) ; iter: #2; seedExpr: (31,87) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 899
Average Size: 32.562370062370064
Average Fitness: 687654.1254825897
Fitness Variation: 834089.1159505652
Distribution: times -> 0.107, #1 -> 0.086, 99 -> 0.070, 302 -> 0.068, #2 -> 0.067, 475 -> 0.060, 486 -> 0.059, [] -> 0.045, #4 -> 0.044, plus -> 0.039
Last fitness increase: 45 generations ago.
------------
[3163.032s]Generation 178
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 355 ; iter: 372; seedExpr: 355 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (205,479) ; iter: (226,329); seedExpr: (205,479) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 892
Average Size: 32.41372141372141
Average Fitness: 678878.8964029778
Fitness Variation: 827833.5552174794
Distribution: times -> 0.106, #1 -> 0.088, 99 -> 0.070, 302 -> 0.069, #2 -> 0.067, 475 -> 0.060, 486 -> 0.059, [] -> 0.045, #4 -> 0.043, plus -> 0.039
Last fitness increase: 46 generations ago.
------------
[3181.391s]Generation 179
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 234 ; iter: 359; seedExpr: 234 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (69,385) ; iter: (111,127); seedExpr: (69,385) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 900
Average Size: 32.59251559251559
Average Fitness: 679418.2975311578
Fitness Variation: 825933.2151077283
Distribution: times -> 0.108, #1 -> 0.087, 99 -> 0.071, 302 -> 0.069, #2 -> 0.066, 475 -> 0.060, 486 -> 0.060, [] -> 0.046, #4 -> 0.043, plus -> 0.039
Last fitness increase: 47 generations ago.
------------
[3200.105s]Generation 180
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 267 ; iter: 372; seedExpr: 267 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (30,260) ; iter: (26,84); seedExpr: (30,260) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 897
Average Size: 32.79002079002079
Average Fitness: 659560.9941436617
Fitness Variation: 823593.1319655576
Distribution: times -> 0.107, #1 -> 0.086, 99 -> 0.071, 302 -> 0.069, #2 -> 0.064, 475 -> 0.060, 486 -> 0.059, [] -> 0.047, #4 -> 0.044, plus -> 0.039
Last fitness increase: 48 generations ago.
------------
[3219.049s]Generation 181
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 302 ; iter: 486; seedExpr: 302 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (270,458) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (270,458) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: (271,212); seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(270,458)]), Vector([(270,458),(458,950)]), Vector([(270,458),(458,950),(950,29062350)]), Vector([(270,458),(458,950),(950,29062350),(29062350,58123750)]), Vector([(270,458),(458,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(270,458),(458,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 897
Average Size: 32.46673596673597
Average Fitness: 703961.7015325394
Fitness Variation: 835667.9097532493
Distribution: times -> 0.110, #1 -> 0.087, 99 -> 0.072, 302 -> 0.071, #2 -> 0.065, 475 -> 0.061, 486 -> 0.060, #4 -> 0.044, [] -> 0.043, plus -> 0.041
Last fitness increase: 49 generations ago.
------------
[3237.124s]Generation 182
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 107 ; iter: 255; seedExpr: 107 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (428,266) ; iter: (111,127); seedExpr: (428,266) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 888
Average Size: 32.3004158004158
Average Fitness: 729165.242063736
Fitness Variation: 843537.7196308594
Distribution: times -> 0.109, #1 -> 0.088, 99 -> 0.071, 302 -> 0.071, #2 -> 0.068, 475 -> 0.061, 486 -> 0.060, #4 -> 0.044, [] -> 0.042, plus -> 0.041
Last fitness increase: 50 generations ago.
------------
[3255.949s]Generation 183
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 99 ; iter: 301; seedExpr: 99 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (48,170) ; iter: #3; seedExpr: (48,170) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 908
Average Size: 32.11018711018711
Average Fitness: 661780.8643910001
Fitness Variation: 827339.3875570495
Distribution: times -> 0.107, #1 -> 0.087, 99 -> 0.071, 302 -> 0.069, #2 -> 0.068, 475 -> 0.062, 486 -> 0.060, #4 -> 0.044, [] -> 0.041, plus -> 0.040
Last fitness increase: 51 generations ago.
------------
[3275.361s]Generation 184
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 301 ; iter: 301; seedExpr: 301 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 913
Average Size: 32.195426195426194
Average Fitness: 644830.271896924
Fitness Variation: 817150.5902598953
Distribution: times -> 0.107, #1 -> 0.088, 99 -> 0.071, 302 -> 0.069, #2 -> 0.068, 475 -> 0.061, 486 -> 0.059, #4 -> 0.045, [] -> 0.041, plus -> 0.040
Last fitness increase: 52 generations ago.
------------
[3294.687s]Generation 185
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 223 ; iter: 15; seedExpr: 223 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 897
Average Size: 32.57380457380457
Average Fitness: 714103.8618619911
Fitness Variation: 835193.6595239344
Distribution: times -> 0.108, #1 -> 0.086, 99 -> 0.072, 302 -> 0.071, #2 -> 0.066, 475 -> 0.061, 486 -> 0.060, #4 -> 0.045, [] -> 0.042, plus -> 0.040
Last fitness increase: 53 generations ago.
------------
[3312.969s]Generation 186
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 99 ; iter: 245; seedExpr: 99 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (82,8) ; iter: #2; seedExpr: (82,8) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 888
Average Size: 32.51143451143451
Average Fitness: 760453.9349523962
Fitness Variation: 850588.4682645714
Distribution: times -> 0.109, #1 -> 0.085, 99 -> 0.072, 302 -> 0.071, #2 -> 0.066, 475 -> 0.061, 486 -> 0.061, #4 -> 0.044, [] -> 0.043, plus -> 0.039
Last fitness increase: 54 generations ago.
------------
[3331.723s]Generation 187
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 297 ; iter: #0; seedExpr: 297 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (26,84); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 888
Average Size: 32.262993762993766
Average Fitness: 691520.3668686168
Fitness Variation: 836668.2345488353
Distribution: times -> 0.110, #1 -> 0.087, 99 -> 0.073, 302 -> 0.070, #2 -> 0.066, 475 -> 0.062, 486 -> 0.061, #4 -> 0.045, [] -> 0.044, plus -> 0.039
Last fitness increase: 55 generations ago.
------------
[3350.357s]Generation 188
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 459 ; iter: #1; seedExpr: 459 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (10,283) ; iter: #2; seedExpr: (10,283) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 893
Average Size: 32.55197505197505
Average Fitness: 740261.5907265393
Fitness Variation: 844072.4706571136
Distribution: times -> 0.109, #1 -> 0.084, 99 -> 0.072, 302 -> 0.070, #2 -> 0.066, 475 -> 0.062, 486 -> 0.061, #4 -> 0.044, [] -> 0.043, plus -> 0.040
Last fitness increase: 56 generations ago.
------------
[3368.699s]Generation 189
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 35 ; iter: #1; seedExpr: 35 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (353,124) ; iter: (271,212); seedExpr: (353,124) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 885
Average Size: 32.14968814968815
Average Fitness: 730065.7436160293
Fitness Variation: 840309.6155755835
Distribution: times -> 0.108, #1 -> 0.084, 99 -> 0.072, 302 -> 0.070, #2 -> 0.069, 475 -> 0.061, 486 -> 0.060, #4 -> 0.045, [] -> 0.042, plus -> 0.041
Last fitness increase: 57 generations ago.
------------
[3388.521s]Generation 190
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 400 ; iter: #1; seedExpr: 400 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (299,476) ; iter: #3; seedExpr: (299,476) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 913
Average Size: 32.391891891891895
Average Fitness: 708080.6425462132
Fitness Variation: 835883.2889848087
Distribution: times -> 0.110, #1 -> 0.084, 99 -> 0.073, 302 -> 0.070, #2 -> 0.067, 475 -> 0.063, 486 -> 0.061, #4 -> 0.044, [] -> 0.044, plus -> 0.039
Last fitness increase: 58 generations ago.
------------
[3407.211s]Generation 191
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 390 ; iter: 340; seedExpr: 390 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 427), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (10,283) ; iter: #2; seedExpr: (10,283) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 909
Average Size: 32.47089397089397
Average Fitness: 748137.7448881011
Fitness Variation: 844023.573364674
Distribution: times -> 0.108, #1 -> 0.086, 99 -> 0.071, 302 -> 0.069, #2 -> 0.069, 475 -> 0.061, 486 -> 0.059, #4 -> 0.044, [] -> 0.044, plus -> 0.039
Last fitness increase: 59 generations ago.
------------
[3425.950s]Generation 192
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: 393; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (306,373) ; iter: (166,119); seedExpr: (306,373) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 906
Average Size: 32.438669438669436
Average Fitness: 721967.7088410753
Fitness Variation: 841568.1443909736
Distribution: times -> 0.110, #1 -> 0.088, 99 -> 0.072, 302 -> 0.070, #2 -> 0.067, 475 -> 0.062, 486 -> 0.061, #4 -> 0.043, [] -> 0.041, plus -> 0.041
Last fitness increase: 60 generations ago.
------------
[3445.314s]Generation 193
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 99 ; iter: 99; seedExpr: 99 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 901
Average Size: 32.314968814968815
Average Fitness: 667169.4763985467
Fitness Variation: 828693.9089329416
Distribution: times -> 0.108, #1 -> 0.087, 99 -> 0.071, #2 -> 0.068, 302 -> 0.068, 475 -> 0.062, 486 -> 0.059, #4 -> 0.043, [] -> 0.040, plus -> 0.040
Last fitness increase: 61 generations ago.
------------
[3463.397s]Generation 194
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 99 ; iter: 99; seedExpr: 99 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 883
Average Size: 32.34407484407485
Average Fitness: 732543.2108495655
Fitness Variation: 839948.0209709827
Distribution: times -> 0.109, #1 -> 0.087, 99 -> 0.072, 302 -> 0.070, #2 -> 0.067, 475 -> 0.060, 486 -> 0.060, #4 -> 0.043, [] -> 0.042, plus -> 0.039
Last fitness increase: 62 generations ago.
------------
[3482.258s]Generation 195
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 183 ; iter: #1; seedExpr: 183 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 427), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (10,283) ; iter: #2; seedExpr: (10,283) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 883
Average Size: 32.38357588357589
Average Fitness: 735185.5351689849
Fitness Variation: 844942.3022134128
Distribution: times -> 0.110, #1 -> 0.087, 99 -> 0.073, 302 -> 0.070, #2 -> 0.068, 475 -> 0.061, 486 -> 0.059, #4 -> 0.044, [] -> 0.042, plus -> 0.040
Last fitness increase: 63 generations ago.
------------
[3501.252s]Generation 196
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: 41; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (306,373) ; iter: (271,212); seedExpr: (306,373) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 891
Average Size: 32.479209979209976
Average Fitness: 731641.5535298075
Fitness Variation: 839172.1236150682
Distribution: times -> 0.111, #1 -> 0.086, 99 -> 0.073, 302 -> 0.071, #2 -> 0.068, 486 -> 0.061, 475 -> 0.061, #4 -> 0.043, [] -> 0.041, plus -> 0.040
Last fitness increase: 64 generations ago.
------------
[3519.553s]Generation 197
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 459 ; iter: #1; seedExpr: 459 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (10,283) ; iter: (198,419); seedExpr: (10,283) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 880
Average Size: 32.0997920997921
Average Fitness: 752877.9686346427
Fitness Variation: 846274.1779496927
Distribution: times -> 0.109, #1 -> 0.087, 99 -> 0.072, 302 -> 0.069, #2 -> 0.069, 475 -> 0.061, 486 -> 0.060, #4 -> 0.045, [] -> 0.041, plus -> 0.040
Last fitness increase: 65 generations ago.
------------
[3538.934s]Generation 198
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 291 ; iter: 82; seedExpr: 291 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 905
Average Size: 32.271309771309774
Average Fitness: 737846.0801340513
Fitness Variation: 839945.6735144292
Distribution: times -> 0.110, #1 -> 0.085, 99 -> 0.073, 302 -> 0.070, #2 -> 0.068, 475 -> 0.061, 486 -> 0.060, #4 -> 0.044, [] -> 0.041, plus -> 0.040
Last fitness increase: 66 generations ago.
------------
[3557.799s]Generation 199
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 486 ; iter: 362; seedExpr: 486 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: (271,212); seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 904
Average Size: 32.103950103950105
Average Fitness: 717395.2776547464
Fitness Variation: 835589.6608451547
Distribution: times -> 0.110, #1 -> 0.084, 99 -> 0.073, 302 -> 0.070, #2 -> 0.069, 475 -> 0.061, 486 -> 0.059, #4 -> 0.044, [] -> 0.044, plus -> 0.040
Last fitness increase: 67 generations ago.
------------
[3576.591s]Generation 200
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 230 ; iter: #1; seedExpr: 230 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 903
Average Size: 32.12474012474012
Average Fitness: 689641.9953158625
Fitness Variation: 829729.9235953606
Distribution: times -> 0.107, #1 -> 0.086, 99 -> 0.070, #2 -> 0.068, 302 -> 0.068, 475 -> 0.063, 486 -> 0.059, #4 -> 0.045, [] -> 0.043, plus -> 0.041
Last fitness increase: 68 generations ago.
------------
[3595.717s]Generation 201
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 115 ; iter: 99; seedExpr: 115 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (273,40) ; iter: #2; seedExpr: (273,40) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 914
Average Size: 32.13305613305613
Average Fitness: 665254.033828177
Fitness Variation: 830737.6654756641
Distribution: times -> 0.107, #1 -> 0.087, 99 -> 0.071, 302 -> 0.068, #2 -> 0.068, 475 -> 0.064, 486 -> 0.059, #4 -> 0.044, [] -> 0.043, plus -> 0.040
Last fitness increase: 69 generations ago.
------------
[3614.474s]Generation 202
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: 372; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #3; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 907
Average Size: 32.444906444906444
Average Fitness: 680846.6144727165
Fitness Variation: 830901.3156783216
Distribution: times -> 0.108, #1 -> 0.087, 99 -> 0.072, 302 -> 0.069, #2 -> 0.068, 475 -> 0.063, 486 -> 0.059, #4 -> 0.044, [] -> 0.041, plus -> 0.040
Last fitness increase: 70 generations ago.
------------
[3633.459s]Generation 203
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 459 ; iter: #1; seedExpr: 459 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: (353,124); seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 898
Average Size: 32.63929313929314
Average Fitness: 705113.3552388361
Fitness Variation: 835078.0239080244
Distribution: times -> 0.109, #1 -> 0.088, 99 -> 0.071, 302 -> 0.069, #2 -> 0.067, 475 -> 0.062, 486 -> 0.060, #4 -> 0.044, [] -> 0.040, plus -> 0.040
Last fitness increase: 71 generations ago.
------------
[3652.521s]Generation 204
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 94 ; iter: 99; seedExpr: 94 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 891
Average Size: 32.644490644490645
Average Fitness: 752565.2820777908
Fitness Variation: 850632.0858280539
Distribution: times -> 0.110, #1 -> 0.086, 99 -> 0.074, 302 -> 0.071, #2 -> 0.067, 475 -> 0.061, 486 -> 0.059, #4 -> 0.044, [] -> 0.041, plus -> 0.039
Last fitness increase: 72 generations ago.
------------
[3671.143s]Generation 205
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 353 ; iter: 475; seedExpr: 353 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (48,170) ; iter: (13,430); seedExpr: (48,170) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 886
Average Size: 32.275467775467774
Average Fitness: 760653.0197441087
Fitness Variation: 849756.0846704149
Distribution: times -> 0.111, #1 -> 0.085, 99 -> 0.073, 302 -> 0.070, #2 -> 0.068, 475 -> 0.062, 486 -> 0.061, #4 -> 0.044, [] -> 0.041, plus -> 0.040
Last fitness increase: 73 generations ago.
------------
[3690.261s]Generation 206
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 142 ; iter: 167; seedExpr: 142 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (454,447) ; iter: #3; seedExpr: (454,447) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 910
Average Size: 32.08108108108108
Average Fitness: 648027.1430870036
Fitness Variation: 824140.5751932657
Distribution: times -> 0.109, #1 -> 0.087, 99 -> 0.073, 302 -> 0.070, #2 -> 0.068, 475 -> 0.059, 486 -> 0.059, #4 -> 0.044, [] -> 0.042, plus -> 0.040
Last fitness increase: 74 generations ago.
------------
[3709.210s]Generation 207
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 151 ; iter: 390; seedExpr: 151 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (34,434) ; iter: (75,444); seedExpr: (34,434) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 900
Average Size: 32.304573804573806
Average Fitness: 702412.4590597583
Fitness Variation: 836455.6486825207
Distribution: times -> 0.109, #1 -> 0.087, 99 -> 0.072, 302 -> 0.070, #2 -> 0.068, 486 -> 0.060, 475 -> 0.059, #4 -> 0.043, [] -> 0.042, plus -> 0.039
Last fitness increase: 75 generations ago.
------------
[3727.356s]Generation 208
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 353 ; iter: #1; seedExpr: 353 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 427), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (443,452) ; iter: #2; seedExpr: (443,452) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 894
Average Size: 32.42827442827443
Average Fitness: 695275.6104655453
Fitness Variation: 832518.880980405
Distribution: times -> 0.109, #1 -> 0.088, 99 -> 0.072, 302 -> 0.070, #2 -> 0.069, 486 -> 0.059, 475 -> 0.058, [] -> 0.042, #4 -> 0.042, plus -> 0.040
Last fitness increase: 76 generations ago.
------------
[3746.129s]Generation 209
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: #0; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (306,373) ; iter: #3; seedExpr: (306,373) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 908
Average Size: 32.32432432432432
Average Fitness: 681381.7919735186
Fitness Variation: 831015.693589449
Distribution: times -> 0.106, #1 -> 0.088, 99 -> 0.070, #2 -> 0.069, 302 -> 0.069, 486 -> 0.058, 475 -> 0.057, [] -> 0.044, #4 -> 0.043, plus -> 0.040
Last fitness increase: 77 generations ago.
------------
[3764.304s]Generation 210
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 258 ; iter: #1; seedExpr: 258 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (80,49); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 889
Average Size: 32.63617463617464
Average Fitness: 742847.0428440558
Fitness Variation: 847337.5302678056
Distribution: times -> 0.110, #1 -> 0.085, 302 -> 0.071, 99 -> 0.071, #2 -> 0.068, 486 -> 0.060, 475 -> 0.056, [] -> 0.044, #4 -> 0.042, plus -> 0.040
Last fitness increase: 78 generations ago.
------------
[3782.447s]Generation 211
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 379 ; iter: 41; seedExpr: 379 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (306,373) ; iter: (166,119); seedExpr: (306,373) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 893
Average Size: 32.30873180873181
Average Fitness: 727043.9372779854
Fitness Variation: 842439.1046508135
Distribution: times -> 0.110, #1 -> 0.087, 99 -> 0.072, 302 -> 0.070, #2 -> 0.068, 486 -> 0.059, 475 -> 0.056, [] -> 0.045, #4 -> 0.042, 353 -> 0.040
Last fitness increase: 79 generations ago.
------------
[3800.099s]Generation 212
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 142 ; iter: 99; seedExpr: 142 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (10,283) ; iter: (72,474); seedExpr: (10,283) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 899
Average Size: 32.444906444906444
Average Fitness: 688175.4556387349
Fitness Variation: 831929.8769302716
Distribution: times -> 0.107, #1 -> 0.087, 99 -> 0.069, 302 -> 0.069, #2 -> 0.066, 486 -> 0.058, 475 -> 0.058, [] -> 0.045, #4 -> 0.041, 353 -> 0.040
Last fitness increase: 80 generations ago.
------------
[3818.075s]Generation 213
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 353 ; iter: 362; seedExpr: 353 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 427), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (251,482) ; iter: #2; seedExpr: (251,482) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 883
Average Size: 32.45218295218295
Average Fitness: 728724.2380133097
Fitness Variation: 842042.497813249
Distribution: times -> 0.107, #1 -> 0.086, 99 -> 0.070, 302 -> 0.070, #2 -> 0.066, 486 -> 0.059, 475 -> 0.056, [] -> 0.045, #4 -> 0.042, 353 -> 0.040
Last fitness increase: 81 generations ago.
------------
[3835.617s]Generation 214
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 99 ; iter: 99; seedExpr: 99 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 884
Average Size: 32.21829521829522
Average Fitness: 710202.2202222341
Fitness Variation: 838558.3201288104
Distribution: times -> 0.109, #1 -> 0.087, 302 -> 0.071, 99 -> 0.071, #2 -> 0.067, 486 -> 0.060, 475 -> 0.057, [] -> 0.044, #4 -> 0.042, 353 -> 0.041
Last fitness increase: 82 generations ago.
------------
[3853.234s]Generation 215
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 54 ; iter: 173; seedExpr: 54 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: (10,283); seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 880
Average Size: 32.16008316008316
Average Fitness: 726528.2513249097
Fitness Variation: 839542.4249397108
Distribution: times -> 0.109, #1 -> 0.087, 99 -> 0.072, 302 -> 0.071, #2 -> 0.068, 486 -> 0.060, 475 -> 0.058, [] -> 0.043, #4 -> 0.043, 353 -> 0.041
Last fitness increase: 83 generations ago.
------------
[3871.784s]Generation 216
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 238 ; iter: #0; seedExpr: 238 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (306,373) ; iter: (35,148); seedExpr: (306,373) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 891
Average Size: 32.05925155925156
Average Fitness: 728787.4425350074
Fitness Variation: 839762.6234504355
Distribution: times -> 0.108, #1 -> 0.086, 99 -> 0.071, 302 -> 0.070, #2 -> 0.070, 486 -> 0.060, 475 -> 0.059, #4 -> 0.044, [] -> 0.043, 353 -> 0.040
Last fitness increase: 84 generations ago.
------------
[3890.228s]Generation 217
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 147 ; iter: 15; seedExpr: 147 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: (63,132); seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 888
Average Size: 32.28898128898129
Average Fitness: 723856.7493020453
Fitness Variation: 836986.6834826285
Distribution: times -> 0.108, #1 -> 0.087, 99 -> 0.071, 302 -> 0.069, #2 -> 0.069, 486 -> 0.060, 475 -> 0.059, #4 -> 0.043, [] -> 0.043, plus -> 0.040
Last fitness increase: 85 generations ago.
------------
[3908.878s]Generation 218
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 258 ; iter: 258; seedExpr: 258 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (271,212); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 891
Average Size: 32.54469854469855
Average Fitness: 758807.9564864684
Fitness Variation: 842020.0125703105
Distribution: times -> 0.110, #1 -> 0.086, 99 -> 0.072, 302 -> 0.071, #2 -> 0.067, 486 -> 0.060, 475 -> 0.059, #4 -> 0.043, [] -> 0.042, plus -> 0.039
Last fitness increase: 86 generations ago.
------------
[3928.024s]Generation 219
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 258 ; iter: #1; seedExpr: 258 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: (271,212); seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 908
Average Size: 32.48960498960499
Average Fitness: 719335.554236468
Fitness Variation: 835692.0915098995
Distribution: times -> 0.106, #1 -> 0.087, 99 -> 0.070, 302 -> 0.069, #2 -> 0.068, 475 -> 0.057, 486 -> 0.057, #4 -> 0.044, [] -> 0.043, plus -> 0.039
Last fitness increase: 87 generations ago.
------------
[3946.895s]Generation 220
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 208 ; iter: 142; seedExpr: 208 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: (35,148); seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 901
Average Size: 32.522869022869024
Average Fitness: 711845.821730221
Fitness Variation: 829650.8150171657
Distribution: times -> 0.109, #1 -> 0.084, 99 -> 0.071, 302 -> 0.071, #2 -> 0.067, 486 -> 0.061, 475 -> 0.057, #4 -> 0.045, [] -> 0.042, plus -> 0.040
Last fitness increase: 88 generations ago.
------------
[3966.779s]Generation 221
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 98 ; iter: 99; seedExpr: 98 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: (51,379); seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 903
Average Size: 32.46881496881497
Average Fitness: 730397.0070639917
Fitness Variation: 838964.8700168772
Distribution: times -> 0.108, #1 -> 0.087, 99 -> 0.071, 302 -> 0.070, #2 -> 0.069, 486 -> 0.059, 475 -> 0.057, #4 -> 0.046, [] -> 0.041, plus -> 0.040
Last fitness increase: 89 generations ago.
------------
[3986.488s]Generation 222
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 156 ; iter: 42; seedExpr: 156 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 905
Average Size: 32.232848232848234
Average Fitness: 703830.26976372
Fitness Variation: 835648.5048341652
Distribution: times -> 0.107, #1 -> 0.088, 99 -> 0.070, 302 -> 0.070, #2 -> 0.067, 475 -> 0.059, 486 -> 0.059, #4 -> 0.045, [] -> 0.040, plus -> 0.040
Last fitness increase: 90 generations ago.
------------
[4005.567s]Generation 223
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 257 ; iter: #0; seedExpr: 257 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #3; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 894
Average Size: 32.36694386694387
Average Fitness: 687379.4688766977
Fitness Variation: 835298.4333723042
Distribution: times -> 0.111, #1 -> 0.087, 99 -> 0.071, 302 -> 0.071, #2 -> 0.066, 486 -> 0.061, 475 -> 0.060, #4 -> 0.045, [] -> 0.040, plus -> 0.040
Last fitness increase: 91 generations ago.
------------
[4024.367s]Generation 224
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 257 ; iter: #0; seedExpr: 257 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (267,390) ; iter: #2; seedExpr: (267,390) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 890
Average Size: 32.45530145530145
Average Fitness: 725395.9463331249
Fitness Variation: 843786.2118100164
Distribution: times -> 0.111, #1 -> 0.085, 302 -> 0.072, 99 -> 0.071, #2 -> 0.065, 486 -> 0.061, 475 -> 0.060, #4 -> 0.045, plus -> 0.040, [] -> 0.040
Last fitness increase: 92 generations ago.
------------
[4043.594s]Generation 225
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 258 ; iter: #1; seedExpr: 258 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (303,81) ; iter: #3; seedExpr: (303,81) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 901
Average Size: 32.24116424116424
Average Fitness: 641255.6266806773
Fitness Variation: 821948.7220982872
Distribution: times -> 0.110, #1 -> 0.084, 99 -> 0.071, 302 -> 0.070, #2 -> 0.065, 475 -> 0.061, 486 -> 0.060, #4 -> 0.043, [] -> 0.041, bitOr -> 0.039
Last fitness increase: 93 generations ago.
------------
[4063.074s]Generation 226
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 367 ; iter: #1; seedExpr: 367 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (338,19) ; iter: #2; seedExpr: (338,19) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 905
Average Size: 32.524948024948024
Average Fitness: 602073.156629519
Fitness Variation: 810973.1782491172
Distribution: times -> 0.107, #1 -> 0.086, 99 -> 0.070, 302 -> 0.068, #2 -> 0.064, 475 -> 0.059, 486 -> 0.059, #4 -> 0.044, [] -> 0.042, plus -> 0.040
Last fitness increase: 94 generations ago.
------------
[4082.172s]Generation 227
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 285 ; iter: 99; seedExpr: 285 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (51,379); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 887
Average Size: 32.91891891891892
Average Fitness: 679858.9968643519
Fitness Variation: 827214.0004447259
Distribution: times -> 0.107, #1 -> 0.086, 99 -> 0.069, 302 -> 0.069, #2 -> 0.064, 486 -> 0.060, 475 -> 0.058, #4 -> 0.043, [] -> 0.043, bitOr -> 0.039
Last fitness increase: 95 generations ago.
------------
[4100.247s]Generation 228
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 353 ; iter: #0; seedExpr: 353 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: (271,212); seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 861
Average Size: 32.62785862785863
Average Fitness: 763282.078937838
Fitness Variation: 848089.5918998804
Distribution: times -> 0.109, #1 -> 0.084, 99 -> 0.071, 302 -> 0.070, #2 -> 0.065, 486 -> 0.060, 475 -> 0.060, #4 -> 0.044, [] -> 0.042, plus -> 0.040
Last fitness increase: 96 generations ago.
------------
[4119.097s]Generation 229
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 353 ; iter: 486; seedExpr: 353 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 427), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (248,262); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 888
Average Size: 32.313929313929314
Average Fitness: 657214.0103642221
Fitness Variation: 827220.4557986592
Distribution: times -> 0.108, #1 -> 0.086, 302 -> 0.070, 99 -> 0.069, #2 -> 0.064, 475 -> 0.061, 486 -> 0.059, #4 -> 0.044, [] -> 0.041, plus -> 0.040
Last fitness increase: 97 generations ago.
------------
[4138.261s]Generation 230
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 77 ; iter: 0; seedExpr: 77 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 888
Average Size: 32.14968814968815
Average Fitness: 758993.4607708639
Fitness Variation: 845743.9736503673
Distribution: times -> 0.109, #1 -> 0.087, 99 -> 0.070, 302 -> 0.070, #2 -> 0.066, 475 -> 0.061, 486 -> 0.061, #4 -> 0.045, [] -> 0.041, plus -> 0.040
Last fitness increase: 98 generations ago.
------------
[4156.325s]Generation 231
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 486 ; iter: 258; seedExpr: 486 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (251,445); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 867
Average Size: 32.08523908523909
Average Fitness: 764313.2710640781
Fitness Variation: 846613.8097430572
Distribution: times -> 0.111, #1 -> 0.087, 302 -> 0.072, 99 -> 0.070, #2 -> 0.066, 486 -> 0.062, 475 -> 0.061, #4 -> 0.045, [] -> 0.040, plus -> 0.040
Last fitness increase: 99 generations ago.
------------
[4174.843s]Generation 232
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: #0; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 871
Average Size: 32.276507276507274
Average Fitness: 744648.0562315292
Fitness Variation: 844396.0990515436
Distribution: times -> 0.109, #1 -> 0.086, 302 -> 0.070, 99 -> 0.070, #2 -> 0.066, 486 -> 0.061, 475 -> 0.060, #4 -> 0.044, plus -> 0.040, [] -> 0.040
Last fitness increase: 100 generations ago.
------------
[4193.558s]Generation 233
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 486 ; iter: 258; seedExpr: 486 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (251,445); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 896
Average Size: 32.38669438669439
Average Fitness: 694599.6879439636
Fitness Variation: 833367.3884894201
Distribution: times -> 0.110, #1 -> 0.084, 302 -> 0.071, 99 -> 0.070, #2 -> 0.066, 475 -> 0.061, 486 -> 0.060, #4 -> 0.044, [] -> 0.042, plus -> 0.041
Last fitness increase: 101 generations ago.
------------
[4212.440s]Generation 234
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 257 ; iter: #0; seedExpr: 257 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, #0)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (172,253) ; iter: (271,212); seedExpr: (172,253) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 900
Average Size: 32.17983367983368
Average Fitness: 675476.2425057004
Fitness Variation: 828622.6176496368
Distribution: times -> 0.110, #1 -> 0.086, 302 -> 0.072, 99 -> 0.071, #2 -> 0.065, 486 -> 0.061, 475 -> 0.059, #4 -> 0.045, [] -> 0.043, plus -> 0.041
Last fitness increase: 102 generations ago.
------------
[4231.296s]Generation 235
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 302 ; iter: 228; seedExpr: 302 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: #2; seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 905
Average Size: 32.36486486486486
Average Fitness: 699503.4011294188
Fitness Variation: 835659.1178606865
Distribution: times -> 0.108, #1 -> 0.085, 302 -> 0.070, 99 -> 0.069, #2 -> 0.066, 486 -> 0.060, 475 -> 0.059, #4 -> 0.044, [] -> 0.044, plus -> 0.040
Last fitness increase: 103 generations ago.
------------
[4250.943s]Generation 236
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 486 ; iter: 333; seedExpr: 486 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (26,84) ; iter: (251,445); seedExpr: (26,84) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 914
Average Size: 32.51039501039501
Average Fitness: 639857.9318490778
Fitness Variation: 819927.1827726912
Distribution: times -> 0.108, #1 -> 0.085, 302 -> 0.069, 99 -> 0.069, #2 -> 0.065, 486 -> 0.060, 475 -> 0.059, #4 -> 0.045, [] -> 0.043, plus -> 0.040
Last fitness increase: 104 generations ago.
------------
[4269.455s]Generation 237
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 203 ; iter: #1; seedExpr: 203 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: (275,264); seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 891
Average Size: 32.471933471933475
Average Fitness: 690065.7223416292
Fitness Variation: 832005.0142353245
Distribution: times -> 0.108, #1 -> 0.085, 302 -> 0.069, 99 -> 0.069, #2 -> 0.067, 475 -> 0.062, 486 -> 0.061, #4 -> 0.044, [] -> 0.042, plus -> 0.040
Last fitness increase: 105 generations ago.
------------
[4288.779s]Generation 238
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 436 ; iter: #0; seedExpr: 436 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: (11,153); seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 893
Average Size: 32.61538461538461
Average Fitness: 715240.4166249798
Fitness Variation: 835472.4788102461
Distribution: times -> 0.109, #1 -> 0.084, 302 -> 0.071, 99 -> 0.070, #2 -> 0.067, 475 -> 0.060, 486 -> 0.060, #4 -> 0.043, [] -> 0.042, plus -> 0.040
Last fitness increase: 106 generations ago.
------------
[4307.801s]Generation 239
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 37 ; iter: #0; seedExpr: 37 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (14,256) ; iter: (271,212); seedExpr: (14,256) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 891
Average Size: 32.816008316008315
Average Fitness: 726956.5173873237
Fitness Variation: 838963.2051557987
Distribution: times -> 0.107, #1 -> 0.085, 302 -> 0.070, 99 -> 0.068, #2 -> 0.068, 475 -> 0.060, 486 -> 0.059, #4 -> 0.044, [] -> 0.041, plus -> 0.040
Last fitness increase: 107 generations ago.
------------
[4327.001s]Generation 240
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 54 ; iter: #1; seedExpr: 54 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 881
Average Size: 32.58108108108108
Average Fitness: 711119.8604361373
Fitness Variation: 837731.7724175925
Distribution: times -> 0.108, #1 -> 0.085, 302 -> 0.070, 99 -> 0.069, #2 -> 0.068, 475 -> 0.062, 486 -> 0.060, #4 -> 0.045, [] -> 0.041, plus -> 0.040
Last fitness increase: 108 generations ago.
------------
[4345.912s]Generation 241
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 110 ; iter: 379; seedExpr: 110 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (73,63) ; iter: (443,55); seedExpr: (73,63) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 880
Average Size: 32.67567567567568
Average Fitness: 721804.7945521068
Fitness Variation: 839333.0562878681
Distribution: times -> 0.107, #1 -> 0.087, 302 -> 0.069, 99 -> 0.068, #2 -> 0.067, 475 -> 0.062, 486 -> 0.059, #4 -> 0.045, [] -> 0.042, plus -> 0.040
Last fitness increase: 109 generations ago.
------------
[4364.687s]Generation 242
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 353 ; iter: #1; seedExpr: 353 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (388,404) ; iter: #3; seedExpr: (388,404) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 883
Average Size: 32.20686070686071
Average Fitness: 704100.9926577333
Fitness Variation: 837034.1261133811
Distribution: times -> 0.108, #1 -> 0.086, 302 -> 0.069, 99 -> 0.069, #2 -> 0.068, 475 -> 0.064, 486 -> 0.059, #4 -> 0.045, [] -> 0.041, plus -> 0.039
Last fitness increase: 110 generations ago.
------------
[4384.099s]Generation 243
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 99 ; iter: 18; seedExpr: 99 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 97)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (10,283) ; iter: (271,212); seedExpr: (10,283) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 883
Average Size: 32.30769230769231
Average Fitness: 705878.5065072771
Fitness Variation: 840884.3485592619
Distribution: times -> 0.111, #1 -> 0.083, 302 -> 0.072, 99 -> 0.071, #2 -> 0.066, 475 -> 0.063, 486 -> 0.061, #4 -> 0.046, [] -> 0.040, bitOr -> 0.040
Last fitness increase: 111 generations ago.
------------
[4403.037s]Generation 244
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: 475; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 879
Average Size: 32.185031185031185
Average Fitness: 689037.9717590556
Fitness Variation: 838910.1872737647
Distribution: times -> 0.110, #1 -> 0.084, 99 -> 0.072, 302 -> 0.070, #2 -> 0.067, 475 -> 0.065, 486 -> 0.061, #4 -> 0.046, plus -> 0.040, bitOr -> 0.039
Last fitness increase: 112 generations ago.
------------
[4422.213s]Generation 245
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: 99; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 869
Average Size: 32.318087318087315
Average Fitness: 702499.777293799
Fitness Variation: 836463.92354892
Distribution: times -> 0.107, #1 -> 0.085, 99 -> 0.069, 302 -> 0.068, #2 -> 0.067, 475 -> 0.064, 486 -> 0.059, #4 -> 0.046, plus -> 0.040, [] -> 0.040
Last fitness increase: 113 generations ago.
------------
[4441.659s]Generation 246
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 310 ; iter: 142; seedExpr: 310 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (127,267) ; iter: #3; seedExpr: (127,267) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 879
Average Size: 32.24948024948025
Average Fitness: 748121.0634722614
Fitness Variation: 842948.4447511942
Distribution: times -> 0.109, #1 -> 0.086, 99 -> 0.072, 302 -> 0.070, #2 -> 0.067, 475 -> 0.062, 486 -> 0.061, #4 -> 0.046, plus -> 0.040, 142 -> 0.039
Last fitness increase: 114 generations ago.
------------
[4461.175s]Generation 247
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 411 ; iter: 475; seedExpr: 411 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 899
Average Size: 32.31912681912682
Average Fitness: 669500.4282888083
Fitness Variation: 831625.9315388086
Distribution: times -> 0.107, #1 -> 0.086, 99 -> 0.071, #2 -> 0.069, 302 -> 0.068, 475 -> 0.063, 486 -> 0.059, #4 -> 0.046, [] -> 0.041, plus -> 0.040
Last fitness increase: 115 generations ago.
------------
[4479.677s]Generation 248
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 54 ; iter: #1; seedExpr: 54 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (17,264) ; iter: #2; seedExpr: (17,264) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 896
Average Size: 32.343035343035346
Average Fitness: 720927.2463837616
Fitness Variation: 843234.8402098495
Distribution: times -> 0.107, #1 -> 0.085, 99 -> 0.071, 302 -> 0.068, #2 -> 0.067, 475 -> 0.063, 486 -> 0.059, #4 -> 0.045, [] -> 0.042, plus -> 0.040
Last fitness increase: 116 generations ago.
------------
[4498.901s]Generation 249
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 142 ; iter: #0; seedExpr: 142 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (194,323) ; iter: (271,212); seedExpr: (194,323) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 891
Average Size: 32.42827442827443
Average Fitness: 720539.7470554694
Fitness Variation: 838310.3020231884
Distribution: times -> 0.111, #1 -> 0.085, 99 -> 0.072, 302 -> 0.072, #2 -> 0.066, 475 -> 0.063, 486 -> 0.061, #4 -> 0.044, [] -> 0.042, plus -> 0.040
Last fitness increase: 117 generations ago.
------------
[4517.974s]Generation 250
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: 247; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 908
Average Size: 32.063409563409564
Average Fitness: 694205.7830564152
Fitness Variation: 831360.663761547
Distribution: times -> 0.108, #1 -> 0.084, 99 -> 0.071, 302 -> 0.070, #2 -> 0.069, 475 -> 0.063, 486 -> 0.059, #4 -> 0.044, [] -> 0.042, plus -> 0.040
Last fitness increase: 118 generations ago.
------------
[4535.926s]Generation 251
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: 247; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), #0), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (355,38) ; iter: #2; seedExpr: (355,38) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 891
Average Size: 32.59251559251559
Average Fitness: 758886.477178919
Fitness Variation: 841205.6474665691
Distribution: times -> 0.109, #1 -> 0.085, 99 -> 0.070, 302 -> 0.070, #2 -> 0.067, 475 -> 0.062, 486 -> 0.060, [] -> 0.043, #4 -> 0.042, plus -> 0.040
Last fitness increase: 119 generations ago.
------------
[4553.990s]Generation 252
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: 142; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (33,197) ; iter: (271,212); seedExpr: (33,197) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 887
Average Size: 32.46361746361746
Average Fitness: 740530.7908949582
Fitness Variation: 838561.8856632097
Distribution: times -> 0.108, #1 -> 0.084, 99 -> 0.070, 302 -> 0.069, #2 -> 0.067, 475 -> 0.063, 486 -> 0.060, [] -> 0.044, #4 -> 0.043, plus -> 0.040
Last fitness increase: 120 generations ago.
------------
[4572.343s]Generation 253
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 99 ; iter: 18; seedExpr: 99 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 97)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (10,283) ; iter: #2; seedExpr: (10,283) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 886
Average Size: 32.22037422037422
Average Fitness: 661793.5364971746
Fitness Variation: 825465.6083174811
Distribution: times -> 0.108, #1 -> 0.087, 99 -> 0.069, 302 -> 0.067, #2 -> 0.067, 475 -> 0.063, 486 -> 0.059, #4 -> 0.043, [] -> 0.041, plus -> 0.040
Last fitness increase: 121 generations ago.
------------
[4590.344s]Generation 254
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: 379; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 257)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (459,462) ; iter: #2; seedExpr: (459,462) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 885
Average Size: 32.264033264033266
Average Fitness: 703820.5343561462
Fitness Variation: 836868.6184480177
Distribution: times -> 0.110, #1 -> 0.086, 99 -> 0.070, 302 -> 0.069, #2 -> 0.067, 475 -> 0.063, 486 -> 0.060, #4 -> 0.043, [] -> 0.042, plus -> 0.040
Last fitness increase: 122 generations ago.
------------
[4608.536s]Generation 255
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: 16; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (295,65) ; iter: #2; seedExpr: (295,65) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 898
Average Size: 32.30873180873181
Average Fitness: 646420.3398240465
Fitness Variation: 827324.9057823676
Distribution: times -> 0.111, #1 -> 0.084, 99 -> 0.072, 302 -> 0.070, #2 -> 0.067, 475 -> 0.064, 486 -> 0.060, #4 -> 0.042, [] -> 0.042, plus -> 0.040
Last fitness increase: 123 generations ago.
------------
[4626.868s]Generation 256
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 397 ; iter: #1; seedExpr: 397 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (127,267) ; iter: #3; seedExpr: (127,267) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 903
Average Size: 32.45634095634096
Average Fitness: 733642.1609703344
Fitness Variation: 836853.3962544792
Distribution: times -> 0.108, #1 -> 0.085, 99 -> 0.070, 302 -> 0.070, #2 -> 0.068, 475 -> 0.064, 486 -> 0.060, [] -> 0.044, #4 -> 0.042, plus -> 0.040
Last fitness increase: 124 generations ago.
------------
[4645.264s]Generation 257
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 142 ; iter: #0; seedExpr: 142 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: (271,212); seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 884
Average Size: 32.16839916839917
Average Fitness: 727278.4448806893
Fitness Variation: 841747.494853551
Distribution: times -> 0.108, #1 -> 0.084, 99 -> 0.070, 302 -> 0.068, #2 -> 0.068, 475 -> 0.064, 486 -> 0.061, [] -> 0.044, #4 -> 0.043, plus -> 0.039
Last fitness increase: 125 generations ago.
------------
[4663.571s]Generation 258
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 397 ; iter: 353; seedExpr: 397 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (127,267) ; iter: #3; seedExpr: (127,267) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 902
Average Size: 32.102910602910605
Average Fitness: 664519.9028532006
Fitness Variation: 828648.0601315437
Distribution: times -> 0.109, #1 -> 0.084, 99 -> 0.069, 302 -> 0.068, #2 -> 0.067, 475 -> 0.065, 486 -> 0.063, [] -> 0.043, #4 -> 0.043, plus -> 0.040
Last fitness increase: 126 generations ago.
------------
[4682.306s]Generation 259
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 353 ; iter: 475; seedExpr: 353 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (255,203) ; iter: #3; seedExpr: (255,203) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 896
Average Size: 32.59251559251559
Average Fitness: 722149.6482291662
Fitness Variation: 837932.9185306701
Distribution: times -> 0.109, #1 -> 0.085, 302 -> 0.069, 99 -> 0.068, #2 -> 0.067, 475 -> 0.063, 486 -> 0.061, [] -> 0.045, #4 -> 0.042, plus -> 0.040
Last fitness increase: 127 generations ago.
------------
[4700.576s]Generation 260
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: 302; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (8,89) ; iter: #3; seedExpr: (8,89) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 893
Average Size: 32.2047817047817
Average Fitness: 681694.517069625
Fitness Variation: 835544.7284302955
Distribution: times -> 0.109, #1 -> 0.084, 99 -> 0.069, 302 -> 0.068, #2 -> 0.067, 475 -> 0.064, 486 -> 0.061, [] -> 0.044, #4 -> 0.043, plus -> 0.040
Last fitness increase: 128 generations ago.
------------
[4718.438s]Generation 261
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: 170; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #3; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 878
Average Size: 32.21829521829522
Average Fitness: 725752.1902331613
Fitness Variation: 836113.9511824077
Distribution: times -> 0.108, #1 -> 0.083, 302 -> 0.069, 99 -> 0.069, #2 -> 0.066, 475 -> 0.063, 486 -> 0.061, [] -> 0.044, #4 -> 0.043, plus -> 0.039
Last fitness increase: 129 generations ago.
------------
[4736.816s]Generation 262
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 99 ; iter: 475; seedExpr: 99 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: (271,212); seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 892
Average Size: 32.29106029106029
Average Fitness: 720755.7096481861
Fitness Variation: 839476.932358634
Distribution: times -> 0.107, #1 -> 0.086, 302 -> 0.068, 99 -> 0.068, #2 -> 0.065, 475 -> 0.062, 486 -> 0.061, #4 -> 0.044, [] -> 0.043, plus -> 0.040
Last fitness increase: 130 generations ago.
------------
[4755.630s]Generation 263
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 480 ; iter: 170; seedExpr: 480 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #3; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 901
Average Size: 31.977130977130976
Average Fitness: 662641.467014123
Fitness Variation: 824756.5076781223
Distribution: times -> 0.106, #1 -> 0.087, #2 -> 0.068, 99 -> 0.068, 302 -> 0.068, 475 -> 0.062, 486 -> 0.059, [] -> 0.046, #4 -> 0.044, plus -> 0.039
Last fitness increase: 131 generations ago.
------------
[4774.066s]Generation 264
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 486 ; iter: 486; seedExpr: 486 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 257)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (159,240) ; iter: #3; seedExpr: (159,240) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 905
Average Size: 32.42307692307692
Average Fitness: 721152.3016180301
Fitness Variation: 842550.7741848481
Distribution: times -> 0.109, #1 -> 0.085, 99 -> 0.069, 302 -> 0.068, #2 -> 0.065, 475 -> 0.063, 486 -> 0.061, [] -> 0.043, #4 -> 0.043, plus -> 0.040
Last fitness increase: 132 generations ago.
------------
[4791.541s]Generation 265
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: 171; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (355,38) ; iter: #2; seedExpr: (355,38) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 893
Average Size: 32.27962577962578
Average Fitness: 704704.9202493937
Fitness Variation: 839194.5825769864
Distribution: times -> 0.109, #1 -> 0.083, 99 -> 0.071, 302 -> 0.069, #2 -> 0.067, 475 -> 0.063, 486 -> 0.060, [] -> 0.044, #4 -> 0.042, plus -> 0.039
Last fitness increase: 133 generations ago.
------------
[4809.044s]Generation 266
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: 170; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (433,347) ; iter: #3; seedExpr: (433,347) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 888
Average Size: 32.21309771309771
Average Fitness: 753765.7469517172
Fitness Variation: 847351.725477538
Distribution: times -> 0.105, #1 -> 0.086, #2 -> 0.068, 99 -> 0.068, 302 -> 0.067, 475 -> 0.062, 486 -> 0.060, [] -> 0.044, #4 -> 0.042, plus -> 0.040
Last fitness increase: 134 generations ago.
------------
[4826.575s]Generation 267
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 117 ; iter: 353; seedExpr: 117 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (21,392) ; iter: (185,20); seedExpr: (21,392) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 897
Average Size: 32.34927234927235
Average Fitness: 733667.5695224496
Fitness Variation: 845241.5929159358
Distribution: times -> 0.108, #1 -> 0.083, 99 -> 0.070, 302 -> 0.069, #2 -> 0.067, 475 -> 0.063, 486 -> 0.060, [] -> 0.045, #4 -> 0.041, plus -> 0.040
Last fitness increase: 135 generations ago.
------------
[4844.440s]Generation 268
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: 170; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 895
Average Size: 32.358627858627855
Average Fitness: 728306.8629207633
Fitness Variation: 844799.1457356974
Distribution: times -> 0.109, #1 -> 0.082, 302 -> 0.070, 99 -> 0.069, #2 -> 0.068, 475 -> 0.062, 486 -> 0.061, [] -> 0.045, #4 -> 0.042, plus -> 0.039
Last fitness increase: 136 generations ago.
------------
[4862.516s]Generation 269
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 375 ; iter: #1; seedExpr: 375 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (240,346) ; iter: (176,375); seedExpr: (240,346) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 890
Average Size: 32.08212058212058
Average Fitness: 705244.815741441
Fitness Variation: 837664.3049089097
Distribution: times -> 0.108, #1 -> 0.085, 99 -> 0.069, 302 -> 0.069, #2 -> 0.067, 475 -> 0.064, 486 -> 0.060, [] -> 0.044, #4 -> 0.042, plus -> 0.041
Last fitness increase: 137 generations ago.
------------
[4880.811s]Generation 270
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 213 ; iter: 302; seedExpr: 213 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (374,148) ; iter: #2; seedExpr: (374,148) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 900
Average Size: 32.16528066528066
Average Fitness: 706922.7540257338
Fitness Variation: 837279.0224225621
Distribution: times -> 0.109, #1 -> 0.083, 99 -> 0.070, 302 -> 0.070, #2 -> 0.067, 475 -> 0.065, 486 -> 0.060, [] -> 0.043, #4 -> 0.042, plus -> 0.040
Last fitness increase: 138 generations ago.
------------
[4899.061s]Generation 271
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 257 ; iter: 475; seedExpr: 257 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: (271,212); seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 893
Average Size: 32.316008316008315
Average Fitness: 726725.6853890249
Fitness Variation: 841281.2840330002
Distribution: times -> 0.111, #1 -> 0.084, 302 -> 0.071, 99 -> 0.070, #2 -> 0.067, 475 -> 0.064, 486 -> 0.061, #4 -> 0.042, [] -> 0.042, plus -> 0.040
Last fitness increase: 139 generations ago.
------------
[4917.120s]Generation 272
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 142 ; iter: 475; seedExpr: 142 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (11,245) ; iter: (396,126); seedExpr: (11,245) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 893
Average Size: 32.33575883575884
Average Fitness: 711063.7487360609
Fitness Variation: 839934.4566746791
Distribution: times -> 0.110, #1 -> 0.084, 302 -> 0.071, 99 -> 0.070, #2 -> 0.067, 475 -> 0.063, 486 -> 0.060, [] -> 0.043, #4 -> 0.043, plus -> 0.039
Last fitness increase: 140 generations ago.
------------
[4935.453s]Generation 273
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 475 ; iter: 170; seedExpr: 475 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (139,362) ; iter: #3; seedExpr: (139,362) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 902
Average Size: 32.03430353430353
Average Fitness: 707404.8719414012
Fitness Variation: 842903.9040530367
Distribution: times -> 0.111, #1 -> 0.085, 302 -> 0.071, 99 -> 0.070, #2 -> 0.068, 475 -> 0.064, 486 -> 0.060, #4 -> 0.044, [] -> 0.042, plus -> 0.040
Last fitness increase: 141 generations ago.
------------
[4953.181s]Generation 274
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 213 ; iter: #1; seedExpr: 213 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (374,148) ; iter: (382,441); seedExpr: (374,148) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 891
Average Size: 32.36902286902287
Average Fitness: 754259.9479482438
Fitness Variation: 846025.4134240289
Distribution: times -> 0.109, #1 -> 0.084, 302 -> 0.069, 99 -> 0.068, #2 -> 0.068, 475 -> 0.064, 486 -> 0.060, [] -> 0.043, #4 -> 0.043, plus -> 0.040
Last fitness increase: 142 generations ago.
------------
[4971.522s]Generation 275
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 49 ; iter: 314; seedExpr: 49 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (39,161) ; iter: (355,38); seedExpr: (39,161) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 886
Average Size: 32.264033264033266
Average Fitness: 754115.0451993673
Fitness Variation: 846782.5700632945
Distribution: times -> 0.109, #1 -> 0.084, 99 -> 0.070, 302 -> 0.070, #2 -> 0.068, 475 -> 0.064, 486 -> 0.059, #4 -> 0.044, [] -> 0.043, plus -> 0.040
Last fitness increase: 143 generations ago.
------------
[4989.154s]Generation 276
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 213 ; iter: #0; seedExpr: 213 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (64,341) ; iter: (271,212); seedExpr: (64,341) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 880
Average Size: 32.15904365904366
Average Fitness: 733099.2032039772
Fitness Variation: 845189.838351168
Distribution: times -> 0.112, #1 -> 0.084, 99 -> 0.073, 302 -> 0.072, #2 -> 0.066, 475 -> 0.063, 486 -> 0.061, #4 -> 0.043, [] -> 0.041, bitOr -> 0.040
Last fitness increase: 144 generations ago.
------------
[5007.151s]Generation 277
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 270 ; iter: 170; seedExpr: 270 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (427,335) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (427,335) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(427,335)]), Vector([(427,335),(335,950)]), Vector([(427,335),(335,950),(950,29062350)]), Vector([(427,335),(335,950),(950,29062350),(29062350,58123750)]), Vector([(427,335),(335,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(427,335),(335,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 902
Average Size: 31.982328482328484
Average Fitness: 708073.3161805001
Fitness Variation: 837098.9784037463
Distribution: times -> 0.111, #1 -> 0.086, 302 -> 0.071, 99 -> 0.071, #2 -> 0.068, 475 -> 0.064, 486 -> 0.060, #4 -> 0.044, [] -> 0.041, plus -> 0.040
Last fitness increase: 145 generations ago.
------------
[5025.164s]Generation 278
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 151 ; iter: 475; seedExpr: 151 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (21,392) ; iter: (21,392); seedExpr: (21,392) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 898
Average Size: 32.13929313929314
Average Fitness: 722593.714090655
Fitness Variation: 843006.5706071061
Distribution: times -> 0.108, #1 -> 0.087, 302 -> 0.069, 99 -> 0.069, #2 -> 0.067, 475 -> 0.063, 486 -> 0.059, #4 -> 0.044, [] -> 0.042, plus -> 0.040
Last fitness increase: 146 generations ago.
------------
[5043.521s]Generation 279
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 373 ; iter: 170; seedExpr: 373 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (479,404) ; iter: #2; seedExpr: (479,404) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 886
Average Size: 32.108108108108105
Average Fitness: 729975.9169930319
Fitness Variation: 841764.6872033626
Distribution: times -> 0.107, #1 -> 0.087, 99 -> 0.069, 302 -> 0.069, #2 -> 0.068, 475 -> 0.064, 486 -> 0.058, #4 -> 0.044, [] -> 0.042, plus -> 0.041
Last fitness increase: 147 generations ago.
------------
[5061.522s]Generation 280
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Mutate
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 183 ; iter: 353; seedExpr: 183 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (405,160) ; iter: (194,115); seedExpr: (405,160) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 895
Average Size: 32.09251559251559
Average Fitness: 721373.5746631653
Fitness Variation: 840186.1907254808
Distribution: times -> 0.109, #1 -> 0.087, 99 -> 0.070, 302 -> 0.070, #2 -> 0.068, 475 -> 0.062, 486 -> 0.060, #4 -> 0.043, [] -> 0.042, 353 -> 0.039
Last fitness increase: 148 generations ago.
------------
[5079.477s]Generation 281
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Crossover
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 152 ; iter: #1; seedExpr: 152 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (271,212) ; iter: #2; seedExpr: (271,212) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 899
Average Size: 32.08939708939709
Average Fitness: 678472.9581216044
Fitness Variation: 831840.3715472075
Distribution: times -> 0.106, #1 -> 0.086, 302 -> 0.069, 99 -> 0.069, #2 -> 0.069, 475 -> 0.061, 486 -> 0.058, [] -> 0.044, #4 -> 0.043, plus -> 0.040
Last fitness increase: 149 generations ago.
------------
[5097.975s]Generation 282
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 302 ; iter: #1; seedExpr: 302 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (374,148) ; iter: (382,441); seedExpr: (374,148) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: #4; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 891
Average Size: 32.185031185031185
Average Fitness: 736130.792907997
Fitness Variation: 842926.0745605694
Distribution: times -> 0.109, #1 -> 0.086, 99 -> 0.070, 302 -> 0.070, #2 -> 0.069, 475 -> 0.060, 486 -> 0.059, #4 -> 0.044, [] -> 0.042, 353 -> 0.040
Last fitness increase: 150 generations ago.
------------
[5116.245s]Generation 283
Best Result: (fitness: 1756768.6, performance: 1796418.0), Created by Copy
[O0: EVect(EPair(EInt,EInt))] -> #4
*
[S0: EInt]{ seed: 244 ; iter: 170; seedExpr: 244 }
[S1: EInt]{ seed: 475 ; iter: plus(plus(bitOr(times(times(99, 302), 486), 475), 142), dec(#1)); seedExpr: 475 }
[S2: EPair(EInt,EInt)]{ seed: (271,212) ; iter: mkPair(pair2(#2), bitShift(#1, 353)); seedExpr: (271,212) }
[S3: EPair(EInt,EInt)]{ seed: (239,26) ; iter: #2; seedExpr: (239,26) }
[S4: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: append(#4, #2); seedExpr: [] }
[S5: EVect(EPair(EInt,EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([(271,212)]), Vector([(271,212),(212,950)]), Vector([(271,212),(212,950),(950,29062350)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150)]), Vector([(271,212),(212,950),(950,29062350),(29062350,58123750),(58123750,87185150),(87185150,116246550)]), ...
Diversity: 882
Average Size: 32.38565488565489
Average Fitness: 712060.2848211904
Fitness Variation: 839831.9641181737
Distribution: times -> 0.110, #1 -> 0.085, 302 -> 0.071, 99 -> 0.071, #2 -> 0.068, 486 -> 0.059, 475 -> 0.059, #4 -> 0.043, [] -> 0.042, plus -> 0.040
Last fitness increase: 151 generations ago.
Evolution Finished!
