[Configuration]
sizeOfInterest = 500

populationSize: 500
tournamentSize: 7
evaluationTrials：3
totalSizeTolerance：100
singleSizeTolerance：30
threadNum：1
timeLimitInMillis：120000
maxNonIncreaseTime：150
       
[End of Configuration]

[Function map]
EVect(EInt) -> {append: (EVect(EInt),EInt) => EVect(EInt), prepend: (EInt,EVect(EInt)) => EVect(EInt), access: (EVect(EVect(EInt)),EInt,EVect(EInt)) => EVect(EInt), concat: (EVect(EInt),EVect(EInt)) => EVect(EInt)}
EInt -> {inc: (EInt) => EInt, dec: (EInt) => EInt, neg: (EInt) => EInt, plus: (EInt,EInt) => EInt, minus: (EInt,EInt) => EInt, times: (EInt,EInt) => EInt, divide: (EInt,EInt) => EInt, modular: (EInt,EInt) => EInt, access: (EVect(EInt),EInt,EInt) => EInt, length: (EVect(EInt)) => EInt, length: (EVect(EVect(EInt))) => EInt, bitAnd: (EInt,EInt) => EInt, bitOr: (EInt,EInt) => EInt, bitXor: (EInt,EInt) => EInt, bitShift: (EInt,EInt) => EInt}
EVect(EVect(EInt)) -> {append: (EVect(EVect(EInt)),EVect(EInt)) => EVect(EVect(EInt)), prepend: (EVect(EInt),EVect(EVect(EInt))) => EVect(EVect(EInt)), concat: (EVect(EVect(EInt)),EVect(EVect(EInt))) => EVect(EVect(EInt))}
[End of Function map]

------------
[0.107s]Generation 1
Best Result: (fitness: 1743.5, performance: 1756.0), Created by Init
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 56 ; iter: inc(#0); seedExpr: times(7, 8) }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(bitShift(3, 11), #4); seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(append(#2, #4), []); seedExpr: [] }
[S3: EInt]{ seed: 9 ; iter: #3; seedExpr: bitOr(dec(plus(6, 4)), 0) }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[],[]]), Vector([[],[],[],[],[],[],[],[]]), Vector([[],[],[],[],[],[],[],[],[],[]]), Vector([[],[],[],[],[],[],[],[],[],[],[],[]]), ...
Diversity: 500
Average Size: 52.642
Average Fitness: 262.53923824450175
Fitness Variation: 477.73100666937034
Distribution: [] -> 0.260, append -> 0.056, concat -> 0.054, prepend -> 0.054, #3 -> 0.051, #0 -> 0.050, #1 -> 0.042, #4 -> 0.041, #5 -> 0.036, access -> 0.035
------------
[4.725s]Generation 2
Best Result: (fitness: 1743.5, performance: 1756.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 56 ; iter: inc(#0); seedExpr: times(7, 8) }
[S1: EVect(EInt)]{ seed: [] ; iter: prepend(bitShift(3, 11), #4); seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(append(#2, #4), []); seedExpr: [] }
[S3: EInt]{ seed: 9 ; iter: #3; seedExpr: bitOr(dec(plus(6, 4)), 0) }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[],[]]), Vector([[],[],[],[],[],[],[],[]]), Vector([[],[],[],[],[],[],[],[],[],[]]), Vector([[],[],[],[],[],[],[],[],[],[],[],[]]), ...
Diversity: 458
Average Size: 57.368
Average Fitness: 960.7551767080997
Fitness Variation: 521.1741315719487
Distribution: [] -> 0.249, concat -> 0.058, append -> 0.058, prepend -> 0.058, #3 -> 0.052, #2 -> 0.049, #4 -> 0.047, #0 -> 0.046, #1 -> 0.041, #5 -> 0.038
------------
[8.775s]Generation 3
Best Result: (fitness: 1743.5, performance: 1756.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> prepend([], #2)
*
[S0: EInt]{ seed: 1 ; iter: divide(#0, 8); seedExpr: inc(bitShift(length([]), dec(8))) }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 8192 ; iter: #3; seedExpr: bitShift(8, 10) }
[S4: EVect(EInt)]{ seed: [] ; iter: append([], #0); seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
Best Individual Pattern: Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), Vector([[],[],[],[],[],[],[]]), ...
Diversity: 433
Average Size: 48.78
Average Fitness: 1419.124690387434
Fitness Variation: 415.76406082645985
Distribution: [] -> 0.264, #3 -> 0.061, prepend -> 0.058, #0 -> 0.050, concat -> 0.050, #2 -> 0.049, append -> 0.048, #4 -> 0.042, access -> 0.036, #5 -> 0.032
------------
[14.704s]Generation 4
Best Result: (fitness: 1748.7, performance: 1756.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> prepend([], #2)
*
[S0: EInt]{ seed: 7 ; iter: divide(#0, 8); seedExpr: bitAnd(7, 7) }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 8192 ; iter: #3; seedExpr: bitShift(8, 10) }
[S4: EVect(EInt)]{ seed: [] ; iter: append([], #0); seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
Best Individual Pattern: Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), Vector([[],[],[],[],[],[],[]]), ...
Diversity: 427
Average Size: 40.492
Average Fitness: 1581.7932144955857
Fitness Variation: 394.0705204613617
Distribution: [] -> 0.293, #3 -> 0.085, prepend -> 0.056, #0 -> 0.051, #2 -> 0.050, append -> 0.046, concat -> 0.042, 8 -> 0.038, access -> 0.035, #4 -> 0.029
------------
[18.747s]Generation 5
Best Result: (fitness: 1754.0, performance: 1756.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> concat(#2, [])
*
[S0: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [10] ; iter: #4; seedExpr: prepend(10, []) }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 416
Average Size: 33.418
Average Fitness: 1580.8852003453871
Fitness Variation: 466.9349228314273
Distribution: [] -> 0.287, #3 -> 0.090, #2 -> 0.066, #0 -> 0.054, prepend -> 0.048, 8 -> 0.044, append -> 0.039, access -> 0.033, #5 -> 0.024, concat -> 0.024
------------
[22.875s]Generation 6
Best Result: (fitness: 1754.7, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> concat(#2, [])
*
[S0: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 428
Average Size: 28.466
Average Fitness: 1605.3174018880036
Fitness Variation: 448.5972895498887
Distribution: [] -> 0.262, #2 -> 0.078, #3 -> 0.059, #0 -> 0.049, prepend -> 0.043, append -> 0.042, #4 -> 0.039, 8 -> 0.037, 0 -> 0.035, #5 -> 0.031
------------
[26.972s]Generation 7
Best Result: (fitness: 1754.7, performance: 1756.0), Created by Copy
[O0: EVect(EVect(EInt))] -> concat(#2, [])
*
[S0: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 405
Average Size: 25.026
Average Fitness: 1574.848218555653
Fitness Variation: 497.5710905641902
Distribution: [] -> 0.305, #2 -> 0.102, #0 -> 0.053, append -> 0.046, prepend -> 0.045, #5 -> 0.042, #3 -> 0.041, 8 -> 0.035, #4 -> 0.031, concat -> 0.029
------------
[31.149s]Generation 8
Best Result: (fitness: 1754.7, performance: 1756.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> concat(#2, [])
*
[S0: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 386
Average Size: 22.154
Average Fitness: 1575.8322078734905
Fitness Variation: 502.41079524475634
Distribution: [] -> 0.321, #2 -> 0.127, #0 -> 0.052, #5 -> 0.048, append -> 0.048, prepend -> 0.040, #1 -> 0.037, concat -> 0.035, 7 -> 0.034, #4 -> 0.028
------------
[34.543s]Generation 9
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 361
Average Size: 19.806
Average Fitness: 1485.7632730417522
Fitness Variation: 618.0995309378287
Distribution: [] -> 0.338, #2 -> 0.156, 7 -> 0.055, append -> 0.046, #1 -> 0.045, #0 -> 0.042, concat -> 0.040, #4 -> 0.040, prepend -> 0.035, #5 -> 0.035
------------
[37.405s]Generation 10
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 321
Average Size: 18.532
Average Fitness: 1541.7656146042175
Fitness Variation: 560.7756779954713
Distribution: [] -> 0.356, #2 -> 0.175, 7 -> 0.065, append -> 0.049, #1 -> 0.046, #4 -> 0.044, concat -> 0.040, #0 -> 0.039, 6 -> 0.034, prepend -> 0.025
------------
[39.567s]Generation 11
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 331
Average Size: 17.924
Average Fitness: 1466.6152532766466
Fitness Variation: 636.317602941728
Distribution: [] -> 0.355, #2 -> 0.182, 7 -> 0.068, append -> 0.053, #1 -> 0.050, #4 -> 0.050, #0 -> 0.044, 6 -> 0.039, concat -> 0.038, #3 -> 0.023
------------
[43.087s]Generation 12
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 312
Average Size: 17.282
Average Fitness: 1567.8999604892408
Fitness Variation: 521.1746532696571
Distribution: [] -> 0.345, #2 -> 0.173, 7 -> 0.067, #4 -> 0.053, append -> 0.053, #1 -> 0.051, #0 -> 0.043, 6 -> 0.043, #3 -> 0.026, concat -> 0.026
------------
[45.419s]Generation 13
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 274
Average Size: 16.412
Average Fitness: 1549.9676884370717
Fitness Variation: 545.8521484626857
Distribution: [] -> 0.331, #2 -> 0.178, 7 -> 0.086, #4 -> 0.062, append -> 0.060, #0 -> 0.053, #1 -> 0.053, 6 -> 0.044, #3 -> 0.015, concat -> 0.014
------------
[47.553s]Generation 14
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 291
Average Size: 16.262
Average Fitness: 1532.3597493565724
Fitness Variation: 566.6735881476162
Distribution: [] -> 0.337, #2 -> 0.179, 7 -> 0.087, #4 -> 0.059, append -> 0.059, #1 -> 0.057, #0 -> 0.052, 6 -> 0.045, #3 -> 0.018, prepend -> 0.017
------------
[51.087s]Generation 15
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, #4); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 326
Average Size: 16.496
Average Fitness: 1548.1517044637785
Fitness Variation: 542.0198746005157
Distribution: [] -> 0.329, #2 -> 0.177, 7 -> 0.087, #4 -> 0.058, append -> 0.056, #1 -> 0.055, #0 -> 0.050, 6 -> 0.041, #3 -> 0.020, prepend -> 0.017
------------
[53.953s]Generation 16
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 351
Average Size: 16.638
Average Fitness: 1513.798974864185
Fitness Variation: 578.2024833478567
Distribution: [] -> 0.321, #2 -> 0.168, 7 -> 0.084, #4 -> 0.060, append -> 0.060, #1 -> 0.058, #0 -> 0.050, 6 -> 0.041, #3 -> 0.019, prepend -> 0.017
------------
[57.143s]Generation 17
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 5 ; iter: 7; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 335
Average Size: 16.388
Average Fitness: 1593.1511563215397
Fitness Variation: 485.5937983458055
Distribution: [] -> 0.348, #2 -> 0.175, 7 -> 0.087, #1 -> 0.059, append -> 0.057, #4 -> 0.048, #0 -> 0.048, 6 -> 0.042, prepend -> 0.016, #3 -> 0.015
------------
[60.228s]Generation 18
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 364
Average Size: 16.506
Average Fitness: 1555.713941863366
Fitness Variation: 538.6960956059656
Distribution: [] -> 0.341, #2 -> 0.169, 7 -> 0.080, append -> 0.061, #1 -> 0.056, #4 -> 0.056, #0 -> 0.048, 6 -> 0.040, #3 -> 0.018, prepend -> 0.016
------------
[63.377s]Generation 19
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 5; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, #1); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 386
Average Size: 16.5
Average Fitness: 1560.3995513252328
Fitness Variation: 532.8243865919452
Distribution: [] -> 0.343, #2 -> 0.168, 7 -> 0.082, append -> 0.059, #1 -> 0.056, #4 -> 0.054, #0 -> 0.048, 6 -> 0.039, prepend -> 0.017, #3 -> 0.016
------------
[66.697s]Generation 20
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 383
Average Size: 16.152
Average Fitness: 1563.8289869038301
Fitness Variation: 533.3841058456488
Distribution: [] -> 0.351, #2 -> 0.176, 7 -> 0.086, append -> 0.058, #1 -> 0.056, #4 -> 0.050, #0 -> 0.047, 6 -> 0.039, #3 -> 0.016, #5 -> 0.015
------------
[69.573s]Generation 21
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: 3; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 397
Average Size: 16.694
Average Fitness: 1554.8199131387173
Fitness Variation: 533.240366367265
Distribution: [] -> 0.339, #2 -> 0.162, 7 -> 0.081, append -> 0.057, #1 -> 0.054, #4 -> 0.054, #0 -> 0.044, 6 -> 0.036, prepend -> 0.018, concat -> 0.018
------------
[72.019s]Generation 22
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: 3; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 8 ; iter: 3; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 392
Average Size: 16.474
Average Fitness: 1541.3024931351097
Fitness Variation: 554.007820514252
Distribution: [] -> 0.337, #2 -> 0.169, 7 -> 0.080, append -> 0.058, #4 -> 0.056, #1 -> 0.056, #0 -> 0.045, 6 -> 0.039, #3 -> 0.019, concat -> 0.015
------------
[75.246s]Generation 23
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 6 ; iter: 7; seedExpr: 6 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 396
Average Size: 16.354
Average Fitness: 1549.1334968066112
Fitness Variation: 550.3924656075405
Distribution: [] -> 0.352, #2 -> 0.168, 7 -> 0.082, append -> 0.058, #1 -> 0.055, #4 -> 0.052, #0 -> 0.041, 6 -> 0.039, #5 -> 0.016, #3 -> 0.015
------------
[78.147s]Generation 24
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 0 ; iter: #0; seedExpr: 0 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 399
Average Size: 16.486
Average Fitness: 1496.6055388913317
Fitness Variation: 605.2189528524237
Distribution: [] -> 0.341, #2 -> 0.163, 7 -> 0.075, append -> 0.057, #1 -> 0.056, #4 -> 0.053, #0 -> 0.049, 6 -> 0.039, #5 -> 0.018, #3 -> 0.017
------------
[81.495s]Generation 25
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, #4); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 406
Average Size: 16.452
Average Fitness: 1545.9337519445148
Fitness Variation: 552.3556969375089
Distribution: [] -> 0.351, #2 -> 0.166, 7 -> 0.076, #4 -> 0.058, append -> 0.057, #1 -> 0.049, #0 -> 0.042, 6 -> 0.040, prepend -> 0.017, #3 -> 0.014
------------
[85.152s]Generation 26
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: 7; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 2; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 415
Average Size: 16.694
Average Fitness: 1510.1015942639424
Fitness Variation: 587.8263265725105
Distribution: [] -> 0.344, #2 -> 0.158, 7 -> 0.073, append -> 0.058, #4 -> 0.057, #1 -> 0.048, #0 -> 0.046, 6 -> 0.039, #3 -> 0.020, #5 -> 0.019
------------
[88.109s]Generation 27
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: 3; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 5; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 411
Average Size: 16.512
Average Fitness: 1519.4380462710976
Fitness Variation: 578.4059729223122
Distribution: [] -> 0.340, #2 -> 0.161, 7 -> 0.069, append -> 0.059, #4 -> 0.057, #1 -> 0.052, #0 -> 0.046, 6 -> 0.037, #3 -> 0.019, prepend -> 0.017
------------
[90.754s]Generation 28
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #3; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 406
Average Size: 16.382
Average Fitness: 1503.7767103891524
Fitness Variation: 597.4814423809339
Distribution: [] -> 0.341, #2 -> 0.167, 7 -> 0.067, #4 -> 0.058, append -> 0.057, #1 -> 0.050, #0 -> 0.044, 6 -> 0.039, prepend -> 0.019, #3 -> 0.017
------------
[93.278s]Generation 29
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 9 ; iter: 6; seedExpr: 9 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, #1); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 6; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 409
Average Size: 16.356
Average Fitness: 1547.1001591552422
Fitness Variation: 546.834069339597
Distribution: [] -> 0.342, #2 -> 0.164, 7 -> 0.069, #4 -> 0.060, append -> 0.056, #1 -> 0.051, #0 -> 0.045, 6 -> 0.036, #3 -> 0.022, prepend -> 0.015
------------
[95.817s]Generation 30
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 417
Average Size: 16.566
Average Fitness: 1510.4641181182408
Fitness Variation: 587.6626084341127
Distribution: [] -> 0.332, #2 -> 0.163, 7 -> 0.065, append -> 0.058, #4 -> 0.057, #1 -> 0.051, #0 -> 0.045, 6 -> 0.033, #3 -> 0.021, prepend -> 0.019
------------
[98.764s]Generation 31
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 2 ; iter: 3; seedExpr: 2 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 423
Average Size: 16.492
Average Fitness: 1520.2919398211761
Fitness Variation: 577.4156711667005
Distribution: [] -> 0.337, #2 -> 0.167, 7 -> 0.062, #4 -> 0.059, #1 -> 0.056, append -> 0.055, #0 -> 0.047, 6 -> 0.032, #3 -> 0.022, concat -> 0.018
------------
[101.783s]Generation 32
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 7; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: #3; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 410
Average Size: 16.324
Average Fitness: 1472.520637536893
Fitness Variation: 627.945755725817
Distribution: [] -> 0.336, #2 -> 0.166, #4 -> 0.063, append -> 0.059, 7 -> 0.059, #1 -> 0.058, #0 -> 0.045, 6 -> 0.029, #3 -> 0.025, prepend -> 0.018
------------
[104.549s]Generation 33
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: #3; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 398
Average Size: 16.41
Average Fitness: 1538.8331593776643
Fitness Variation: 560.0379067342072
Distribution: [] -> 0.345, #2 -> 0.163, #1 -> 0.059, 7 -> 0.059, append -> 0.058, #4 -> 0.052, #0 -> 0.040, 6 -> 0.029, #3 -> 0.028, #5 -> 0.019
------------
[107.339s]Generation 34
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 5; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, #4); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 418
Average Size: 16.468
Average Fitness: 1527.7766371923196
Fitness Variation: 572.9734865904792
Distribution: [] -> 0.333, #2 -> 0.161, #1 -> 0.066, append -> 0.059, 7 -> 0.056, #4 -> 0.051, #0 -> 0.041, 6 -> 0.032, #3 -> 0.030, #5 -> 0.019
------------
[109.766s]Generation 35
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: 3; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 8 ; iter: 7; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 411
Average Size: 16.402
Average Fitness: 1529.6890691872256
Fitness Variation: 571.1699964194512
Distribution: [] -> 0.344, #2 -> 0.163, #1 -> 0.064, append -> 0.058, 7 -> 0.053, #4 -> 0.048, #0 -> 0.042, #3 -> 0.027, 6 -> 0.026, prepend -> 0.018
------------
[112.528s]Generation 36
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 418
Average Size: 16.554
Average Fitness: 1561.6483891790306
Fitness Variation: 525.5489810487916
Distribution: [] -> 0.327, #2 -> 0.163, #1 -> 0.060, #4 -> 0.060, append -> 0.057, 7 -> 0.057, #0 -> 0.039, #3 -> 0.033, 6 -> 0.024, 4 -> 0.018
------------
[115.342s]Generation 37
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 2 ; iter: 10; seedExpr: 2 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, #1); seedExpr: [] }
[S3: EInt]{ seed: 2 ; iter: #3; seedExpr: 2 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 414
Average Size: 16.358
Average Fitness: 1522.3098939715626
Fitness Variation: 567.7367580663366
Distribution: [] -> 0.342, #2 -> 0.165, 7 -> 0.065, #4 -> 0.062, #1 -> 0.057, append -> 0.057, #0 -> 0.035, #3 -> 0.027, 6 -> 0.024, prepend -> 0.021
------------
[118.440s]Generation 38
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 9 ; iter: 11; seedExpr: 9 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 8; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 428
Average Size: 16.39
Average Fitness: 1550.5515148267862
Fitness Variation: 544.6584270542024
Distribution: [] -> 0.346, #2 -> 0.165, #4 -> 0.063, 7 -> 0.061, append -> 0.059, #1 -> 0.051, #0 -> 0.042, #3 -> 0.028, 6 -> 0.024, concat -> 0.016
------------
[121.329s]Generation 39
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: #3; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 421
Average Size: 16.762
Average Fitness: 1558.235990276318
Fitness Variation: 525.4006741595716
Distribution: [] -> 0.329, #2 -> 0.156, #4 -> 0.064, 7 -> 0.062, append -> 0.061, #1 -> 0.050, #0 -> 0.049, #3 -> 0.030, 6 -> 0.022, prepend -> 0.018
------------
[124.171s]Generation 40
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 387
Average Size: 16.51
Average Fitness: 1582.6577761564622
Fitness Variation: 496.6594924002728
Distribution: [] -> 0.340, #2 -> 0.165, #4 -> 0.061, 7 -> 0.061, append -> 0.059, #1 -> 0.056, #0 -> 0.043, #3 -> 0.028, 6 -> 0.020, 4 -> 0.017
------------
[127.677s]Generation 41
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 2; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, #1); seedExpr: [] }
[S3: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 416
Average Size: 16.458
Average Fitness: 1517.9511842061484
Fitness Variation: 579.6962182826514
Distribution: [] -> 0.340, #2 -> 0.162, #4 -> 0.063, 7 -> 0.060, append -> 0.057, #1 -> 0.050, #0 -> 0.043, #3 -> 0.029, 6 -> 0.021, #5 -> 0.018
------------
[130.467s]Generation 42
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 11; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 413
Average Size: 16.336
Average Fitness: 1552.3643201268044
Fitness Variation: 542.9590425643879
Distribution: [] -> 0.343, #2 -> 0.164, #4 -> 0.064, 7 -> 0.059, append -> 0.056, #1 -> 0.050, #0 -> 0.045, #3 -> 0.030, 6 -> 0.020, #5 -> 0.017
------------
[132.683s]Generation 43
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, #1); seedExpr: [] }
[S3: EInt]{ seed: 2 ; iter: 3; seedExpr: 2 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 422
Average Size: 16.284
Average Fitness: 1529.1036171099076
Fitness Variation: 565.7403860233134
Distribution: [] -> 0.350, #2 -> 0.163, #4 -> 0.065, 7 -> 0.060, append -> 0.060, #1 -> 0.049, #0 -> 0.038, #3 -> 0.029, 6 -> 0.020, #5 -> 0.020
------------
[135.812s]Generation 44
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: 2; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 424
Average Size: 16.342
Average Fitness: 1490.1259996829224
Fitness Variation: 611.9398037582748
Distribution: [] -> 0.345, #2 -> 0.159, #4 -> 0.064, 7 -> 0.060, append -> 0.059, #1 -> 0.052, #0 -> 0.041, #3 -> 0.029, #5 -> 0.022, 6 -> 0.020
------------
[138.796s]Generation 45
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 9 ; iter: 6; seedExpr: 9 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 9 ; iter: #3; seedExpr: 9 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 410
Average Size: 16.494
Average Fitness: 1554.1251790174829
Fitness Variation: 543.3933043316974
Distribution: [] -> 0.343, #2 -> 0.156, 7 -> 0.058, #4 -> 0.057, append -> 0.056, #1 -> 0.052, #0 -> 0.045, #3 -> 0.034, #5 -> 0.021, prepend -> 0.018
------------
[141.554s]Generation 46
Best Result: (fitness: 1755.2, performance: 1756.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 4 ; iter: #3; seedExpr: 4 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, []); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[]]), Vector([[],[]]), Vector([[],[],[]]), Vector([[],[],[],[]]), Vector([[],[],[],[],[]]), Vector([[],[],[],[],[],[]]), ...
Diversity: 419
Average Size: 16.46
Average Fitness: 1558.5431039416324
Fitness Variation: 531.9524953143749
Distribution: [] -> 0.350, #2 -> 0.157, append -> 0.060, #4 -> 0.058, 7 -> 0.057, #1 -> 0.052, #0 -> 0.040, #3 -> 0.024, #5 -> 0.023, 6 -> 0.020
------------
[144.348s]Generation 47
Best Result: (fitness: 2102.8, performance: 2366.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, concat(append(access([], 3, []), length(#2)), access(concat(#2, #2), access([], 7, 6), #1))); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[0]]), Vector([[0],[1,0]]), Vector([[0],[1,0],[2,0]]), Vector([[0],[1,0],[2,0],[3,0]]), Vector([[0],[1,0],[2,0],[3,0],[4,2,0]]), Vector([[0],[1,0],[2,0],[3,0],[4,2,0],[5,1,0]]), ...
Diversity: 425
Average Size: 16.304
Average Fitness: 1515.904513533444
Fitness Variation: 588.1029949639718
Distribution: [] -> 0.344, #2 -> 0.158, 7 -> 0.059, #4 -> 0.057, append -> 0.055, #1 -> 0.053, #0 -> 0.042, #3 -> 0.027, #5 -> 0.024, 6 -> 0.021
------------
[146.694s]Generation 48
Best Result: (fitness: 2102.8, performance: 2366.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, concat(append(access([], 3, []), length(#2)), access(concat(#2, #2), access(#4, 7, 6), #1))); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[0]]), Vector([[0],[1,0]]), Vector([[0],[1,0],[2,0]]), Vector([[0],[1,0],[2,0],[3,0]]), Vector([[0],[1,0],[2,0],[3,0],[4,2,0]]), Vector([[0],[1,0],[2,0],[3,0],[4,2,0],[5,1,0]]), ...
Diversity: 411
Average Size: 16.61
Average Fitness: 1549.8661969938644
Fitness Variation: 555.7501222245986
Distribution: [] -> 0.339, #2 -> 0.158, 7 -> 0.059, #4 -> 0.055, append -> 0.054, #1 -> 0.051, #0 -> 0.044, #3 -> 0.027, #5 -> 0.022, 6 -> 0.019
------------
[148.709s]Generation 49
Best Result: (fitness: 2640.5, performance: 2971.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, concat(append(access([], 3, []), length(#2)), access(concat(#2, #2), access(#4, 7, 8), #1))); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[0]]), Vector([[0],[1,0]]), Vector([[0],[1,0],[2,0]]), Vector([[0],[1,0],[2,0],[3,2,0]]), Vector([[0],[1,0],[2,0],[3,2,0],[4,0]]), Vector([[0],[1,0],[2,0],[3,2,0],[4,0],[5,3,2,0]]), ...
Diversity: 416
Average Size: 17.592
Average Fitness: 1511.4042850743592
Fitness Variation: 605.0854599440618
Distribution: [] -> 0.320, #2 -> 0.164, 7 -> 0.053, append -> 0.051, #1 -> 0.049, #4 -> 0.046, #0 -> 0.040, access -> 0.036, concat -> 0.029, 6 -> 0.027
------------
[151.270s]Generation 50
Best Result: (fitness: 2797.0, performance: 2971.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, concat(append([], length(#2)), access(concat(#2, #2), access(#4, 7, 8), #1))); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[0]]), Vector([[0],[1,0]]), Vector([[0],[1,0],[2,0]]), Vector([[0],[1,0],[2,0],[3,2,0]]), Vector([[0],[1,0],[2,0],[3,2,0],[4,0]]), Vector([[0],[1,0],[2,0],[3,2,0],[4,0],[5,3,2,0]]), ...
Diversity: 423
Average Size: 21.412
Average Fitness: 1603.9535147032964
Fitness Variation: 611.4704009439138
Distribution: [] -> 0.272, #2 -> 0.170, access -> 0.076, 7 -> 0.051, append -> 0.050, concat -> 0.047, #1 -> 0.045, 3 -> 0.037, 6 -> 0.036, #0 -> 0.034
------------
[152.861s]Generation 51
Best Result: (fitness: 4822.2, performance: 5657.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[10,2816],[]] ; iter: append(#2, concat(append(access([], 3, []), length(#2)), access(concat(#2, #2), access([], 0, 6), #1))); seedExpr: prepend(append(prepend(10, []), bitShift(11, 8)), concat(prepend([], []), [])) }
[S3: EInt]{ seed: 7 ; iter: #3; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[10,2816],[]]), Vector([[10,2816],[],[2,10,2816]]), Vector([[10,2816],[],[2,10,2816],[3,10,2816]]), Vector([[10,2816],[],[2,10,2816],[3,10,2816],[4,2,10,2816]]), Vector([[10,2816],[],[2,10,2816],[3,10,2816],[4,2,10,2816],[5]]), Vector([[10,2816],[],[2,10,2816],[3,10,2816],[4,2,10,2816],[5],[6,10,2816]]), Vector([[10,2816],[],[2,10,2816],[3,10,2816],[4,2,10,2816],[5],[6,10,2816],[7,6,10,2816]]), ...
Diversity: 410
Average Size: 31.282
Average Fitness: 1800.7834654500332
Fitness Variation: 678.6748870677372
Distribution: [] -> 0.222, #2 -> 0.173, access -> 0.106, concat -> 0.065, append -> 0.050, 7 -> 0.048, #1 -> 0.047, 3 -> 0.044, 6 -> 0.042, length -> 0.041
------------
[154.353s]Generation 52
Best Result: (fitness: 5202.4, performance: 5653.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11,11],[]] ; iter: append(#2, concat(append(#4, length(#2)), access(concat(#2, #2), access([], 0, 6), #1))); seedExpr: prepend(append(append([], 11), 11), prepend(concat([], []), [])) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11,11],[]]), Vector([[11,11],[],[2,11,11]]), Vector([[11,11],[],[2,11,11],[3,11,11]]), Vector([[11,11],[],[2,11,11],[3,11,11],[4,2,11,11]]), Vector([[11,11],[],[2,11,11],[3,11,11],[4,2,11,11],[5]]), Vector([[11,11],[],[2,11,11],[3,11,11],[4,2,11,11],[5],[6,11,11]]), Vector([[11,11],[],[2,11,11],[3,11,11],[4,2,11,11],[5],[6,11,11],[7,6,11,11]]), ...
Diversity: 416
Average Size: 33.03
Average Fitness: 2118.200898725293
Fitness Variation: 820.1056171418875
Distribution: [] -> 0.200, #2 -> 0.182, access -> 0.108, concat -> 0.070, append -> 0.051, 7 -> 0.051, #1 -> 0.049, length -> 0.046, 3 -> 0.045, #4 -> 0.041
------------
[155.592s]Generation 53
Best Result: (fitness: 5732.8, performance: 6307.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 3; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(concat(#2, #2), access(#4, 7, 8), #1))); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[0]]), Vector([[0],[2,0]]), Vector([[0],[2,0],[4,0]]), Vector([[0],[2,0],[4,0],[6,4,0]]), Vector([[0],[2,0],[4,0],[6,4,0],[8,0]]), Vector([[0],[2,0],[4,0],[6,4,0],[8,0],[10,6,4,0]]), ...
Diversity: 403
Average Size: 34.424
Average Fitness: 2492.335020042425
Fitness Variation: 1085.4611178355694
Distribution: [] -> 0.193, #2 -> 0.178, access -> 0.099, concat -> 0.074, append -> 0.055, 7 -> 0.050, #1 -> 0.049, length -> 0.046, #4 -> 0.044, 3 -> 0.042
------------
[156.780s]Generation 54
Best Result: (fitness: 5949.8, performance: 6557.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, concat(append(access([], 3, []), length(concat(#2, #2))), access(concat(#2, #2), 11, #1))); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: concat([], []); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[0]]), Vector([[0],[2,0]]), Vector([[0],[2,0],[4,2,0]]), Vector([[0],[2,0],[4,2,0],[6,4,2,0]]), Vector([[0],[2,0],[4,2,0],[6,4,2,0],[8,6,4,2,0]]), Vector([[0],[2,0],[4,2,0],[6,4,2,0],[8,6,4,2,0],[10,2,0]]), ...
Diversity: 434
Average Size: 37.576
Average Fitness: 2934.0798455202253
Fitness Variation: 1535.5488039398617
Distribution: [] -> 0.217, #2 -> 0.160, access -> 0.084, concat -> 0.075, append -> 0.059, #1 -> 0.041, length -> 0.039, 7 -> 0.037, 3 -> 0.037, #4 -> 0.035
------------
[158.276s]Generation 55
Best Result: (fitness: 6078.2, performance: 7021.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, concat(append([], length(concat(concat(#2, #2), #2))), access(concat(#2, #2), access(#4, 7, 8), #1))); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[0]]), Vector([[0],[3,0]]), Vector([[0],[3,0],[6,0]]), Vector([[0],[3,0],[6,0],[9,6,0]]), Vector([[0],[3,0],[6,0],[9,6,0],[12,0]]), Vector([[0],[3,0],[6,0],[9,6,0],[12,0],[15,9,6,0]]), ...
Diversity: 429
Average Size: 40.058
Average Fitness: 3597.457171389828
Fitness Variation: 1814.7041651203203
Distribution: [] -> 0.231, #2 -> 0.163, concat -> 0.083, access -> 0.074, append -> 0.062, prepend -> 0.043, #1 -> 0.040, length -> 0.033, #4 -> 0.033, 11 -> 0.032
------------
[159.912s]Generation 56
Best Result: (fitness: 6247.8, performance: 6557.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(concat(#2, #2), 11, #1))); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: concat([], []); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[0]]), Vector([[0],[2,0]]), Vector([[0],[2,0],[4,2,0]]), Vector([[0],[2,0],[4,2,0],[6,4,2,0]]), Vector([[0],[2,0],[4,2,0],[6,4,2,0],[8,6,4,2,0]]), Vector([[0],[2,0],[4,2,0],[6,4,2,0],[8,6,4,2,0],[10,2,0]]), ...
Diversity: 430
Average Size: 37.396
Average Fitness: 4147.725320028246
Fitness Variation: 1870.1951867288722
Distribution: [] -> 0.209, #2 -> 0.199, concat -> 0.100, append -> 0.067, access -> 0.067, #1 -> 0.046, #4 -> 0.044, prepend -> 0.037, length -> 0.036, 11 -> 0.034
------------
[161.455s]Generation 57
Best Result: (fitness: 6381.8, performance: 7021.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 3; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, concat(append([], length(concat(#2, concat(#2, #2)))), access(#2, access(#4, 7, 8), #1))); seedExpr: [] }
[S3: EInt]{ seed: 10 ; iter: 7; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[0]]), Vector([[0],[3,0]]), Vector([[0],[3,0],[6,0]]), Vector([[0],[3,0],[6,0],[9,6,0]]), Vector([[0],[3,0],[6,0],[9,6,0],[12,0]]), Vector([[0],[3,0],[6,0],[9,6,0],[12,0],[15,9,6,0]]), ...
Diversity: 410
Average Size: 34.78
Average Fitness: 4178.900099185495
Fitness Variation: 2105.7970552948764
Distribution: #2 -> 0.231, [] -> 0.182, concat -> 0.118, access -> 0.065, append -> 0.063, #1 -> 0.055, #4 -> 0.044, length -> 0.038, 7 -> 0.036, prepend -> 0.026
------------
[162.694s]Generation 58
Best Result: (fitness: 6686.1, performance: 7017.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(concat(#2, #5), 11, #1))); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: concat([], #2); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[0]]), Vector([[0],[2,0]]), Vector([[0],[2,0],[4,0]]), Vector([[0],[2,0],[4,0],[6,2,0]]), Vector([[0],[2,0],[4,0],[6,2,0],[8,0]]), Vector([[0],[2,0],[4,0],[6,2,0],[8,0],[10,4,0]]), ...
Diversity: 405
Average Size: 32.732
Average Fitness: 4488.716843523498
Fitness Variation: 2142.6930264785046
Distribution: #2 -> 0.252, [] -> 0.171, concat -> 0.131, access -> 0.063, #1 -> 0.058, append -> 0.057, length -> 0.040, #4 -> 0.036, 7 -> 0.034, #0 -> 0.028
------------
[164.284s]Generation 59
Best Result: (fitness: 6853.5, performance: 7342.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(concat(#2, #5), 11, #1))); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: concat([], concat(#2, concat(concat([], []), append([], #1)))); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[0]]), Vector([[0],[2]]), Vector([[0],[2],[4]]), Vector([[0],[2],[4],[6]]), Vector([[0],[2],[4],[6],[8,6]]), Vector([[0],[2],[4],[6],[8,6],[10,2]]), ...
Diversity: 407
Average Size: 33.184
Average Fitness: 4678.2688486525085
Fitness Variation: 2227.326456588292
Distribution: #2 -> 0.268, [] -> 0.152, concat -> 0.147, access -> 0.060, #1 -> 0.060, append -> 0.054, length -> 0.041, #4 -> 0.036, 7 -> 0.036, #0 -> 0.026
------------
[166.096s]Generation 60
Best Result: (fitness: 6853.5, performance: 7342.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(concat(#2, #5), 11, #1))); seedExpr: [] }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: concat([], concat(#2, concat(concat([], []), append([], #1)))); seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[0]]), Vector([[0],[2]]), Vector([[0],[2],[4]]), Vector([[0],[2],[4],[6]]), Vector([[0],[2],[4],[6],[8,6]]), Vector([[0],[2],[4],[6],[8,6],[10,2]]), ...
Diversity: 395
Average Size: 33.312
Average Fitness: 4788.046465832741
Fitness Variation: 2312.743268459924
Distribution: #2 -> 0.261, [] -> 0.160, concat -> 0.138, #1 -> 0.066, append -> 0.062, access -> 0.055, length -> 0.041, 7 -> 0.035, #4 -> 0.032, #0 -> 0.025
------------
[168.046s]Generation 61
Best Result: (fitness: 6961.8, performance: 7508.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[9],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(concat(#2, #2), 11, #1))); seedExpr: prepend(append([], 9), prepend(access([], 10, []), append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[9],[],[]]), Vector([[9],[],[],[6]]), Vector([[9],[],[],[6],[8,6]]), Vector([[9],[],[],[6],[8,6],[10]]), Vector([[9],[],[],[6],[8,6],[10],[12,10]]), Vector([[9],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[9],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 394
Average Size: 34.578
Average Fitness: 4573.893570167558
Fitness Variation: 2485.3497167546475
Distribution: #2 -> 0.243, [] -> 0.180, concat -> 0.138, append -> 0.067, #1 -> 0.064, access -> 0.048, length -> 0.038, #0 -> 0.032, 7 -> 0.030, 11 -> 0.024
------------
[170.194s]Generation 62
Best Result: (fitness: 6963.7, performance: 7510.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(concat(#2, #2), 11, #1))); seedExpr: prepend(append([], 0), prepend(access([], 10, []), append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[],[]]), Vector([[0],[],[],[6]]), Vector([[0],[],[],[6],[8,6]]), Vector([[0],[],[],[6],[8,6],[10]]), Vector([[0],[],[],[6],[8,6],[10],[12,10]]), Vector([[0],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[0],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 397
Average Size: 35.108
Average Fitness: 5001.958952067738
Fitness Variation: 2466.249636663046
Distribution: #2 -> 0.234, [] -> 0.194, concat -> 0.142, #1 -> 0.072, append -> 0.069, access -> 0.043, length -> 0.040, #0 -> 0.029, 11 -> 0.028, 7 -> 0.026
------------
[172.387s]Generation 63
Best Result: (fitness: 7009.4, performance: 7509.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[4],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(concat(#2, #2), 11, #1))); seedExpr: prepend(append([], bitXor(7, 3)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[4],[],[]]), Vector([[4],[],[],[6]]), Vector([[4],[],[],[6],[8,6]]), Vector([[4],[],[],[6],[8,6],[10]]), Vector([[4],[],[],[6],[8,6],[10],[12,10]]), Vector([[4],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[4],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 405
Average Size: 38.63
Average Fitness: 5174.976523471836
Fitness Variation: 2461.0200734492423
Distribution: [] -> 0.226, #2 -> 0.207, concat -> 0.133, append -> 0.076, #1 -> 0.068, access -> 0.043, length -> 0.036, 11 -> 0.034, 7 -> 0.027, #0 -> 0.021
------------
[174.139s]Generation 64
Best Result: (fitness: 7066.5, performance: 7508.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: dec(#3); seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[9],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(concat(#2, #2), 11, #1))); seedExpr: prepend(append([], 9), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[9],[],[]]), Vector([[9],[],[],[6]]), Vector([[9],[],[],[6],[8,6]]), Vector([[9],[],[],[6],[8,6],[10]]), Vector([[9],[],[],[6],[8,6],[10],[12,10]]), Vector([[9],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[9],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 421
Average Size: 39.424
Average Fitness: 5267.344562575866
Fitness Variation: 2430.7489774936776
Distribution: [] -> 0.246, #2 -> 0.203, concat -> 0.124, append -> 0.080, #1 -> 0.058, access -> 0.044, length -> 0.036, 11 -> 0.035, prepend -> 0.024, 7 -> 0.023
------------
[176.055s]Generation 65
Best Result: (fitness: 7084.1, performance: 7589.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #3; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[3],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(concat(#2, #2), 11, #1))); seedExpr: prepend(append([], bitXor(7, 4)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[3],[],[]]), Vector([[3],[],[],[6]]), Vector([[3],[],[],[6],[8,6]]), Vector([[3],[],[],[6],[8,6],[10]]), Vector([[3],[],[],[6],[8,6],[10],[12,10]]), Vector([[3],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[3],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 434
Average Size: 39.102
Average Fitness: 5243.110332964484
Fitness Variation: 2486.8432297849213
Distribution: [] -> 0.255, #2 -> 0.204, concat -> 0.111, append -> 0.083, #1 -> 0.051, access -> 0.045, 11 -> 0.037, length -> 0.036, prepend -> 0.030, #0 -> 0.021
------------
[177.661s]Generation 66
Best Result: (fitness: 7257.1, performance: 7508.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: length(concat(#2, #2)); seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[],[]] ; iter: append(#2, concat(append([], #0), access(concat(#2, #2), 11, #1))); seedExpr: prepend(append([], 0), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[],[]]), Vector([[0],[],[],[5]]), Vector([[0],[],[],[5],[6,5]]), Vector([[0],[],[],[5],[6,5],[8]]), Vector([[0],[],[],[5],[6,5],[8],[10,8]]), Vector([[0],[],[],[5],[6,5],[8],[10,8],[12,6,5]]), Vector([[0],[],[],[5],[6,5],[8],[10,8],[12,6,5],[14,5]]), ...
Diversity: 414
Average Size: 38.31
Average Fitness: 5292.260832585243
Fitness Variation: 2478.4522957155395
Distribution: [] -> 0.250, #2 -> 0.213, concat -> 0.108, append -> 0.088, #1 -> 0.050, 11 -> 0.040, length -> 0.039, access -> 0.038, prepend -> 0.034, 7 -> 0.024
------------
[178.783s]Generation 67
Best Result: (fitness: 7257.1, performance: 7508.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: length(concat(#2, #2)); seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[],[]] ; iter: append(#2, concat(append([], #0), access(concat(#2, #2), 11, #1))); seedExpr: prepend(append([], 0), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[],[]]), Vector([[0],[],[],[5]]), Vector([[0],[],[],[5],[6,5]]), Vector([[0],[],[],[5],[6,5],[8]]), Vector([[0],[],[],[5],[6,5],[8],[10,8]]), Vector([[0],[],[],[5],[6,5],[8],[10,8],[12,6,5]]), Vector([[0],[],[],[5],[6,5],[8],[10,8],[12,6,5],[14,5]]), ...
Diversity: 414
Average Size: 37.39
Average Fitness: 5429.955563844024
Fitness Variation: 2544.211932264639
Distribution: [] -> 0.249, #2 -> 0.221, concat -> 0.110, append -> 0.090, #1 -> 0.049, length -> 0.041, 11 -> 0.041, access -> 0.034, prepend -> 0.033, 7 -> 0.023
------------
[180.457s]Generation 68
Best Result: (fitness: 7257.1, performance: 7508.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: length(concat(#2, #2)); seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[],[]] ; iter: append(#2, concat(append([], #0), access(concat(#2, #2), 11, #1))); seedExpr: prepend(append([], 0), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[],[]]), Vector([[0],[],[],[5]]), Vector([[0],[],[],[5],[6,5]]), Vector([[0],[],[],[5],[6,5],[8]]), Vector([[0],[],[],[5],[6,5],[8],[10,8]]), Vector([[0],[],[],[5],[6,5],[8],[10,8],[12,6,5]]), Vector([[0],[],[],[5],[6,5],[8],[10,8],[12,6,5],[14,5]]), ...
Diversity: 417
Average Size: 36.854
Average Fitness: 5209.472286606385
Fitness Variation: 2623.640349868877
Distribution: [] -> 0.250, #2 -> 0.207, concat -> 0.099, append -> 0.092, #1 -> 0.048, 11 -> 0.041, length -> 0.038, prepend -> 0.036, access -> 0.033, 7 -> 0.026
------------
[181.744s]Generation 69
Best Result: (fitness: 7344.1, performance: 7670.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: dec(0); seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 418
Average Size: 36.652
Average Fitness: 5285.48215939824
Fitness Variation: 2589.2059326910166
Distribution: [] -> 0.257, #2 -> 0.194, append -> 0.096, concat -> 0.089, #1 -> 0.048, 11 -> 0.047, length -> 0.037, prepend -> 0.037, access -> 0.035, 7 -> 0.029
------------
[183.073s]Generation 70
Best Result: (fitness: 7344.1, performance: 7670.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: dec(0); seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 392
Average Size: 36.26
Average Fitness: 5489.358104381024
Fitness Variation: 2562.03096321303
Distribution: [] -> 0.258, #2 -> 0.195, append -> 0.098, concat -> 0.083, 11 -> 0.052, #1 -> 0.047, prepend -> 0.038, access -> 0.034, length -> 0.033, #0 -> 0.031
------------
[184.726s]Generation 71
Best Result: (fitness: 7344.1, performance: 7670.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: dec(0); seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 371
Average Size: 35.932
Average Fitness: 5356.842511836855
Fitness Variation: 2666.8252677452233
Distribution: [] -> 0.269, #2 -> 0.196, append -> 0.103, concat -> 0.087, #1 -> 0.045, 11 -> 0.044, #0 -> 0.043, prepend -> 0.040, access -> 0.034, 0 -> 0.028
------------
[186.208s]Generation 72
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 379
Average Size: 36.006
Average Fitness: 5082.703243624305
Fitness Variation: 2799.0520196551192
Distribution: [] -> 0.274, #2 -> 0.191, append -> 0.104, concat -> 0.087, #0 -> 0.045, #1 -> 0.043, 11 -> 0.042, prepend -> 0.041, access -> 0.035, 0 -> 0.032
------------
[187.291s]Generation 73
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 388
Average Size: 35.862
Average Fitness: 5542.913276455857
Fitness Variation: 2608.200854547094
Distribution: [] -> 0.273, #2 -> 0.191, append -> 0.102, concat -> 0.082, 11 -> 0.042, #1 -> 0.041, prepend -> 0.039, 0 -> 0.038, #0 -> 0.036, access -> 0.034
------------
[188.613s]Generation 74
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 383
Average Size: 36.004
Average Fitness: 5475.0858274026505
Fitness Variation: 2732.56316807931
Distribution: [] -> 0.261, #2 -> 0.189, append -> 0.100, concat -> 0.076, 0 -> 0.046, #1 -> 0.044, 11 -> 0.041, prepend -> 0.039, length -> 0.036, access -> 0.034
------------
[189.930s]Generation 75
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 374
Average Size: 35.224
Average Fitness: 5518.822173520872
Fitness Variation: 2673.688165039473
Distribution: [] -> 0.258, #2 -> 0.193, append -> 0.098, concat -> 0.076, 0 -> 0.054, 11 -> 0.042, #1 -> 0.042, length -> 0.042, dec -> 0.038, prepend -> 0.037
------------
[191.412s]Generation 76
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 383
Average Size: 35.138
Average Fitness: 5574.566883105796
Fitness Variation: 2640.6127100621256
Distribution: [] -> 0.264, #2 -> 0.188, append -> 0.100, concat -> 0.076, 0 -> 0.050, #1 -> 0.043, 11 -> 0.042, length -> 0.041, prepend -> 0.038, dec -> 0.035
------------
[192.514s]Generation 77
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 372
Average Size: 34.844
Average Fitness: 5424.328629026313
Fitness Variation: 2684.047626926802
Distribution: [] -> 0.268, #2 -> 0.191, append -> 0.102, concat -> 0.077, 0 -> 0.047, 11 -> 0.044, #1 -> 0.043, length -> 0.041, prepend -> 0.039, access -> 0.034
------------
[193.859s]Generation 78
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 7; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 378
Average Size: 34.64
Average Fitness: 5624.346572245333
Fitness Variation: 2561.8221767386212
Distribution: [] -> 0.264, #2 -> 0.195, append -> 0.101, concat -> 0.078, #1 -> 0.045, 0 -> 0.045, 11 -> 0.042, length -> 0.041, prepend -> 0.039, access -> 0.035
------------
[195.356s]Generation 79
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #3; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 392
Average Size: 34.506
Average Fitness: 5495.706126672154
Fitness Variation: 2652.5786242112504
Distribution: [] -> 0.259, #2 -> 0.190, append -> 0.102, concat -> 0.074, #1 -> 0.048, 0 -> 0.048, 11 -> 0.043, length -> 0.041, prepend -> 0.039, access -> 0.035
------------
[196.844s]Generation 80
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 9; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 9 ; iter: #0; seedExpr: 9 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 407
Average Size: 35.028
Average Fitness: 5496.6562464089
Fitness Variation: 2671.4838806221774
Distribution: [] -> 0.257, #2 -> 0.194, append -> 0.101, concat -> 0.076, #1 -> 0.048, 0 -> 0.047, 11 -> 0.044, length -> 0.042, prepend -> 0.038, access -> 0.035
------------
[198.139s]Generation 81
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 11; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 397
Average Size: 34.654
Average Fitness: 5401.938006364757
Fitness Variation: 2748.6111782558173
Distribution: [] -> 0.257, #2 -> 0.191, append -> 0.099, concat -> 0.076, #1 -> 0.050, 0 -> 0.048, 11 -> 0.044, length -> 0.041, prepend -> 0.038, access -> 0.036
------------
[199.364s]Generation 82
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 8; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 412
Average Size: 34.488
Average Fitness: 5372.78022222445
Fitness Variation: 2720.7876714840127
Distribution: [] -> 0.264, #2 -> 0.189, append -> 0.102, concat -> 0.075, 0 -> 0.049, #1 -> 0.047, 11 -> 0.044, length -> 0.041, prepend -> 0.039, dec -> 0.033
------------
[200.554s]Generation 83
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 418
Average Size: 35.126
Average Fitness: 5641.161917207958
Fitness Variation: 2607.1912829277367
Distribution: [] -> 0.263, #2 -> 0.189, append -> 0.102, concat -> 0.079, #1 -> 0.048, 0 -> 0.047, 11 -> 0.045, length -> 0.041, prepend -> 0.040, access -> 0.033
------------
[201.648s]Generation 84
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 7; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 419
Average Size: 34.692
Average Fitness: 5406.374414165363
Fitness Variation: 2682.120498756429
Distribution: [] -> 0.262, #2 -> 0.195, append -> 0.101, concat -> 0.077, 0 -> 0.048, #1 -> 0.046, 11 -> 0.046, length -> 0.042, prepend -> 0.040, access -> 0.035
------------
[203.264s]Generation 85
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, []))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 0 ; iter: #0; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 410
Average Size: 34.566
Average Fitness: 5343.478974377021
Fitness Variation: 2708.8246441284386
Distribution: [] -> 0.265, #2 -> 0.192, append -> 0.103, concat -> 0.075, 0 -> 0.050, 11 -> 0.045, #1 -> 0.043, length -> 0.041, prepend -> 0.038, access -> 0.034
------------
[204.875s]Generation 86
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 0; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 413
Average Size: 34.668
Average Fitness: 5465.148677341977
Fitness Variation: 2628.430101920284
Distribution: [] -> 0.264, #2 -> 0.189, append -> 0.102, concat -> 0.076, 0 -> 0.048, 11 -> 0.044, #1 -> 0.044, length -> 0.041, prepend -> 0.039, access -> 0.034
------------
[206.454s]Generation 87
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 0; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 414
Average Size: 34.696
Average Fitness: 5452.506334344166
Fitness Variation: 2710.852678116538
Distribution: [] -> 0.263, #2 -> 0.189, append -> 0.103, concat -> 0.075, 0 -> 0.050, 11 -> 0.046, #1 -> 0.046, length -> 0.041, prepend -> 0.038, access -> 0.033
------------
[207.747s]Generation 88
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 423
Average Size: 34.912
Average Fitness: 5635.199223220696
Fitness Variation: 2566.436687742426
Distribution: [] -> 0.261, #2 -> 0.190, append -> 0.101, concat -> 0.075, 0 -> 0.050, 11 -> 0.046, #1 -> 0.045, length -> 0.041, prepend -> 0.039, access -> 0.035
------------
[209.332s]Generation 89
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append(#4, length(concat(#2, #2))), access(#2, 11, #4))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 5 ; iter: 11; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 429
Average Size: 34.814
Average Fitness: 5372.611189721689
Fitness Variation: 2775.3230221890317
Distribution: [] -> 0.260, #2 -> 0.191, append -> 0.102, concat -> 0.075, 0 -> 0.051, 11 -> 0.045, #1 -> 0.043, length -> 0.041, prepend -> 0.039, access -> 0.034
------------
[210.802s]Generation 90
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 426
Average Size: 34.752
Average Fitness: 5541.509399543307
Fitness Variation: 2622.505795763072
Distribution: [] -> 0.269, #2 -> 0.193, append -> 0.102, concat -> 0.077, 0 -> 0.051, 11 -> 0.046, length -> 0.041, #1 -> 0.040, prepend -> 0.038, access -> 0.034
------------
[211.937s]Generation 91
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #5
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, []))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #3; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), ...
Diversity: 424
Average Size: 34.694
Average Fitness: 5456.812818173653
Fitness Variation: 2676.921543743316
Distribution: [] -> 0.266, #2 -> 0.190, append -> 0.102, concat -> 0.074, 0 -> 0.053, 11 -> 0.047, #1 -> 0.041, length -> 0.041, prepend -> 0.039, access -> 0.035
------------
[213.196s]Generation 92
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 11, []))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 421
Average Size: 34.828
Average Fitness: 5646.192719078141
Fitness Variation: 2562.313686538215
Distribution: [] -> 0.264, #2 -> 0.193, append -> 0.100, concat -> 0.077, 0 -> 0.051, 11 -> 0.047, #1 -> 0.044, length -> 0.042, prepend -> 0.039, access -> 0.035
------------
[214.924s]Generation 93
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: #0; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, []))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 411
Average Size: 34.812
Average Fitness: 5442.032378944492
Fitness Variation: 2707.362809967406
Distribution: [] -> 0.265, #2 -> 0.193, append -> 0.102, concat -> 0.076, 0 -> 0.053, 11 -> 0.047, length -> 0.041, #1 -> 0.040, prepend -> 0.039, access -> 0.033
------------
[216.538s]Generation 94
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: #0; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 416
Average Size: 34.702
Average Fitness: 5544.118798881566
Fitness Variation: 2638.9420602022105
Distribution: [] -> 0.267, #2 -> 0.195, append -> 0.102, concat -> 0.075, 0 -> 0.051, 11 -> 0.049, length -> 0.041, #1 -> 0.040, prepend -> 0.038, access -> 0.035
------------
[217.792s]Generation 95
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: #0; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append(#4, length(concat(#2, #2))), access(#2, 11, []))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 414
Average Size: 34.7
Average Fitness: 5377.070592296041
Fitness Variation: 2763.3871068300573
Distribution: [] -> 0.275, #2 -> 0.192, append -> 0.101, concat -> 0.078, 0 -> 0.051, 11 -> 0.047, length -> 0.041, prepend -> 0.039, #1 -> 0.038, access -> 0.033
------------
[219.088s]Generation 96
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 5; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 11, []))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 4 ; iter: #0; seedExpr: 4 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 414
Average Size: 34.792
Average Fitness: 5408.917566506515
Fitness Variation: 2772.004899553924
Distribution: [] -> 0.271, #2 -> 0.194, append -> 0.101, concat -> 0.076, 0 -> 0.051, 11 -> 0.047, length -> 0.041, prepend -> 0.038, #1 -> 0.037, access -> 0.034
------------
[220.715s]Generation 97
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 11, []))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 410
Average Size: 34.658
Average Fitness: 5568.872084358239
Fitness Variation: 2694.42645669199
Distribution: [] -> 0.268, #2 -> 0.194, append -> 0.101, concat -> 0.079, 0 -> 0.050, 11 -> 0.047, length -> 0.041, prepend -> 0.038, #1 -> 0.035, access -> 0.033
------------
[222.179s]Generation 98
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 11; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 415
Average Size: 34.726
Average Fitness: 5540.1042228186425
Fitness Variation: 2638.4981871661457
Distribution: [] -> 0.270, #2 -> 0.193, append -> 0.100, concat -> 0.076, 0 -> 0.050, 11 -> 0.048, length -> 0.041, prepend -> 0.039, #1 -> 0.036, access -> 0.035
------------
[223.508s]Generation 99
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: #0; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, #0, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 11 ; iter: #0; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 424
Average Size: 34.726
Average Fitness: 5361.802002556562
Fitness Variation: 2755.525369845795
Distribution: [] -> 0.268, #2 -> 0.192, append -> 0.100, concat -> 0.076, 0 -> 0.050, 11 -> 0.045, length -> 0.041, prepend -> 0.040, access -> 0.034, #1 -> 0.034
------------
[224.730s]Generation 100
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 0 ; iter: 0; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 446
Average Size: 34.888
Average Fitness: 5304.4472897006435
Fitness Variation: 2751.1024023583036
Distribution: [] -> 0.271, #2 -> 0.191, append -> 0.102, concat -> 0.075, 0 -> 0.050, 11 -> 0.046, length -> 0.041, prepend -> 0.040, #1 -> 0.035, access -> 0.034
------------
[226.309s]Generation 101
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #1))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 0 ; iter: 0; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 441
Average Size: 34.79
Average Fitness: 5300.157959377781
Fitness Variation: 2795.2814074003595
Distribution: [] -> 0.267, #2 -> 0.193, append -> 0.102, concat -> 0.077, 0 -> 0.051, 11 -> 0.047, length -> 0.041, prepend -> 0.039, #1 -> 0.035, access -> 0.034
------------
[227.747s]Generation 102
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: #0; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, []))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 439
Average Size: 34.56
Average Fitness: 5705.0368702680735
Fitness Variation: 2548.930323181663
Distribution: [] -> 0.269, #2 -> 0.195, append -> 0.102, concat -> 0.076, 0 -> 0.050, 11 -> 0.047, length -> 0.041, prepend -> 0.039, #1 -> 0.035, access -> 0.034
------------
[229.477s]Generation 103
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 11, #4))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 429
Average Size: 34.498
Average Fitness: 5507.820121587436
Fitness Variation: 2699.955356234236
Distribution: [] -> 0.270, #2 -> 0.194, append -> 0.101, concat -> 0.075, 0 -> 0.051, 11 -> 0.047, length -> 0.042, prepend -> 0.039, access -> 0.034, dec -> 0.033
------------
[231.375s]Generation 104
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 0; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append(#4, length(concat(#2, #2))), access(#2, 11, []))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 433
Average Size: 34.78
Average Fitness: 5577.38676768875
Fitness Variation: 2620.941349855345
Distribution: [] -> 0.272, #2 -> 0.193, append -> 0.101, concat -> 0.076, 0 -> 0.049, 11 -> 0.047, length -> 0.041, prepend -> 0.039, access -> 0.034, dec -> 0.032
------------
[232.860s]Generation 105
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 0; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, []))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 438
Average Size: 34.96
Average Fitness: 5506.269440776133
Fitness Variation: 2616.3594140039495
Distribution: [] -> 0.268, #2 -> 0.194, append -> 0.100, concat -> 0.077, 0 -> 0.048, 11 -> 0.048, length -> 0.042, prepend -> 0.040, access -> 0.035, #1 -> 0.034
------------
[234.588s]Generation 106
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, #4))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 11 ; iter: #0; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 422
Average Size: 34.606
Average Fitness: 5452.039349065719
Fitness Variation: 2718.0793951250903
Distribution: [] -> 0.264, #2 -> 0.194, append -> 0.101, concat -> 0.077, 0 -> 0.051, 11 -> 0.045, length -> 0.041, prepend -> 0.040, #1 -> 0.035, access -> 0.034
------------
[236.455s]Generation 107
Best Result: (fitness: 7352.5, performance: 7670.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 0 ; iter: 0; seedExpr: 0 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 11, []))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: 4; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6]]), Vector([[-1],[],[],[6],[8,6]]), Vector([[-1],[],[],[6],[8,6],[10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6]]), Vector([[-1],[],[],[6],[8,6],[10],[12,10],[14,8,6],[16,6]]), ...
Diversity: 430
Average Size: 34.538
Average Fitness: 5641.395664874816
Fitness Variation: 2625.9758290347327
Distribution: [] -> 0.274, #2 -> 0.195, append -> 0.102, concat -> 0.076, 0 -> 0.052, 11 -> 0.045, length -> 0.042, prepend -> 0.039, access -> 0.034, dec -> 0.033
------------
[237.835s]Generation 108
Best Result: (fitness: 7353.5, performance: 7671.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: 11; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[-1],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, #3, []))); seedExpr: prepend(append([], dec(0)), prepend([], append([], []))) }
[S3: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[-1],[],[]]), Vector([[-1],[],[],[6,-1]]), Vector([[-1],[],[],[6,-1],[8]]), Vector([[-1],[],[],[6,-1],[8],[10]]), Vector([[-1],[],[],[6,-1],[8],[10],[12,10]]), Vector([[-1],[],[],[6,-1],[8],[10],[12,10],[14,8]]), Vector([[-1],[],[],[6,-1],[8],[10],[12,10],[14,8],[16,6,-1]]), ...
Diversity: 413
Average Size: 34.942
Average Fitness: 5752.229570342823
Fitness Variation: 2512.3645801005723
Distribution: [] -> 0.265, #2 -> 0.195, append -> 0.101, concat -> 0.075, 0 -> 0.053, 11 -> 0.044, length -> 0.042, prepend -> 0.040, access -> 0.034, dec -> 0.033
------------
[239.736s]Generation 109
Best Result: (fitness: 7382.9, performance: 7671.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 0), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[],[]]), Vector([[0],[],[],[6]]), Vector([[0],[],[],[6],[8]]), Vector([[0],[],[],[6],[8],[10,0]]), Vector([[0],[],[],[6],[8],[10,0],[12,8]]), Vector([[0],[],[],[6],[8],[10,0],[12,8],[14,6]]), Vector([[0],[],[],[6],[8],[10,0],[12,8],[14,6],[16]]), ...
Diversity: 418
Average Size: 34.77
Average Fitness: 5547.998409331504
Fitness Variation: 2651.4203334876706
Distribution: [] -> 0.267, #2 -> 0.197, append -> 0.102, concat -> 0.076, 0 -> 0.051, 11 -> 0.044, length -> 0.042, prepend -> 0.038, access -> 0.034, dec -> 0.033
------------
[241.714s]Generation 110
Best Result: (fitness: 7382.9, performance: 7671.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 0), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[],[]]), Vector([[0],[],[],[6]]), Vector([[0],[],[],[6],[8]]), Vector([[0],[],[],[6],[8],[10,0]]), Vector([[0],[],[],[6],[8],[10,0],[12,8]]), Vector([[0],[],[],[6],[8],[10,0],[12,8],[14,6]]), Vector([[0],[],[],[6],[8],[10,0],[12,8],[14,6],[16]]), ...
Diversity: 435
Average Size: 34.682
Average Fitness: 5351.97056322517
Fitness Variation: 2672.7219686322064
Distribution: [] -> 0.270, #2 -> 0.188, append -> 0.101, concat -> 0.075, 0 -> 0.052, 11 -> 0.043, length -> 0.040, prepend -> 0.040, access -> 0.035, dec -> 0.032
------------
[242.969s]Generation 111
Best Result: (fitness: 7382.9, performance: 7671.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 0), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[],[]]), Vector([[0],[],[],[6]]), Vector([[0],[],[],[6],[8]]), Vector([[0],[],[],[6],[8],[10,0]]), Vector([[0],[],[],[6],[8],[10,0],[12,8]]), Vector([[0],[],[],[6],[8],[10,0],[12,8],[14,6]]), Vector([[0],[],[],[6],[8],[10,0],[12,8],[14,6],[16]]), ...
Diversity: 416
Average Size: 34.5
Average Fitness: 5398.546423283315
Fitness Variation: 2783.976362724184
Distribution: [] -> 0.271, #2 -> 0.195, append -> 0.102, concat -> 0.076, 0 -> 0.051, length -> 0.042, 11 -> 0.040, prepend -> 0.038, access -> 0.034, dec -> 0.032
------------
[244.858s]Generation 112
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 422
Average Size: 34.832
Average Fitness: 5414.291562986165
Fitness Variation: 2670.0592737894426
Distribution: [] -> 0.274, #2 -> 0.192, append -> 0.101, concat -> 0.075, 0 -> 0.050, length -> 0.041, prepend -> 0.040, 11 -> 0.036, access -> 0.034, dec -> 0.031
------------
[246.273s]Generation 113
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 380
Average Size: 34.534
Average Fitness: 5376.476541178082
Fitness Variation: 2700.263230227774
Distribution: [] -> 0.283, #2 -> 0.194, append -> 0.101, concat -> 0.077, 0 -> 0.049, length -> 0.041, prepend -> 0.041, access -> 0.033, dec -> 0.029, 11 -> 0.026
------------
[247.708s]Generation 114
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[8],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 8), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[8],[],[]]), Vector([[8],[],[],[6]]), Vector([[8],[],[],[6],[8]]), Vector([[8],[],[],[6],[8],[10,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6],[16]]), ...
Diversity: 368
Average Size: 34.368
Average Fitness: 5277.03147934102
Fitness Variation: 2796.0082208459144
Distribution: [] -> 0.274, #2 -> 0.197, append -> 0.102, concat -> 0.077, 0 -> 0.044, length -> 0.042, prepend -> 0.040, access -> 0.035, #1 -> 0.029, #4 -> 0.026
------------
[249.214s]Generation 115
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 367
Average Size: 34.726
Average Fitness: 5412.41565426681
Fitness Variation: 2697.4571151616037
Distribution: [] -> 0.256, #2 -> 0.197, append -> 0.105, concat -> 0.080, length -> 0.042, 10 -> 0.041, prepend -> 0.040, #4 -> 0.040, #1 -> 0.038, 0 -> 0.038
------------
[251.033s]Generation 116
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 368
Average Size: 33.988
Average Fitness: 5619.605894916405
Fitness Variation: 2628.680626230888
Distribution: [] -> 0.244, #2 -> 0.205, append -> 0.107, concat -> 0.079, 10 -> 0.053, #1 -> 0.044, #4 -> 0.044, length -> 0.043, prepend -> 0.039, access -> 0.036
------------
[252.617s]Generation 117
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 350
Average Size: 33.756
Average Fitness: 5542.54324002239
Fitness Variation: 2698.0884334647876
Distribution: [] -> 0.244, #2 -> 0.204, append -> 0.107, concat -> 0.079, 10 -> 0.055, #1 -> 0.046, #4 -> 0.046, length -> 0.044, prepend -> 0.041, access -> 0.036
------------
[254.164s]Generation 118
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 359
Average Size: 33.392
Average Fitness: 5402.094906065415
Fitness Variation: 2745.685536986602
Distribution: [] -> 0.248, #2 -> 0.200, append -> 0.106, concat -> 0.078, 10 -> 0.057, #4 -> 0.047, #1 -> 0.045, length -> 0.043, prepend -> 0.040, access -> 0.037
------------
[255.191s]Generation 119
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[8],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 8), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[8],[],[]]), Vector([[8],[],[],[6]]), Vector([[8],[],[],[6],[8]]), Vector([[8],[],[],[6],[8],[10,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6],[16]]), ...
Diversity: 372
Average Size: 33.816
Average Fitness: 5464.665949539179
Fitness Variation: 2705.7527728239447
Distribution: [] -> 0.247, #2 -> 0.199, append -> 0.105, concat -> 0.078, 10 -> 0.054, #1 -> 0.045, #4 -> 0.044, length -> 0.043, prepend -> 0.041, access -> 0.035
------------
[256.573s]Generation 120
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 363
Average Size: 33.702
Average Fitness: 5535.420554630989
Fitness Variation: 2713.8668557583255
Distribution: [] -> 0.250, #2 -> 0.200, append -> 0.106, concat -> 0.079, 10 -> 0.054, #1 -> 0.047, length -> 0.043, prepend -> 0.043, #4 -> 0.042, access -> 0.036
------------
[258.089s]Generation 121
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 393
Average Size: 33.65
Average Fitness: 5485.836588029566
Fitness Variation: 2680.9257501283396
Distribution: [] -> 0.252, #2 -> 0.200, append -> 0.105, concat -> 0.080, 10 -> 0.055, #4 -> 0.044, #1 -> 0.043, length -> 0.043, prepend -> 0.041, access -> 0.036
------------
[259.754s]Generation 122
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 396
Average Size: 33.704
Average Fitness: 5301.475591143981
Fitness Variation: 2785.1922286312665
Distribution: [] -> 0.248, #2 -> 0.200, append -> 0.107, concat -> 0.081, 10 -> 0.056, #1 -> 0.046, #4 -> 0.045, length -> 0.043, prepend -> 0.042, access -> 0.036
------------
[261.537s]Generation 123
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 416
Average Size: 33.832
Average Fitness: 5365.032356148661
Fitness Variation: 2782.050453000965
Distribution: [] -> 0.249, #2 -> 0.200, append -> 0.106, concat -> 0.079, 10 -> 0.056, #4 -> 0.044, #1 -> 0.043, length -> 0.042, prepend -> 0.040, access -> 0.037
------------
[263.515s]Generation 124
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 419
Average Size: 33.956
Average Fitness: 5512.817322664635
Fitness Variation: 2710.2647278284708
Distribution: [] -> 0.254, #2 -> 0.201, append -> 0.106, concat -> 0.079, 10 -> 0.055, length -> 0.043, #4 -> 0.043, prepend -> 0.042, #1 -> 0.041, access -> 0.036
------------
[265.249s]Generation 125
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 427
Average Size: 33.932
Average Fitness: 5482.536422864073
Fitness Variation: 2718.548311230946
Distribution: [] -> 0.260, #2 -> 0.198, append -> 0.108, concat -> 0.080, 10 -> 0.054, prepend -> 0.042, #4 -> 0.042, length -> 0.042, #1 -> 0.039, access -> 0.034
------------
[266.801s]Generation 126
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 0; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 424
Average Size: 33.834
Average Fitness: 5635.860960785541
Fitness Variation: 2632.2556886608363
Distribution: [] -> 0.259, #2 -> 0.200, append -> 0.106, concat -> 0.079, 10 -> 0.054, length -> 0.043, prepend -> 0.043, #4 -> 0.040, #1 -> 0.038, access -> 0.036
------------
[268.203s]Generation 127
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 414
Average Size: 33.476
Average Fitness: 5500.840070444885
Fitness Variation: 2758.124047107644
Distribution: [] -> 0.259, #2 -> 0.202, append -> 0.107, concat -> 0.080, 10 -> 0.056, length -> 0.043, prepend -> 0.041, #4 -> 0.041, #1 -> 0.040, access -> 0.036
------------
[269.899s]Generation 128
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 3; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 5 ; iter: 2; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 419
Average Size: 34.118
Average Fitness: 5561.9464514176825
Fitness Variation: 2692.278443796425
Distribution: [] -> 0.255, #2 -> 0.200, append -> 0.105, concat -> 0.081, 10 -> 0.054, length -> 0.042, #4 -> 0.041, prepend -> 0.041, #1 -> 0.038, access -> 0.037
------------
[271.205s]Generation 129
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 0 ; iter: 6; seedExpr: 0 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: 0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 422
Average Size: 34.002
Average Fitness: 5541.39471290425
Fitness Variation: 2704.6819640670456
Distribution: [] -> 0.263, #2 -> 0.200, append -> 0.107, concat -> 0.080, 10 -> 0.055, length -> 0.043, prepend -> 0.040, #4 -> 0.038, #1 -> 0.036, access -> 0.036
------------
[272.993s]Generation 130
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[8],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 8), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: 0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[8],[],[]]), Vector([[8],[],[],[6]]), Vector([[8],[],[],[6],[8]]), Vector([[8],[],[],[6],[8],[10,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6],[16]]), ...
Diversity: 438
Average Size: 33.828
Average Fitness: 5426.729845441787
Fitness Variation: 2729.836410727455
Distribution: [] -> 0.264, #2 -> 0.201, append -> 0.106, concat -> 0.078, 10 -> 0.054, length -> 0.044, prepend -> 0.043, #4 -> 0.038, access -> 0.036, #1 -> 0.035
------------
[274.545s]Generation 131
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 6; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 416
Average Size: 33.846
Average Fitness: 5649.37737784103
Fitness Variation: 2575.234325199712
Distribution: [] -> 0.261, #2 -> 0.205, append -> 0.106, concat -> 0.080, 10 -> 0.058, length -> 0.045, prepend -> 0.040, #1 -> 0.037, #4 -> 0.036, access -> 0.035
------------
[275.848s]Generation 132
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 11; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 423
Average Size: 33.914
Average Fitness: 5469.3031631922795
Fitness Variation: 2732.991156206195
Distribution: [] -> 0.263, #2 -> 0.200, append -> 0.105, concat -> 0.079, 10 -> 0.057, prepend -> 0.042, length -> 0.042, #4 -> 0.038, access -> 0.036, #1 -> 0.034
------------
[277.268s]Generation 133
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 415
Average Size: 33.73
Average Fitness: 5659.257365259453
Fitness Variation: 2631.2426441228677
Distribution: [] -> 0.269, #2 -> 0.205, append -> 0.106, concat -> 0.079, 10 -> 0.057, length -> 0.043, prepend -> 0.040, access -> 0.036, #4 -> 0.033, 11 -> 0.032
------------
[278.509s]Generation 134
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 6; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 410
Average Size: 33.696
Average Fitness: 5567.581104293233
Fitness Variation: 2640.8247464795063
Distribution: [] -> 0.277, #2 -> 0.201, append -> 0.108, concat -> 0.078, 10 -> 0.056, length -> 0.043, prepend -> 0.042, access -> 0.036, #4 -> 0.033, 11 -> 0.032
------------
[280.172s]Generation 135
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 4 ; iter: #3; seedExpr: 4 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: 11; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 419
Average Size: 33.878
Average Fitness: 5617.06373894979
Fitness Variation: 2649.0378636769715
Distribution: [] -> 0.273, #2 -> 0.199, append -> 0.107, concat -> 0.079, 10 -> 0.055, length -> 0.043, prepend -> 0.042, access -> 0.036, #4 -> 0.036, 11 -> 0.031
------------
[281.482s]Generation 136
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 8; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 0 ; iter: #0; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 422
Average Size: 33.604
Average Fitness: 5478.986148843026
Fitness Variation: 2691.157324263628
Distribution: [] -> 0.284, #2 -> 0.200, append -> 0.108, concat -> 0.078, 10 -> 0.055, length -> 0.044, prepend -> 0.043, access -> 0.036, 11 -> 0.032, #4 -> 0.032
------------
[282.775s]Generation 137
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, #0, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 9 ; iter: 10; seedExpr: 9 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 420
Average Size: 33.792
Average Fitness: 5616.267862261237
Fitness Variation: 2665.1015183609843
Distribution: [] -> 0.281, #2 -> 0.202, append -> 0.105, concat -> 0.079, 10 -> 0.055, length -> 0.043, prepend -> 0.040, access -> 0.037, 11 -> 0.030, #4 -> 0.029
------------
[284.463s]Generation 138
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 421
Average Size: 33.646
Average Fitness: 5649.640738872719
Fitness Variation: 2653.6824068790406
Distribution: [] -> 0.276, #2 -> 0.204, append -> 0.106, concat -> 0.079, 10 -> 0.056, length -> 0.044, prepend -> 0.041, access -> 0.036, #4 -> 0.032, 11 -> 0.028
------------
[285.711s]Generation 139
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 423
Average Size: 33.796
Average Fitness: 5539.3388202664755
Fitness Variation: 2690.7399592203788
Distribution: [] -> 0.272, #2 -> 0.203, append -> 0.103, concat -> 0.081, 10 -> 0.054, length -> 0.043, prepend -> 0.041, access -> 0.036, #4 -> 0.035, 11 -> 0.027
------------
[287.383s]Generation 140
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[8],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 8), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[8],[],[]]), Vector([[8],[],[],[6]]), Vector([[8],[],[],[6],[8]]), Vector([[8],[],[],[6],[8],[10,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6],[16]]), ...
Diversity: 429
Average Size: 33.862
Average Fitness: 5367.247390121002
Fitness Variation: 2788.215703825559
Distribution: [] -> 0.278, #2 -> 0.201, append -> 0.107, concat -> 0.081, 10 -> 0.053, length -> 0.043, prepend -> 0.042, access -> 0.034, #4 -> 0.033, 11 -> 0.028
------------
[288.871s]Generation 141
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[8],[],[]] ; iter: append(#2, concat(append(#4, length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 8), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[8],[],[]]), Vector([[8],[],[],[6]]), Vector([[8],[],[],[6],[8]]), Vector([[8],[],[],[6],[8],[10,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6],[16]]), ...
Diversity: 422
Average Size: 33.796
Average Fitness: 5614.929600910636
Fitness Variation: 2662.8908687026865
Distribution: [] -> 0.275, #2 -> 0.204, append -> 0.106, concat -> 0.079, 10 -> 0.054, length -> 0.044, prepend -> 0.040, access -> 0.036, #4 -> 0.034, 11 -> 0.029
------------
[290.252s]Generation 142
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 11; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 433
Average Size: 33.898
Average Fitness: 5303.697404806115
Fitness Variation: 2771.4843360858795
Distribution: [] -> 0.277, #2 -> 0.201, append -> 0.105, concat -> 0.080, 10 -> 0.055, length -> 0.043, prepend -> 0.041, access -> 0.036, #4 -> 0.032, 11 -> 0.030
------------
[291.647s]Generation 143
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 5; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #3; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 415
Average Size: 34.11
Average Fitness: 5603.866965549197
Fitness Variation: 2656.205255103594
Distribution: [] -> 0.277, #2 -> 0.200, append -> 0.107, concat -> 0.080, 10 -> 0.054, length -> 0.043, prepend -> 0.043, access -> 0.035, #4 -> 0.033, 11 -> 0.029
------------
[292.886s]Generation 144
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #5
*
[S0: EInt]{ seed: 10 ; iter: 3; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), ...
Diversity: 414
Average Size: 33.694
Average Fitness: 5636.74752041267
Fitness Variation: 2649.207731671142
Distribution: [] -> 0.278, #2 -> 0.205, append -> 0.105, concat -> 0.081, 10 -> 0.055, length -> 0.044, prepend -> 0.041, access -> 0.036, #4 -> 0.031, 11 -> 0.029
------------
[294.132s]Generation 145
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 5; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 5 ; iter: #3; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 416
Average Size: 33.48
Average Fitness: 5649.205177738098
Fitness Variation: 2588.893673329294
Distribution: [] -> 0.279, #2 -> 0.205, append -> 0.105, concat -> 0.081, 10 -> 0.056, length -> 0.043, prepend -> 0.041, access -> 0.037, 11 -> 0.030, #4 -> 0.029
------------
[295.359s]Generation 146
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: #0; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #3; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 417
Average Size: 33.62
Average Fitness: 5408.894877880644
Fitness Variation: 2751.8894578226327
Distribution: [] -> 0.283, #2 -> 0.200, append -> 0.107, concat -> 0.079, 10 -> 0.054, prepend -> 0.043, length -> 0.043, access -> 0.035, 11 -> 0.032, #1 -> 0.029
------------
[296.641s]Generation 147
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: #0; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #3; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 425
Average Size: 33.814
Average Fitness: 5475.882976717143
Fitness Variation: 2745.50878110339
Distribution: [] -> 0.278, #2 -> 0.203, append -> 0.106, concat -> 0.080, 10 -> 0.055, length -> 0.044, prepend -> 0.040, access -> 0.036, 11 -> 0.032, #1 -> 0.031
------------
[297.857s]Generation 148
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 11; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 2 ; iter: #3; seedExpr: 2 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 423
Average Size: 33.86
Average Fitness: 5506.162283308649
Fitness Variation: 2727.326007750636
Distribution: [] -> 0.274, #2 -> 0.200, append -> 0.103, concat -> 0.079, 10 -> 0.055, length -> 0.043, prepend -> 0.043, access -> 0.037, #1 -> 0.031, 11 -> 0.031
------------
[299.319s]Generation 149
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 397
Average Size: 33.784
Average Fitness: 5532.628365573425
Fitness Variation: 2738.39822952905
Distribution: [] -> 0.277, #2 -> 0.204, append -> 0.107, concat -> 0.079, 10 -> 0.056, length -> 0.043, prepend -> 0.041, access -> 0.035, 11 -> 0.031, #1 -> 0.030
------------
[300.722s]Generation 150
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], prepend([], []))) }
[S3: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 414
Average Size: 33.768
Average Fitness: 5511.360728597273
Fitness Variation: 2713.265039888011
Distribution: [] -> 0.284, #2 -> 0.202, append -> 0.108, concat -> 0.079, 10 -> 0.056, length -> 0.043, prepend -> 0.043, access -> 0.035, #1 -> 0.029, 11 -> 0.029
------------
[302.331s]Generation 151
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 424
Average Size: 33.658
Average Fitness: 5588.3827033765765
Fitness Variation: 2653.119103940134
Distribution: [] -> 0.288, #2 -> 0.204, append -> 0.105, concat -> 0.079, 10 -> 0.057, length -> 0.043, prepend -> 0.041, access -> 0.036, 11 -> 0.030, #1 -> 0.027
------------
[303.688s]Generation 152
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 420
Average Size: 33.458
Average Fitness: 5304.364914899933
Fitness Variation: 2814.4521147215705
Distribution: [] -> 0.291, #2 -> 0.199, append -> 0.107, concat -> 0.079, 10 -> 0.056, prepend -> 0.043, length -> 0.042, access -> 0.035, 11 -> 0.029, #1 -> 0.026
------------
[305.378s]Generation 153
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 11; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #1))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 424
Average Size: 33.99
Average Fitness: 5535.428438714794
Fitness Variation: 2702.397188493513
Distribution: [] -> 0.287, #2 -> 0.201, append -> 0.106, concat -> 0.078, 10 -> 0.054, length -> 0.043, prepend -> 0.043, access -> 0.035, 11 -> 0.031, #4 -> 0.024
------------
[306.559s]Generation 154
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 10; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, #3, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 2 ; iter: 10; seedExpr: 2 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 414
Average Size: 34.018
Average Fitness: 5730.448915228876
Fitness Variation: 2599.8044725571126
Distribution: [] -> 0.289, #2 -> 0.205, append -> 0.105, concat -> 0.081, 10 -> 0.055, length -> 0.044, prepend -> 0.041, access -> 0.036, 11 -> 0.029, #4 -> 0.023
------------
[307.787s]Generation 155
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #5
*
[S0: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 5 ; iter: 11; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), ...
Diversity: 430
Average Size: 34.016
Average Fitness: 5504.262262809112
Fitness Variation: 2684.990136754307
Distribution: [] -> 0.284, #2 -> 0.203, append -> 0.105, concat -> 0.081, 10 -> 0.053, length -> 0.044, prepend -> 0.041, access -> 0.035, 11 -> 0.033, #1 -> 0.025
------------
[308.976s]Generation 156
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: 3; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 430
Average Size: 33.79
Average Fitness: 5274.085762548838
Fitness Variation: 2802.050876933197
Distribution: [] -> 0.284, #2 -> 0.200, append -> 0.104, concat -> 0.078, 10 -> 0.050, prepend -> 0.043, length -> 0.042, access -> 0.037, 11 -> 0.033, #4 -> 0.026
------------
[310.219s]Generation 157
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 7; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 419
Average Size: 33.844
Average Fitness: 5429.439542226127
Fitness Variation: 2744.0457188104374
Distribution: [] -> 0.282, #2 -> 0.204, append -> 0.106, concat -> 0.080, 10 -> 0.050, length -> 0.043, prepend -> 0.043, access -> 0.035, 11 -> 0.034, #4 -> 0.027
------------
[311.428s]Generation 158
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 7; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#4, length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 11 ; iter: #0; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 409
Average Size: 33.736
Average Fitness: 5506.701818308731
Fitness Variation: 2693.9351697156744
Distribution: [] -> 0.280, #2 -> 0.204, append -> 0.105, concat -> 0.080, 10 -> 0.051, length -> 0.043, prepend -> 0.043, access -> 0.035, 11 -> 0.035, #4 -> 0.029
------------
[313.042s]Generation 159
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, #0, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 0 ; iter: #3; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 418
Average Size: 33.81
Average Fitness: 5397.242580379657
Fitness Variation: 2805.861684516703
Distribution: [] -> 0.284, #2 -> 0.198, append -> 0.106, concat -> 0.077, 10 -> 0.052, prepend -> 0.044, length -> 0.042, access -> 0.035, 11 -> 0.035, #4 -> 0.029
------------
[314.938s]Generation 160
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 10; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[8],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 8), prepend([], append([], []))) }
[S3: EInt]{ seed: 4 ; iter: #3; seedExpr: 4 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[8],[],[]]), Vector([[8],[],[],[6]]), Vector([[8],[],[],[6],[8]]), Vector([[8],[],[],[6],[8],[10,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6],[16]]), ...
Diversity: 418
Average Size: 33.922
Average Fitness: 5602.972728199852
Fitness Variation: 2656.5955292958633
Distribution: [] -> 0.283, #2 -> 0.201, append -> 0.102, concat -> 0.081, 10 -> 0.051, prepend -> 0.043, length -> 0.043, access -> 0.036, 11 -> 0.035, #4 -> 0.031
------------
[316.462s]Generation 161
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #5
*
[S0: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: 11; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), ...
Diversity: 422
Average Size: 33.678
Average Fitness: 5418.8200287619275
Fitness Variation: 2756.303424422656
Distribution: [] -> 0.282, #2 -> 0.202, append -> 0.104, concat -> 0.080, 10 -> 0.052, prepend -> 0.043, length -> 0.042, 11 -> 0.038, access -> 0.036, #4 -> 0.033
------------
[317.696s]Generation 162
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 7; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 420
Average Size: 33.726
Average Fitness: 5523.141439544836
Fitness Variation: 2669.321272368816
Distribution: [] -> 0.283, #2 -> 0.201, append -> 0.104, concat -> 0.079, 10 -> 0.050, prepend -> 0.043, length -> 0.043, 11 -> 0.037, access -> 0.036, #4 -> 0.032
------------
[319.084s]Generation 163
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 7; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 417
Average Size: 33.762
Average Fitness: 5510.322377553952
Fitness Variation: 2756.1484572707955
Distribution: [] -> 0.280, #2 -> 0.205, append -> 0.104, concat -> 0.080, 10 -> 0.050, length -> 0.043, prepend -> 0.043, 11 -> 0.036, access -> 0.036, #4 -> 0.031
------------
[320.309s]Generation 164
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, #3, #4))); seedExpr: prepend(append([], 11), append(prepend([], []), [])) }
[S3: EInt]{ seed: 5 ; iter: 10; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 416
Average Size: 34.1
Average Fitness: 5850.818786483366
Fitness Variation: 2491.2692897898223
Distribution: [] -> 0.279, #2 -> 0.203, append -> 0.102, concat -> 0.082, 10 -> 0.051, length -> 0.044, prepend -> 0.044, access -> 0.036, 11 -> 0.036, #4 -> 0.031
------------
[322.021s]Generation 165
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 4 ; iter: 10; seedExpr: 4 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #1))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 423
Average Size: 33.64
Average Fitness: 5326.09955952725
Fitness Variation: 2784.08976175198
Distribution: [] -> 0.281, #2 -> 0.202, append -> 0.103, concat -> 0.081, 10 -> 0.048, length -> 0.044, prepend -> 0.044, 11 -> 0.037, access -> 0.035, #4 -> 0.032
------------
[323.207s]Generation 166
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#4, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 11 ; iter: 11; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 411
Average Size: 33.458
Average Fitness: 5584.447368380876
Fitness Variation: 2708.3748183917255
Distribution: [] -> 0.281, #2 -> 0.207, append -> 0.102, concat -> 0.081, 10 -> 0.050, length -> 0.044, prepend -> 0.043, 11 -> 0.038, access -> 0.037, #4 -> 0.032
------------
[324.392s]Generation 167
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 7; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 413
Average Size: 33.452
Average Fitness: 5694.607969480224
Fitness Variation: 2640.2851084929794
Distribution: [] -> 0.283, #2 -> 0.204, append -> 0.104, concat -> 0.078, 10 -> 0.049, length -> 0.044, prepend -> 0.043, 11 -> 0.036, access -> 0.036, #4 -> 0.029
------------
[325.628s]Generation 168
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#4, length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 432
Average Size: 33.862
Average Fitness: 5407.8762882129395
Fitness Variation: 2699.8305034130876
Distribution: [] -> 0.285, #2 -> 0.199, append -> 0.104, concat -> 0.077, 10 -> 0.047, prepend -> 0.047, length -> 0.043, 11 -> 0.037, access -> 0.036, #4 -> 0.026
------------
[327.222s]Generation 169
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #3; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 428
Average Size: 34.186
Average Fitness: 5420.287299366181
Fitness Variation: 2783.2710944452283
Distribution: [] -> 0.290, #2 -> 0.199, append -> 0.101, concat -> 0.080, prepend -> 0.047, 10 -> 0.046, length -> 0.042, 11 -> 0.038, access -> 0.037, #4 -> 0.028
------------
[328.987s]Generation 170
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 11 ; iter: #3; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 414
Average Size: 33.768
Average Fitness: 5465.770922675271
Fitness Variation: 2741.160414786106
Distribution: [] -> 0.287, #2 -> 0.203, append -> 0.103, concat -> 0.079, 10 -> 0.046, prepend -> 0.044, length -> 0.043, 11 -> 0.039, access -> 0.035, #4 -> 0.027
------------
[330.264s]Generation 171
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 10; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #1))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 410
Average Size: 33.74
Average Fitness: 5557.911034716411
Fitness Variation: 2701.2400062734155
Distribution: [] -> 0.286, #2 -> 0.204, append -> 0.103, concat -> 0.078, 10 -> 0.045, length -> 0.043, prepend -> 0.043, 11 -> 0.037, access -> 0.037, #4 -> 0.029
------------
[331.450s]Generation 172
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[8],[],[]] ; iter: append(#2, concat(append(#4, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 8), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[8],[],[]]), Vector([[8],[],[],[6]]), Vector([[8],[],[],[6],[8]]), Vector([[8],[],[],[6],[8],[10,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6],[16]]), ...
Diversity: 413
Average Size: 33.752
Average Fitness: 5446.5884234868945
Fitness Variation: 2698.9036380653993
Distribution: [] -> 0.287, #2 -> 0.203, append -> 0.104, concat -> 0.079, 10 -> 0.045, prepend -> 0.045, length -> 0.042, 11 -> 0.038, access -> 0.035, #4 -> 0.030
------------
[332.656s]Generation 173
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 4 ; iter: 4; seedExpr: 4 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, #1))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 11 ; iter: 11; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 412
Average Size: 33.952
Average Fitness: 5689.092409090783
Fitness Variation: 2611.6811496486057
Distribution: [] -> 0.279, #2 -> 0.204, append -> 0.105, concat -> 0.079, length -> 0.043, prepend -> 0.043, 10 -> 0.043, 11 -> 0.038, access -> 0.035, #4 -> 0.030
------------
[333.869s]Generation 174
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 7; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#4, length(concat(#2, #2))), access(#2, 10, #1))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 427
Average Size: 33.718
Average Fitness: 5406.6498288528555
Fitness Variation: 2762.42289734122
Distribution: [] -> 0.286, #2 -> 0.201, append -> 0.105, concat -> 0.077, 10 -> 0.045, length -> 0.044, prepend -> 0.042, 11 -> 0.039, access -> 0.037, #4 -> 0.029
------------
[335.118s]Generation 175
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 4 ; iter: 10; seedExpr: 4 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #1))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 427
Average Size: 34.094
Average Fitness: 5624.084278506737
Fitness Variation: 2629.387891375821
Distribution: [] -> 0.276, #2 -> 0.205, append -> 0.103, concat -> 0.081, 10 -> 0.045, prepend -> 0.044, length -> 0.044, 11 -> 0.038, access -> 0.036, #4 -> 0.031
------------
[337.007s]Generation 176
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 4 ; iter: 8; seedExpr: 4 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#4, length(concat(#2, #2))), access(#2, 10, #1))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 420
Average Size: 33.58
Average Fitness: 5467.291222175579
Fitness Variation: 2754.1245017436886
Distribution: [] -> 0.279, #2 -> 0.208, append -> 0.104, concat -> 0.081, length -> 0.044, 10 -> 0.044, prepend -> 0.040, 11 -> 0.038, access -> 0.036, #4 -> 0.030
------------
[338.466s]Generation 177
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 1 ; iter: 10; seedExpr: 1 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, #3, []))); seedExpr: prepend(append([], 11), append(prepend([], []), [])) }
[S3: EInt]{ seed: 5 ; iter: 10; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 414
Average Size: 33.63
Average Fitness: 5400.6707994715425
Fitness Variation: 2779.833479652673
Distribution: [] -> 0.284, #2 -> 0.202, append -> 0.105, concat -> 0.079, prepend -> 0.044, 10 -> 0.044, length -> 0.043, 11 -> 0.037, access -> 0.035, #1 -> 0.029
------------
[340.059s]Generation 178
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #5
*
[S0: EInt]{ seed: 0 ; iter: #3; seedExpr: 0 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, #3, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), ...
Diversity: 427
Average Size: 33.416
Average Fitness: 5298.898738512349
Fitness Variation: 2781.796173787616
Distribution: [] -> 0.290, #2 -> 0.197, append -> 0.107, concat -> 0.078, prepend -> 0.044, length -> 0.042, 10 -> 0.041, 11 -> 0.039, access -> 0.035, #1 -> 0.026
------------
[342.100s]Generation 179
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 419
Average Size: 33.954
Average Fitness: 5673.6149796192085
Fitness Variation: 2638.0633912690337
Distribution: [] -> 0.280, #2 -> 0.204, append -> 0.102, concat -> 0.081, 10 -> 0.043, length -> 0.043, prepend -> 0.043, access -> 0.037, 11 -> 0.036, #1 -> 0.028
------------
[343.586s]Generation 180
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 2 ; iter: #3; seedExpr: 2 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 414
Average Size: 33.75
Average Fitness: 5624.849988657982
Fitness Variation: 2670.1314195941977
Distribution: [] -> 0.283, #2 -> 0.204, append -> 0.106, concat -> 0.080, length -> 0.043, 10 -> 0.042, prepend -> 0.041, 11 -> 0.038, access -> 0.035, #1 -> 0.026
------------
[345.080s]Generation 181
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, #0, []))); seedExpr: prepend(append([], 11), append(prepend([], []), [])) }
[S3: EInt]{ seed: 5 ; iter: 10; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 406
Average Size: 34.076
Average Fitness: 5601.152269595745
Fitness Variation: 2695.564299656608
Distribution: [] -> 0.283, #2 -> 0.202, append -> 0.106, concat -> 0.079, length -> 0.044, 10 -> 0.042, prepend -> 0.042, access -> 0.036, 11 -> 0.034, #4 -> 0.026
------------
[347.072s]Generation 182
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 4; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[8],[],[]] ; iter: append(#2, concat(append(#4, length(concat(#2, #2))), access(#2, #3, #4))); seedExpr: prepend(append([], 8), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[8],[],[]]), Vector([[8],[],[],[6]]), Vector([[8],[],[],[6],[8]]), Vector([[8],[],[],[6],[8],[10,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6],[16]]), ...
Diversity: 415
Average Size: 33.796
Average Fitness: 5353.069125625162
Fitness Variation: 2764.1697156673004
Distribution: [] -> 0.284, #2 -> 0.198, append -> 0.104, concat -> 0.080, prepend -> 0.043, length -> 0.042, 10 -> 0.040, access -> 0.036, 11 -> 0.035, #1 -> 0.028
------------
[348.685s]Generation 183
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 7; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: 11; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 426
Average Size: 33.728
Average Fitness: 5354.647613045596
Fitness Variation: 2845.862480133796
Distribution: [] -> 0.278, #2 -> 0.201, append -> 0.104, concat -> 0.079, prepend -> 0.044, length -> 0.043, 10 -> 0.039, access -> 0.035, 11 -> 0.034, #1 -> 0.030
------------
[350.160s]Generation 184
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 11; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 0 ; iter: 9; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 428
Average Size: 34.106
Average Fitness: 5449.7985741288
Fitness Variation: 2712.0385360947657
Distribution: [] -> 0.281, #2 -> 0.203, append -> 0.104, concat -> 0.080, length -> 0.044, prepend -> 0.043, 10 -> 0.039, access -> 0.035, 11 -> 0.034, #1 -> 0.028
------------
[351.802s]Generation 185
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 9 ; iter: 9; seedExpr: 9 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 3 ; iter: 1; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 431
Average Size: 33.818
Average Fitness: 5385.44947501884
Fitness Variation: 2743.8078152939584
Distribution: [] -> 0.281, #2 -> 0.203, append -> 0.106, concat -> 0.080, length -> 0.043, prepend -> 0.041, 10 -> 0.039, access -> 0.036, 11 -> 0.034, #4 -> 0.027
------------
[353.604s]Generation 186
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 4 ; iter: 11; seedExpr: 4 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 0 ; iter: #3; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 430
Average Size: 33.826
Average Fitness: 5491.204129128089
Fitness Variation: 2722.628298377757
Distribution: [] -> 0.285, #2 -> 0.202, append -> 0.106, concat -> 0.079, length -> 0.044, prepend -> 0.042, 10 -> 0.040, 11 -> 0.037, access -> 0.035, #1 -> 0.026
------------
[355.540s]Generation 187
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#4, length(concat(#2, #2))), access(#2, #3, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 430
Average Size: 33.784
Average Fitness: 5450.93569226848
Fitness Variation: 2700.2779784378595
Distribution: [] -> 0.282, #2 -> 0.202, append -> 0.104, concat -> 0.079, length -> 0.043, prepend -> 0.042, 10 -> 0.039, 11 -> 0.036, access -> 0.035, #1 -> 0.027
------------
[357.072s]Generation 188
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 10; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #1))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 11 ; iter: #0; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 418
Average Size: 34.046
Average Fitness: 5464.045135304083
Fitness Variation: 2713.7261405710738
Distribution: [] -> 0.279, #2 -> 0.205, append -> 0.103, concat -> 0.081, length -> 0.044, prepend -> 0.041, 10 -> 0.041, access -> 0.036, 11 -> 0.036, #1 -> 0.026
------------
[359.072s]Generation 189
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 1 ; iter: #3; seedExpr: 1 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: #3; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 426
Average Size: 33.604
Average Fitness: 5475.818989917064
Fitness Variation: 2709.4971319099627
Distribution: [] -> 0.288, #2 -> 0.203, append -> 0.104, concat -> 0.080, prepend -> 0.043, length -> 0.043, 10 -> 0.040, 11 -> 0.037, access -> 0.035, #4 -> 0.027
------------
[360.687s]Generation 190
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 9; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[8],[],[]] ; iter: append(#2, concat(append(#4, length(concat(#2, #2))), access(#2, #3, []))); seedExpr: prepend(append([], 8), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[8],[],[]]), Vector([[8],[],[],[6]]), Vector([[8],[],[],[6],[8]]), Vector([[8],[],[],[6],[8],[10,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6],[16]]), ...
Diversity: 417
Average Size: 34.118
Average Fitness: 5543.360504660962
Fitness Variation: 2668.7157489059655
Distribution: [] -> 0.287, #2 -> 0.203, append -> 0.105, concat -> 0.079, length -> 0.043, prepend -> 0.042, 10 -> 0.039, access -> 0.037, 11 -> 0.036, #4 -> 0.026
------------
[362.330s]Generation 191
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 9; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#4, length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 3 ; iter: 11; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 422
Average Size: 33.54
Average Fitness: 5581.555308517808
Fitness Variation: 2642.262824797162
Distribution: [] -> 0.285, #2 -> 0.207, append -> 0.106, concat -> 0.080, length -> 0.043, prepend -> 0.041, 10 -> 0.040, 11 -> 0.039, access -> 0.035, #4 -> 0.028
------------
[363.882s]Generation 192
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 4 ; iter: 11; seedExpr: 4 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 8 ; iter: 2; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 430
Average Size: 33.652
Average Fitness: 5307.599361824562
Fitness Variation: 2782.1849717423793
Distribution: [] -> 0.284, #2 -> 0.205, append -> 0.106, concat -> 0.080, length -> 0.043, 10 -> 0.041, prepend -> 0.040, 11 -> 0.039, access -> 0.035, #4 -> 0.029
------------
[365.464s]Generation 193
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 4 ; iter: 10; seedExpr: 4 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#4, length(concat(#2, #2))), access(#2, 10, #1))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 11 ; iter: 11; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 420
Average Size: 33.584
Average Fitness: 5559.654113003474
Fitness Variation: 2708.5770566294964
Distribution: [] -> 0.286, #2 -> 0.206, append -> 0.106, concat -> 0.081, length -> 0.043, 10 -> 0.041, 11 -> 0.039, prepend -> 0.039, access -> 0.036, #4 -> 0.028
------------
[366.976s]Generation 194
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 8; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 5 ; iter: 11; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 416
Average Size: 33.666
Average Fitness: 5712.991925959639
Fitness Variation: 2558.261898945081
Distribution: [] -> 0.283, #2 -> 0.204, append -> 0.104, concat -> 0.082, prepend -> 0.043, length -> 0.043, 10 -> 0.042, 11 -> 0.039, access -> 0.036, #1 -> 0.027
------------
[368.238s]Generation 195
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 7; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 7 ; iter: 11; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 432
Average Size: 33.846
Average Fitness: 5489.623130430393
Fitness Variation: 2688.2379221034003
Distribution: [] -> 0.284, #2 -> 0.204, append -> 0.105, concat -> 0.081, length -> 0.043, prepend -> 0.041, 10 -> 0.040, 11 -> 0.037, access -> 0.037, #1 -> 0.024
------------
[369.703s]Generation 196
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[8],[],[]] ; iter: append(#2, concat(append(#4, length(concat(#2, #2))), access(#2, #0, []))); seedExpr: prepend(append([], 8), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: 8; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[8],[],[]]), Vector([[8],[],[],[6]]), Vector([[8],[],[],[6],[8]]), Vector([[8],[],[],[6],[8],[10,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6],[16]]), ...
Diversity: 428
Average Size: 33.566
Average Fitness: 5183.110972530345
Fitness Variation: 2854.9788472758864
Distribution: [] -> 0.285, #2 -> 0.200, append -> 0.106, concat -> 0.080, prepend -> 0.043, length -> 0.042, 10 -> 0.040, 11 -> 0.036, access -> 0.036, #4 -> 0.026
------------
[371.297s]Generation 197
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 0 ; iter: #0; seedExpr: 0 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, #3, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 419
Average Size: 33.908
Average Fitness: 5461.153194342616
Fitness Variation: 2760.1416485258933
Distribution: [] -> 0.280, #2 -> 0.205, append -> 0.106, concat -> 0.081, length -> 0.044, 10 -> 0.044, prepend -> 0.040, access -> 0.036, 11 -> 0.033, #4 -> 0.026
------------
[373.295s]Generation 198
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[8],[],[]] ; iter: append(#2, concat(append(#4, length(concat(#2, #2))), access(#2, #0, #1))); seedExpr: prepend(append([], 8), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[8],[],[]]), Vector([[8],[],[],[6]]), Vector([[8],[],[],[6],[8]]), Vector([[8],[],[],[6],[8],[10,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6],[16]]), ...
Diversity: 423
Average Size: 33.588
Average Fitness: 5298.136472896547
Fitness Variation: 2776.536008035743
Distribution: [] -> 0.281, #2 -> 0.201, append -> 0.107, concat -> 0.080, 10 -> 0.044, length -> 0.043, prepend -> 0.041, access -> 0.035, 11 -> 0.035, #1 -> 0.029
------------
[375.230s]Generation 199
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 9 ; iter: #0; seedExpr: 9 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 3 ; iter: 7; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 426
Average Size: 33.824
Average Fitness: 5426.893858878589
Fitness Variation: 2708.8654527318013
Distribution: [] -> 0.274, #2 -> 0.206, append -> 0.105, concat -> 0.080, 10 -> 0.045, length -> 0.044, prepend -> 0.042, access -> 0.036, 11 -> 0.036, #1 -> 0.030
------------
[376.955s]Generation 200
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, #3, #1))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 11 ; iter: 10; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 419
Average Size: 33.902
Average Fitness: 5650.364027582411
Fitness Variation: 2615.475484416222
Distribution: [] -> 0.279, #2 -> 0.202, append -> 0.106, concat -> 0.078, 10 -> 0.044, prepend -> 0.043, length -> 0.043, 11 -> 0.038, access -> 0.035, #1 -> 0.027
------------
[378.903s]Generation 201
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 11; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[8],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 8), prepend([], append([], []))) }
[S3: EInt]{ seed: 8 ; iter: 2; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[8],[],[]]), Vector([[8],[],[],[6]]), Vector([[8],[],[],[6],[8]]), Vector([[8],[],[],[6],[8],[10,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6],[16]]), ...
Diversity: 408
Average Size: 33.446
Average Fitness: 5535.097473340717
Fitness Variation: 2675.181465808778
Distribution: [] -> 0.280, #2 -> 0.208, append -> 0.106, concat -> 0.082, 10 -> 0.045, length -> 0.044, prepend -> 0.041, access -> 0.035, 11 -> 0.035, #1 -> 0.028
------------
[380.564s]Generation 202
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 9 ; iter: #3; seedExpr: 9 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 0 ; iter: 11; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 413
Average Size: 33.668
Average Fitness: 5504.145147968936
Fitness Variation: 2727.7311563463277
Distribution: [] -> 0.276, #2 -> 0.203, append -> 0.105, concat -> 0.078, 10 -> 0.045, prepend -> 0.044, length -> 0.042, access -> 0.036, 11 -> 0.036, #1 -> 0.028
------------
[382.035s]Generation 203
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 420
Average Size: 33.824
Average Fitness: 5194.015465751766
Fitness Variation: 2805.7957145294044
Distribution: [] -> 0.278, #2 -> 0.203, append -> 0.105, concat -> 0.080, length -> 0.043, prepend -> 0.043, 10 -> 0.042, access -> 0.036, 11 -> 0.036, #4 -> 0.027
------------
[383.406s]Generation 204
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 9; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 3 ; iter: 1; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 422
Average Size: 34.008
Average Fitness: 5470.600199694153
Fitness Variation: 2772.4984428187877
Distribution: [] -> 0.277, #2 -> 0.202, append -> 0.106, concat -> 0.080, length -> 0.042, prepend -> 0.041, 10 -> 0.041, 11 -> 0.037, access -> 0.035, #4 -> 0.030
------------
[385.003s]Generation 205
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 8; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 11 ; iter: 10; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 414
Average Size: 33.414
Average Fitness: 5465.487206461029
Fitness Variation: 2742.7054587918788
Distribution: [] -> 0.270, #2 -> 0.207, append -> 0.105, concat -> 0.081, length -> 0.044, 10 -> 0.041, prepend -> 0.039, 11 -> 0.037, access -> 0.035, #4 -> 0.033
------------
[386.531s]Generation 206
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 8; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 3 ; iter: 10; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 414
Average Size: 33.698
Average Fitness: 5375.604054322656
Fitness Variation: 2767.7384767894873
Distribution: [] -> 0.272, #2 -> 0.202, append -> 0.106, concat -> 0.079, length -> 0.043, prepend -> 0.041, 10 -> 0.041, #4 -> 0.037, access -> 0.036, 11 -> 0.036
------------
[388.049s]Generation 207
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 9; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 3 ; iter: 1; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 430
Average Size: 33.628
Average Fitness: 5301.878729236593
Fitness Variation: 2773.7620000964353
Distribution: [] -> 0.269, #2 -> 0.202, append -> 0.106, concat -> 0.080, length -> 0.043, 10 -> 0.041, prepend -> 0.040, 11 -> 0.037, #4 -> 0.036, access -> 0.035
------------
[389.290s]Generation 208
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 11; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 8 ; iter: 2; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 416
Average Size: 33.77
Average Fitness: 5488.465404939507
Fitness Variation: 2664.9329297164454
Distribution: [] -> 0.268, #2 -> 0.205, append -> 0.103, concat -> 0.082, length -> 0.043, 10 -> 0.043, prepend -> 0.041, access -> 0.037, 11 -> 0.035, #4 -> 0.035
------------
[390.513s]Generation 209
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 8; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, #3, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 11 ; iter: 10; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 426
Average Size: 33.684
Average Fitness: 5269.071124816193
Fitness Variation: 2814.7128090542124
Distribution: [] -> 0.270, #2 -> 0.203, append -> 0.106, concat -> 0.080, length -> 0.043, 10 -> 0.042, prepend -> 0.041, access -> 0.035, 11 -> 0.034, #4 -> 0.034
------------
[391.720s]Generation 210
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 11; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[8],[],[]] ; iter: append(#2, concat(append(#4, length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 8), prepend([], append([], []))) }
[S3: EInt]{ seed: 3 ; iter: 2; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[8],[],[]]), Vector([[8],[],[],[6]]), Vector([[8],[],[],[6],[8]]), Vector([[8],[],[],[6],[8],[10,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6],[16]]), ...
Diversity: 416
Average Size: 33.56
Average Fitness: 5356.365900399013
Fitness Variation: 2801.2192359657847
Distribution: [] -> 0.276, #2 -> 0.202, append -> 0.107, concat -> 0.079, prepend -> 0.045, length -> 0.042, 10 -> 0.042, 11 -> 0.036, access -> 0.034, #4 -> 0.032
------------
[392.932s]Generation 211
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], length(concat(#2, #2))), access(#2, 10, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 5 ; iter: 11; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[6]]), Vector([[11],[],[],[6],[8]]), Vector([[11],[],[],[6],[8],[10,11]]), Vector([[11],[],[],[6],[8],[10,11],[12,8]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6]]), Vector([[11],[],[],[6],[8],[10,11],[12,8],[14,6],[16]]), ...
Diversity: 421
Average Size: 34.04
Average Fitness: 5541.5467484725605
Fitness Variation: 2689.0780714768193
Distribution: [] -> 0.267, #2 -> 0.203, append -> 0.104, concat -> 0.080, length -> 0.044, prepend -> 0.043, 10 -> 0.041, access -> 0.036, 11 -> 0.036, #4 -> 0.033
------------
[394.076s]Generation 212
Best Result: (fitness: 7383.8, performance: 7672.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 11; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[8],[],[]] ; iter: append(#2, concat(append(#1, length(concat(#2, #2))), access(#2, 10, #4))); seedExpr: prepend(append([], 8), prepend([], append([], []))) }
[S3: EInt]{ seed: 11 ; iter: 2; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[8],[],[]]), Vector([[8],[],[],[6]]), Vector([[8],[],[],[6],[8]]), Vector([[8],[],[],[6],[8],[10,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6]]), Vector([[8],[],[],[6],[8],[10,8],[12,8],[14,6],[16]]), ...
Diversity: 405
Average Size: 33.376
Average Fitness: 5680.837791877428
Fitness Variation: 2658.794903149155
Distribution: [] -> 0.270, #2 -> 0.208, append -> 0.105, concat -> 0.080, length -> 0.043, prepend -> 0.043, 10 -> 0.042, 11 -> 0.037, access -> 0.035, #4 -> 0.033
------------
[395.238s]Generation 213
Best Result: (fitness: 8387.7, performance: 8715.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, #3, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[24]]), Vector([[11],[],[],[24],[32]]), Vector([[11],[],[],[24],[32],[40,11]]), Vector([[11],[],[],[24],[32],[40,11],[48,32]]), Vector([[11],[],[],[24],[32],[40,11],[48,32],[56,24]]), Vector([[11],[],[],[24],[32],[40,11],[48,32],[56,24],[64]]), ...
Diversity: 415
Average Size: 33.416
Average Fitness: 5298.090723003471
Fitness Variation: 2785.60410387574
Distribution: [] -> 0.271, #2 -> 0.203, append -> 0.106, concat -> 0.077, length -> 0.043, 10 -> 0.042, prepend -> 0.042, 11 -> 0.037, access -> 0.035, #4 -> 0.035
------------
[396.312s]Generation 214
Best Result: (fitness: 8387.7, performance: 8715.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, #3, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[24]]), Vector([[11],[],[],[24],[32]]), Vector([[11],[],[],[24],[32],[40,11]]), Vector([[11],[],[],[24],[32],[40,11],[48,32]]), Vector([[11],[],[],[24],[32],[40,11],[48,32],[56,24]]), Vector([[11],[],[],[24],[32],[40,11],[48,32],[56,24],[64]]), ...
Diversity: 413
Average Size: 33.79
Average Fitness: 5524.430358779641
Fitness Variation: 2697.7507118782164
Distribution: [] -> 0.272, #2 -> 0.203, append -> 0.105, concat -> 0.079, length -> 0.043, 10 -> 0.043, prepend -> 0.043, 11 -> 0.037, access -> 0.035, #4 -> 0.034
------------
[397.357s]Generation 215
Best Result: (fitness: 8387.7, performance: 8715.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, #3, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[24]]), Vector([[11],[],[],[24],[32]]), Vector([[11],[],[],[24],[32],[40,11]]), Vector([[11],[],[],[24],[32],[40,11],[48,32]]), Vector([[11],[],[],[24],[32],[40,11],[48,32],[56,24]]), Vector([[11],[],[],[24],[32],[40,11],[48,32],[56,24],[64]]), ...
Diversity: 405
Average Size: 33.532
Average Fitness: 5481.489684029995
Fitness Variation: 2886.4199333826987
Distribution: [] -> 0.277, #2 -> 0.194, append -> 0.106, concat -> 0.072, length -> 0.043, 10 -> 0.043, prepend -> 0.042, 11 -> 0.036, access -> 0.036, #4 -> 0.032
------------
[398.828s]Generation 216
Best Result: (fitness: 9838.7, performance: 10513.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: concat(append([], length(concat(#2, #2))), access(#2, #3, #4)); seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[24,11]]), Vector([[11],[],[],[24,11],[32,24,11]]), Vector([[11],[],[],[24,11],[32,24,11],[40,24,11]]), Vector([[11],[],[],[24,11],[32,24,11],[40,24,11],[48,24,11]]), Vector([[11],[],[],[24,11],[32,24,11],[40,24,11],[48,24,11],[56,24,11]]), Vector([[11],[],[],[24,11],[32,24,11],[40,24,11],[48,24,11],[56,24,11],[64,24,11]]), ...
Diversity: 407
Average Size: 33.964
Average Fitness: 5735.6624909338525
Fitness Variation: 3003.0142421004125
Distribution: [] -> 0.291, #2 -> 0.172, append -> 0.106, concat -> 0.056, length -> 0.047, prepend -> 0.043, 10 -> 0.037, access -> 0.035, 11 -> 0.034, 8 -> 0.031
------------
[400.049s]Generation 217
Best Result: (fitness: 9838.7, performance: 10513.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: concat(append([], length(concat(#2, #2))), access(#2, #3, #4)); seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[24,11]]), Vector([[11],[],[],[24,11],[32,24,11]]), Vector([[11],[],[],[24,11],[32,24,11],[40,24,11]]), Vector([[11],[],[],[24,11],[32,24,11],[40,24,11],[48,24,11]]), Vector([[11],[],[],[24,11],[32,24,11],[40,24,11],[48,24,11],[56,24,11]]), Vector([[11],[],[],[24,11],[32,24,11],[40,24,11],[48,24,11],[56,24,11],[64,24,11]]), ...
Diversity: 372
Average Size: 34.652
Average Fitness: 6020.214044342188
Fitness Variation: 3240.173257194392
Distribution: [] -> 0.297, #2 -> 0.152, append -> 0.107, 8 -> 0.052, length -> 0.052, #3 -> 0.042, prepend -> 0.041, times -> 0.038, concat -> 0.035, access -> 0.035
------------
[401.880s]Generation 218
Best Result: (fitness: 9987.1, performance: 10513.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: concat(append([], 7), access(#2, #3, #4)); seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[24,11]]), Vector([[11],[],[],[24,11],[32,24,11]]), Vector([[11],[],[],[24,11],[32,24,11],[40,24,11]]), Vector([[11],[],[],[24,11],[32,24,11],[40,24,11],[48,24,11]]), Vector([[11],[],[],[24,11],[32,24,11],[40,24,11],[48,24,11],[56,24,11]]), Vector([[11],[],[],[24,11],[32,24,11],[40,24,11],[48,24,11],[56,24,11],[64,24,11]]), ...
Diversity: 373
Average Size: 34.878
Average Fitness: 6648.526504443887
Fitness Variation: 3252.1707695691784
Distribution: [] -> 0.296, #2 -> 0.149, append -> 0.106, 8 -> 0.057, length -> 0.053, times -> 0.042, prepend -> 0.041, #3 -> 0.036, access -> 0.035, 11 -> 0.033
------------
[403.503s]Generation 219
Best Result: (fitness: 10118.1, performance: 10513.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 11), prepend([], append([], []))) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[],[]]), Vector([[11],[],[],[24,11]]), Vector([[11],[],[],[24,11],[32,24,11]]), Vector([[11],[],[],[24,11],[32,24,11],[40,24,11]]), Vector([[11],[],[],[24,11],[32,24,11],[40,24,11],[48,24,11]]), Vector([[11],[],[],[24,11],[32,24,11],[40,24,11],[48,24,11],[56,24,11]]), Vector([[11],[],[],[24,11],[32,24,11],[40,24,11],[48,24,11],[56,24,11],[64,24,11]]), ...
Diversity: 402
Average Size: 36.092
Average Fitness: 6598.278950930083
Fitness Variation: 3753.4267343452925
Distribution: [] -> 0.296, #2 -> 0.144, append -> 0.104, length -> 0.051, 8 -> 0.051, prepend -> 0.043, 11 -> 0.040, times -> 0.039, access -> 0.036, concat -> 0.033
------------
[405.007s]Generation 220
Best Result: (fitness: 10173.7, performance: 10514.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 11), prepend([], [])) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[]]), Vector([[11],[],[16]]), Vector([[11],[],[16],[24,11]]), Vector([[11],[],[16],[24,11],[32,24,11]]), Vector([[11],[],[16],[24,11],[32,24,11],[40,24,11]]), Vector([[11],[],[16],[24,11],[32,24,11],[40,24,11],[48,24,11]]), Vector([[11],[],[16],[24,11],[32,24,11],[40,24,11],[48,24,11],[56,24,11]]), ...
Diversity: 379
Average Size: 36.268
Average Fitness: 7398.978705459192
Fitness Variation: 3636.353750349186
Distribution: [] -> 0.291, #2 -> 0.152, append -> 0.104, length -> 0.053, 8 -> 0.052, times -> 0.041, prepend -> 0.040, 11 -> 0.039, access -> 0.037, concat -> 0.031
------------
[406.651s]Generation 221
Best Result: (fitness: 10173.7, performance: 10514.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[10],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 10), prepend([], [])) }
[S3: EInt]{ seed: 11 ; iter: 10; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[10],[]]), Vector([[10],[],[16]]), Vector([[10],[],[16],[24,10]]), Vector([[10],[],[16],[24,10],[32,24,10]]), Vector([[10],[],[16],[24,10],[32,24,10],[40,24,10]]), Vector([[10],[],[16],[24,10],[32,24,10],[40,24,10],[48,24,10]]), Vector([[10],[],[16],[24,10],[32,24,10],[40,24,10],[48,24,10],[56,24,10]]), ...
Diversity: 382
Average Size: 36.758
Average Fitness: 7192.004485640161
Fitness Variation: 3910.878516026926
Distribution: [] -> 0.283, #2 -> 0.154, append -> 0.103, length -> 0.051, 8 -> 0.051, times -> 0.040, access -> 0.040, prepend -> 0.039, 11 -> 0.036, concat -> 0.033
------------
[408.265s]Generation 222
Best Result: (fitness: 10173.7, performance: 10514.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 11), prepend([], [])) }
[S3: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[]]), Vector([[11],[],[16]]), Vector([[11],[],[16],[24,11]]), Vector([[11],[],[16],[24,11],[32,24,11]]), Vector([[11],[],[16],[24,11],[32,24,11],[40,24,11]]), Vector([[11],[],[16],[24,11],[32,24,11],[40,24,11],[48,24,11]]), Vector([[11],[],[16],[24,11],[32,24,11],[40,24,11],[48,24,11],[56,24,11]]), ...
Diversity: 397
Average Size: 35.8
Average Fitness: 7242.1115969574075
Fitness Variation: 3991.808003336176
Distribution: [] -> 0.287, #2 -> 0.156, append -> 0.101, 8 -> 0.053, length -> 0.053, times -> 0.042, 3 -> 0.042, access -> 0.041, prepend -> 0.038, concat -> 0.031
------------
[409.850s]Generation 223
Best Result: (fitness: 10173.7, performance: 10514.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 11), prepend([], [])) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[]]), Vector([[11],[],[16]]), Vector([[11],[],[16],[24,11]]), Vector([[11],[],[16],[24,11],[32,24,11]]), Vector([[11],[],[16],[24,11],[32,24,11],[40,24,11]]), Vector([[11],[],[16],[24,11],[32,24,11],[40,24,11],[48,24,11]]), Vector([[11],[],[16],[24,11],[32,24,11],[40,24,11],[48,24,11],[56,24,11]]), ...
Diversity: 400
Average Size: 33.972
Average Fitness: 6887.248491452001
Fitness Variation: 4177.345250555452
Distribution: [] -> 0.291, #2 -> 0.150, append -> 0.101, 8 -> 0.055, length -> 0.054, 3 -> 0.044, times -> 0.043, prepend -> 0.041, access -> 0.036, 11 -> 0.032
------------
[411.414s]Generation 224
Best Result: (fitness: 10173.7, performance: 10514.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[11],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 11), prepend([], [])) }
[S3: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[11],[]]), Vector([[11],[],[16]]), Vector([[11],[],[16],[24,11]]), Vector([[11],[],[16],[24,11],[32,24,11]]), Vector([[11],[],[16],[24,11],[32,24,11],[40,24,11]]), Vector([[11],[],[16],[24,11],[32,24,11],[40,24,11],[48,24,11]]), Vector([[11],[],[16],[24,11],[32,24,11],[40,24,11],[48,24,11],[56,24,11]]), ...
Diversity: 385
Average Size: 33.038
Average Fitness: 7308.443325679679
Fitness Variation: 4014.7745061183114
Distribution: [] -> 0.277, #2 -> 0.157, append -> 0.094, 8 -> 0.056, length -> 0.056, 3 -> 0.046, times -> 0.045, prepend -> 0.037, access -> 0.037, 11 -> 0.034
------------
[412.941s]Generation 225
Best Result: (fitness: 10259.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 3 ; iter: dec(#3); seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 387
Average Size: 31.848
Average Fitness: 6946.381202042083
Fitness Variation: 4168.33436422673
Distribution: [] -> 0.270, #2 -> 0.163, append -> 0.089, 8 -> 0.059, length -> 0.058, 3 -> 0.046, times -> 0.046, access -> 0.039, 11 -> 0.035, 10 -> 0.034
------------
[414.626s]Generation 226
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 11 ; iter: #3; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 407
Average Size: 31.548
Average Fitness: 6813.041325279654
Fitness Variation: 4260.0738242498865
Distribution: [] -> 0.264, #2 -> 0.164, append -> 0.090, 8 -> 0.060, length -> 0.057, 3 -> 0.050, times -> 0.047, access -> 0.040, 11 -> 0.033, prepend -> 0.033
------------
[416.262s]Generation 227
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 409
Average Size: 31.772
Average Fitness: 7172.075038914773
Fitness Variation: 4140.307135174901
Distribution: [] -> 0.269, #2 -> 0.167, append -> 0.090, 8 -> 0.060, length -> 0.060, 3 -> 0.052, times -> 0.048, access -> 0.040, prepend -> 0.033, concat -> 0.032
------------
[417.962s]Generation 228
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 11 ; iter: #3; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 407
Average Size: 32.166
Average Fitness: 7388.325943071233
Fitness Variation: 4019.0311861774558
Distribution: [] -> 0.267, #2 -> 0.162, append -> 0.090, length -> 0.061, 8 -> 0.059, 3 -> 0.051, times -> 0.048, access -> 0.039, prepend -> 0.032, concat -> 0.030
------------
[419.930s]Generation 229
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 420
Average Size: 32.346
Average Fitness: 7177.2858578918895
Fitness Variation: 4153.0612654731
Distribution: [] -> 0.261, #2 -> 0.160, append -> 0.092, length -> 0.062, 8 -> 0.058, 3 -> 0.050, times -> 0.047, access -> 0.038, prepend -> 0.032, concat -> 0.030
------------
[421.453s]Generation 230
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 10; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 11 ; iter: #3; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 386
Average Size: 31.95
Average Fitness: 7348.696364900404
Fitness Variation: 4101.531349870817
Distribution: [] -> 0.251, #2 -> 0.163, append -> 0.094, length -> 0.063, 8 -> 0.059, 3 -> 0.050, times -> 0.047, access -> 0.037, 0 -> 0.033, concat -> 0.030
------------
[422.699s]Generation 231
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 11 ; iter: #3; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 376
Average Size: 31.908
Average Fitness: 7353.327977857719
Fitness Variation: 4115.342943272327
Distribution: [] -> 0.241, #2 -> 0.161, append -> 0.096, length -> 0.058, 8 -> 0.058, 3 -> 0.050, times -> 0.046, access -> 0.039, 0 -> 0.039, #4 -> 0.034
------------
[424.002s]Generation 232
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 391
Average Size: 31.772
Average Fitness: 7155.0883045666205
Fitness Variation: 4187.569245769004
Distribution: [] -> 0.240, #2 -> 0.164, append -> 0.096, length -> 0.060, 8 -> 0.058, 3 -> 0.051, times -> 0.048, access -> 0.040, 0 -> 0.037, #4 -> 0.033
------------
[425.509s]Generation 233
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 5; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 398
Average Size: 31.76
Average Fitness: 7461.9385967123035
Fitness Variation: 4041.0478201968212
Distribution: [] -> 0.238, #2 -> 0.167, append -> 0.098, 8 -> 0.060, length -> 0.059, 3 -> 0.052, times -> 0.048, access -> 0.039, 0 -> 0.038, #4 -> 0.034
------------
[427.106s]Generation 234
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 395
Average Size: 31.682
Average Fitness: 7229.195657806245
Fitness Variation: 4138.347160474385
Distribution: [] -> 0.242, #2 -> 0.164, append -> 0.097, 8 -> 0.060, length -> 0.060, 3 -> 0.051, times -> 0.048, access -> 0.040, 0 -> 0.039, #4 -> 0.035
------------
[428.681s]Generation 235
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 2 ; iter: #3; seedExpr: 2 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 419
Average Size: 31.59
Average Fitness: 7144.812405320963
Fitness Variation: 4168.014247557197
Distribution: [] -> 0.244, #2 -> 0.163, append -> 0.097, 8 -> 0.060, length -> 0.059, 3 -> 0.050, times -> 0.047, access -> 0.040, 0 -> 0.040, #4 -> 0.032
------------
[430.125s]Generation 236
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 11 ; iter: #3; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 424
Average Size: 31.796
Average Fitness: 7100.640198773084
Fitness Variation: 4224.344677731839
Distribution: [] -> 0.242, #2 -> 0.165, append -> 0.097, length -> 0.060, 8 -> 0.060, 3 -> 0.053, times -> 0.048, access -> 0.040, 0 -> 0.039, #4 -> 0.031
------------
[431.823s]Generation 237
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 0 ; iter: #3; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 426
Average Size: 31.8
Average Fitness: 7208.462120724528
Fitness Variation: 4138.361787784139
Distribution: [] -> 0.245, #2 -> 0.162, append -> 0.096, length -> 0.058, 8 -> 0.056, 3 -> 0.051, times -> 0.046, access -> 0.040, 0 -> 0.039, concat -> 0.031
------------
[433.448s]Generation 238
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 432
Average Size: 31.698
Average Fitness: 7129.9911489416645
Fitness Variation: 4174.769643161324
Distribution: [] -> 0.246, #2 -> 0.160, append -> 0.096, length -> 0.058, 8 -> 0.057, 3 -> 0.051, times -> 0.047, 0 -> 0.040, access -> 0.039, #4 -> 0.031
------------
[435.146s]Generation 239
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 0 ; iter: 10; seedExpr: 0 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 11 ; iter: #3; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 423
Average Size: 31.85
Average Fitness: 7111.366515582212
Fitness Variation: 4183.532264667043
Distribution: [] -> 0.242, #2 -> 0.161, append -> 0.096, 8 -> 0.060, length -> 0.059, 3 -> 0.051, times -> 0.049, 0 -> 0.039, access -> 0.039, concat -> 0.030
------------
[436.370s]Generation 240
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 10; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 3 ; iter: #3; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 433
Average Size: 31.804
Average Fitness: 7125.05300517446
Fitness Variation: 4159.477139174902
Distribution: [] -> 0.245, #2 -> 0.163, append -> 0.097, 8 -> 0.061, length -> 0.059, 3 -> 0.051, times -> 0.049, 0 -> 0.040, access -> 0.040, concat -> 0.030
------------
[437.567s]Generation 241
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 430
Average Size: 31.51
Average Fitness: 7069.452878422413
Fitness Variation: 4228.494559983109
Distribution: [] -> 0.248, #2 -> 0.162, append -> 0.098, 8 -> 0.060, length -> 0.059, 3 -> 0.051, times -> 0.048, 0 -> 0.042, access -> 0.039, concat -> 0.031
------------
[438.741s]Generation 242
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#4, times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 5 ; iter: 7; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 419
Average Size: 31.588
Average Fitness: 7358.831196884725
Fitness Variation: 4115.639944324321
Distribution: [] -> 0.250, #2 -> 0.161, append -> 0.098, 8 -> 0.060, length -> 0.058, 3 -> 0.052, times -> 0.047, 0 -> 0.041, access -> 0.039, concat -> 0.030
------------
[440.011s]Generation 243
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 11 ; iter: #3; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 424
Average Size: 32.0
Average Fitness: 7214.126742864994
Fitness Variation: 4098.427334890035
Distribution: [] -> 0.246, #2 -> 0.162, append -> 0.095, 8 -> 0.059, length -> 0.059, 3 -> 0.052, times -> 0.047, access -> 0.041, 0 -> 0.040, concat -> 0.031
------------
[441.295s]Generation 244
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 3 ; iter: 0; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 441
Average Size: 31.982
Average Fitness: 7087.1771240342705
Fitness Variation: 4161.66699010018
Distribution: [] -> 0.242, #2 -> 0.161, append -> 0.098, length -> 0.059, 8 -> 0.058, 3 -> 0.051, times -> 0.047, 0 -> 0.041, access -> 0.040, #1 -> 0.033
------------
[442.629s]Generation 245
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 4; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 429
Average Size: 31.44
Average Fitness: 6813.159256755127
Fitness Variation: 4292.467429341315
Distribution: [] -> 0.244, #2 -> 0.160, append -> 0.096, 8 -> 0.060, length -> 0.057, 3 -> 0.053, times -> 0.047, 0 -> 0.042, access -> 0.039, #1 -> 0.033
------------
[443.960s]Generation 246
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 10; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 424
Average Size: 32.178
Average Fitness: 7362.376612416307
Fitness Variation: 4095.283525885221
Distribution: [] -> 0.244, #2 -> 0.161, append -> 0.097, 8 -> 0.060, length -> 0.058, 3 -> 0.053, times -> 0.046, access -> 0.040, 0 -> 0.039, #1 -> 0.033
------------
[445.262s]Generation 247
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: #0; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#4, times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 3 ; iter: #3; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 432
Average Size: 31.71
Average Fitness: 6923.141328008218
Fitness Variation: 4221.954324745297
Distribution: [] -> 0.245, #2 -> 0.161, append -> 0.097, 8 -> 0.061, length -> 0.059, 3 -> 0.051, times -> 0.048, 0 -> 0.040, access -> 0.039, #1 -> 0.035
------------
[446.575s]Generation 248
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: #3; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 3 ; iter: 0; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 420
Average Size: 31.434
Average Fitness: 6935.340103684195
Fitness Variation: 4246.637692931514
Distribution: [] -> 0.242, #2 -> 0.160, append -> 0.100, 8 -> 0.061, length -> 0.057, 3 -> 0.053, times -> 0.047, 0 -> 0.042, access -> 0.040, #1 -> 0.038
------------
[447.918s]Generation 249
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 428
Average Size: 31.658
Average Fitness: 7081.536522153985
Fitness Variation: 4185.994136814238
Distribution: [] -> 0.235, #2 -> 0.162, append -> 0.096, 8 -> 0.062, length -> 0.059, 3 -> 0.054, times -> 0.048, 0 -> 0.041, access -> 0.040, #1 -> 0.039
------------
[449.159s]Generation 250
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 8; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 10 ; iter: 11; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 435
Average Size: 31.612
Average Fitness: 7133.835067213165
Fitness Variation: 4168.982144387067
Distribution: [] -> 0.236, #2 -> 0.162, append -> 0.101, 8 -> 0.063, length -> 0.059, 3 -> 0.054, times -> 0.048, 0 -> 0.041, #1 -> 0.040, access -> 0.040
------------
[450.401s]Generation 251
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #3; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, #3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 3 ; iter: #3; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 434
Average Size: 32.168
Average Fitness: 7386.42109575183
Fitness Variation: 4082.3599596607064
Distribution: [] -> 0.235, #2 -> 0.160, append -> 0.098, 8 -> 0.063, length -> 0.059, 3 -> 0.052, times -> 0.048, 0 -> 0.040, access -> 0.040, #1 -> 0.037
------------
[451.601s]Generation 252
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 0 ; iter: 10; seedExpr: 0 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 11 ; iter: 8; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 424
Average Size: 31.772
Average Fitness: 7574.458478233893
Fitness Variation: 4018.409605503554
Distribution: [] -> 0.245, #2 -> 0.161, append -> 0.098, 8 -> 0.064, length -> 0.059, 3 -> 0.055, times -> 0.048, 0 -> 0.042, access -> 0.040, #1 -> 0.032
------------
[452.878s]Generation 253
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #5
*
[S0: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 8 ; iter: 5; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), ...
Diversity: 430
Average Size: 31.498
Average Fitness: 6894.342505885334
Fitness Variation: 4234.148266883974
Distribution: [] -> 0.244, #2 -> 0.158, append -> 0.098, 8 -> 0.062, length -> 0.059, 3 -> 0.055, times -> 0.047, 0 -> 0.041, access -> 0.039, #1 -> 0.032
------------
[454.128s]Generation 254
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #3; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 1 ; iter: #0; seedExpr: 1 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 427
Average Size: 31.82
Average Fitness: 6903.966957551373
Fitness Variation: 4225.973648055054
Distribution: [] -> 0.246, #2 -> 0.156, append -> 0.099, 8 -> 0.062, length -> 0.057, 3 -> 0.055, times -> 0.046, 0 -> 0.041, access -> 0.040, #1 -> 0.034
------------
[455.673s]Generation 255
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 10; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 6 ; iter: 5; seedExpr: 6 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 423
Average Size: 31.8
Average Fitness: 7407.429261243969
Fitness Variation: 4107.203121256112
Distribution: [] -> 0.246, #2 -> 0.158, append -> 0.100, 8 -> 0.064, length -> 0.059, 3 -> 0.055, times -> 0.048, 0 -> 0.042, access -> 0.040, #1 -> 0.036
------------
[457.046s]Generation 256
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: #3; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 3 ; iter: #3; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 436
Average Size: 31.78
Average Fitness: 7161.524149500866
Fitness Variation: 4110.476366045071
Distribution: [] -> 0.242, #2 -> 0.159, append -> 0.099, 8 -> 0.064, length -> 0.060, 3 -> 0.053, times -> 0.047, 0 -> 0.042, access -> 0.038, #1 -> 0.035
------------
[458.455s]Generation 257
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 2 ; iter: #3; seedExpr: 2 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 11 ; iter: 10; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 441
Average Size: 31.416
Average Fitness: 7133.0125201191095
Fitness Variation: 4186.941465209336
Distribution: [] -> 0.242, #2 -> 0.161, append -> 0.096, 8 -> 0.063, length -> 0.059, 3 -> 0.053, times -> 0.047, 0 -> 0.041, access -> 0.039, #1 -> 0.036
------------
[460.360s]Generation 258
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 4 ; iter: #3; seedExpr: 4 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 3 ; iter: #0; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 418
Average Size: 31.836
Average Fitness: 7461.9912218365025
Fitness Variation: 4082.3258982208954
Distribution: [] -> 0.241, #2 -> 0.161, append -> 0.098, 8 -> 0.064, length -> 0.059, 3 -> 0.054, times -> 0.047, 0 -> 0.041, access -> 0.040, #1 -> 0.036
------------
[461.651s]Generation 259
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 11; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 3 ; iter: #3; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 428
Average Size: 31.836
Average Fitness: 7099.723477802722
Fitness Variation: 4162.1969150965015
Distribution: [] -> 0.237, #2 -> 0.162, append -> 0.096, 8 -> 0.062, length -> 0.059, 3 -> 0.053, times -> 0.048, 0 -> 0.042, access -> 0.039, #1 -> 0.037
------------
[462.961s]Generation 260
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 3; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 3 ; iter: 4; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 430
Average Size: 31.914
Average Fitness: 7032.015005755779
Fitness Variation: 4230.921686096653
Distribution: [] -> 0.242, #2 -> 0.158, append -> 0.096, 8 -> 0.063, length -> 0.057, 3 -> 0.056, times -> 0.047, 0 -> 0.043, access -> 0.040, #1 -> 0.036
------------
[464.288s]Generation 261
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 10 ; iter: #3; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 425
Average Size: 31.942
Average Fitness: 7495.932111993305
Fitness Variation: 4029.7899931760394
Distribution: [] -> 0.242, #2 -> 0.160, append -> 0.095, 8 -> 0.063, length -> 0.058, 3 -> 0.056, times -> 0.048, 0 -> 0.044, access -> 0.041, #1 -> 0.034
------------
[465.592s]Generation 262
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#4, times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 1 ; iter: 0; seedExpr: 1 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 434
Average Size: 31.7
Average Fitness: 7106.533545448745
Fitness Variation: 4202.019274419408
Distribution: [] -> 0.241, #2 -> 0.160, append -> 0.095, 8 -> 0.063, length -> 0.058, 3 -> 0.056, times -> 0.049, 0 -> 0.043, access -> 0.039, #1 -> 0.035
------------
[466.954s]Generation 263
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 0 ; iter: 0; seedExpr: 0 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 3 ; iter: 8; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 424
Average Size: 31.48
Average Fitness: 7213.041549880014
Fitness Variation: 4111.844703089281
Distribution: [] -> 0.238, #2 -> 0.163, append -> 0.097, 8 -> 0.063, length -> 0.060, 3 -> 0.059, times -> 0.048, 0 -> 0.045, access -> 0.039, #1 -> 0.035
------------
[468.331s]Generation 264
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 3; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 3 ; iter: 4; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 430
Average Size: 32.17
Average Fitness: 7422.088813997728
Fitness Variation: 4052.2110907842616
Distribution: [] -> 0.240, #2 -> 0.159, append -> 0.097, 8 -> 0.062, length -> 0.058, 3 -> 0.056, times -> 0.047, 0 -> 0.043, access -> 0.040, #1 -> 0.035
------------
[469.663s]Generation 265
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: #0; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#4, times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 3 ; iter: #0; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 428
Average Size: 32.008
Average Fitness: 7322.1418082863365
Fitness Variation: 4085.2720769041553
Distribution: [] -> 0.239, #2 -> 0.159, append -> 0.098, 8 -> 0.063, length -> 0.060, 3 -> 0.056, times -> 0.047, 0 -> 0.043, access -> 0.040, #1 -> 0.035
------------
[471.134s]Generation 266
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 0 ; iter: 0; seedExpr: 0 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 3 ; iter: 8; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 434
Average Size: 32.048
Average Fitness: 7383.872976807436
Fitness Variation: 4083.5479710739983
Distribution: [] -> 0.242, #2 -> 0.160, append -> 0.099, 8 -> 0.065, length -> 0.058, 3 -> 0.057, times -> 0.047, 0 -> 0.042, access -> 0.039, #1 -> 0.037
------------
[472.612s]Generation 267
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 3 ; iter: #3; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 433
Average Size: 31.912
Average Fitness: 7484.490890698064
Fitness Variation: 4052.7959230327306
Distribution: [] -> 0.249, #2 -> 0.164, append -> 0.098, 8 -> 0.066, length -> 0.059, 3 -> 0.059, times -> 0.048, 0 -> 0.042, access -> 0.041, #1 -> 0.033
------------
[474.571s]Generation 268
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: #0; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 3 ; iter: #3; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 429
Average Size: 31.64
Average Fitness: 7242.722576000147
Fitness Variation: 4210.5936912017605
Distribution: [] -> 0.247, #2 -> 0.163, append -> 0.098, 8 -> 0.065, 3 -> 0.059, length -> 0.058, times -> 0.048, 0 -> 0.044, access -> 0.039, #1 -> 0.034
------------
[476.009s]Generation 269
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: #3; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 0 ; iter: #3; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 422
Average Size: 31.766
Average Fitness: 7277.504532887118
Fitness Variation: 4144.879924215633
Distribution: [] -> 0.247, #2 -> 0.164, append -> 0.098, 8 -> 0.066, length -> 0.060, 3 -> 0.059, times -> 0.047, 0 -> 0.043, access -> 0.040, #1 -> 0.036
------------
[477.499s]Generation 270
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 8; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 3 ; iter: 2; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 423
Average Size: 31.758
Average Fitness: 7319.505154917593
Fitness Variation: 4102.809462212035
Distribution: [] -> 0.244, #2 -> 0.163, append -> 0.099, 8 -> 0.066, length -> 0.060, 3 -> 0.059, times -> 0.048, 0 -> 0.044, #1 -> 0.041, access -> 0.039
------------
[478.964s]Generation 271
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 1; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 2 ; iter: #0; seedExpr: 2 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 416
Average Size: 31.492
Average Fitness: 7400.023158975737
Fitness Variation: 4100.473058194819
Distribution: [] -> 0.245, #2 -> 0.162, append -> 0.099, 8 -> 0.065, 3 -> 0.060, length -> 0.058, times -> 0.047, 0 -> 0.044, access -> 0.039, #1 -> 0.039
------------
[480.307s]Generation 272
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 8; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 3 ; iter: #3; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 426
Average Size: 31.778
Average Fitness: 7419.309898141873
Fitness Variation: 4051.9301943145006
Distribution: [] -> 0.243, #2 -> 0.163, append -> 0.097, 8 -> 0.064, length -> 0.059, 3 -> 0.059, times -> 0.048, 0 -> 0.044, access -> 0.040, #1 -> 0.038
------------
[481.650s]Generation 273
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 0; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 423
Average Size: 32.206
Average Fitness: 7442.042197506829
Fitness Variation: 4094.3453644531355
Distribution: [] -> 0.242, #2 -> 0.159, append -> 0.097, 8 -> 0.065, length -> 0.058, 3 -> 0.057, times -> 0.047, 0 -> 0.045, access -> 0.040, #1 -> 0.039
------------
[483.346s]Generation 274
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: #0; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 10 ; iter: 3; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 413
Average Size: 31.31
Average Fitness: 7009.863616087181
Fitness Variation: 4266.933489883041
Distribution: [] -> 0.247, #2 -> 0.160, append -> 0.099, 8 -> 0.062, length -> 0.058, 3 -> 0.058, times -> 0.046, 0 -> 0.045, access -> 0.040, #1 -> 0.040
------------
[484.857s]Generation 275
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 0; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 0 ; iter: 2; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 435
Average Size: 31.4
Average Fitness: 6865.818660789428
Fitness Variation: 4233.207997128012
Distribution: [] -> 0.243, #2 -> 0.162, append -> 0.094, 8 -> 0.063, length -> 0.058, 3 -> 0.056, times -> 0.048, 0 -> 0.044, access -> 0.039, #1 -> 0.037
------------
[486.215s]Generation 276
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 9 ; iter: #3; seedExpr: 9 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 439
Average Size: 31.694
Average Fitness: 7146.494844673181
Fitness Variation: 4184.931430887644
Distribution: [] -> 0.245, #2 -> 0.162, append -> 0.095, 8 -> 0.063, length -> 0.059, 3 -> 0.057, times -> 0.047, 0 -> 0.041, access -> 0.040, #1 -> 0.037
------------
[487.789s]Generation 277
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: #0; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, #0, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 3 ; iter: #0; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 450
Average Size: 31.9
Average Fitness: 7011.949434570402
Fitness Variation: 4213.042632735639
Distribution: [] -> 0.246, #2 -> 0.159, append -> 0.097, 8 -> 0.063, length -> 0.058, 3 -> 0.057, times -> 0.047, 0 -> 0.044, access -> 0.039, #1 -> 0.035
------------
[489.189s]Generation 278
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 0 ; iter: 8; seedExpr: 0 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 8 ; iter: 8; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 443
Average Size: 32.02
Average Fitness: 6690.295992697447
Fitness Variation: 4307.363057184908
Distribution: [] -> 0.251, #2 -> 0.156, append -> 0.097, 8 -> 0.062, 3 -> 0.057, length -> 0.056, times -> 0.046, 0 -> 0.045, access -> 0.041, #1 -> 0.037
------------
[490.907s]Generation 279
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: #0; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 9 ; iter: 9; seedExpr: 9 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 425
Average Size: 31.686
Average Fitness: 7155.916722341951
Fitness Variation: 4180.976847727694
Distribution: [] -> 0.246, #2 -> 0.161, append -> 0.096, 8 -> 0.063, length -> 0.057, 3 -> 0.056, times -> 0.046, 0 -> 0.044, #1 -> 0.040, access -> 0.039
------------
[492.358s]Generation 280
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 0; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 0 ; iter: 2; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 393
Average Size: 31.514
Average Fitness: 7471.3024934774385
Fitness Variation: 4066.0501563606667
Distribution: [] -> 0.250, #2 -> 0.162, append -> 0.096, 8 -> 0.065, length -> 0.058, 3 -> 0.057, times -> 0.048, 0 -> 0.045, access -> 0.040, #1 -> 0.036
------------
[494.118s]Generation 281
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 3; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 4 ; iter: 8; seedExpr: 4 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 426
Average Size: 31.81
Average Fitness: 6906.124185429086
Fitness Variation: 4262.892051210831
Distribution: [] -> 0.251, #2 -> 0.158, append -> 0.099, 8 -> 0.064, length -> 0.058, 3 -> 0.056, times -> 0.047, 0 -> 0.043, access -> 0.039, #1 -> 0.037
------------
[495.576s]Generation 282
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 0 ; iter: #0; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 425
Average Size: 31.9
Average Fitness: 7082.252209536567
Fitness Variation: 4204.269824551838
Distribution: [] -> 0.252, #2 -> 0.162, append -> 0.097, 8 -> 0.066, length -> 0.059, 3 -> 0.055, times -> 0.047, 0 -> 0.043, access -> 0.040, #1 -> 0.035
------------
[497.125s]Generation 283
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 3; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 8 ; iter: #0; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 428
Average Size: 31.64
Average Fitness: 6929.67448191406
Fitness Variation: 4278.866660606473
Distribution: [] -> 0.249, #2 -> 0.158, append -> 0.100, 8 -> 0.064, length -> 0.056, 3 -> 0.056, times -> 0.046, 0 -> 0.045, access -> 0.039, #1 -> 0.037
------------
[498.738s]Generation 284
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 10; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 3 ; iter: 0; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 417
Average Size: 31.774
Average Fitness: 7120.14154545473
Fitness Variation: 4225.359985196532
Distribution: [] -> 0.244, #2 -> 0.158, append -> 0.098, 8 -> 0.066, length -> 0.059, 3 -> 0.056, times -> 0.048, 0 -> 0.045, access -> 0.040, #1 -> 0.039
------------
[500.173s]Generation 285
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: #0; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, #0, #1))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 9 ; iter: #3; seedExpr: 9 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 410
Average Size: 31.56
Average Fitness: 7468.796164328116
Fitness Variation: 4089.119665153675
Distribution: [] -> 0.244, #2 -> 0.163, append -> 0.098, 8 -> 0.067, length -> 0.060, 3 -> 0.057, times -> 0.048, 0 -> 0.045, access -> 0.040, #1 -> 0.039
------------
[501.753s]Generation 286
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 2 ; iter: 8; seedExpr: 2 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 0 ; iter: 5; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 424
Average Size: 31.854
Average Fitness: 6865.428842847289
Fitness Variation: 4309.747905260873
Distribution: [] -> 0.243, #2 -> 0.160, append -> 0.097, 8 -> 0.068, length -> 0.058, 3 -> 0.055, times -> 0.048, 0 -> 0.044, #1 -> 0.040, access -> 0.039
------------
[503.212s]Generation 287
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 5; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 10 ; iter: 8; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 415
Average Size: 31.372
Average Fitness: 6872.311117406348
Fitness Variation: 4250.795960052149
Distribution: [] -> 0.242, #2 -> 0.160, append -> 0.097, 8 -> 0.066, length -> 0.059, 3 -> 0.055, times -> 0.047, 0 -> 0.046, #1 -> 0.041, access -> 0.040
------------
[504.778s]Generation 288
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 1 ; iter: 7; seedExpr: 1 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 7 ; iter: 7; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 432
Average Size: 31.248
Average Fitness: 6880.715514825458
Fitness Variation: 4254.414962334009
Distribution: [] -> 0.240, #2 -> 0.160, append -> 0.096, 8 -> 0.066, length -> 0.057, 3 -> 0.056, times -> 0.047, 0 -> 0.046, #1 -> 0.041, access -> 0.039
------------
[506.146s]Generation 289
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 5; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 10 ; iter: 8; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 419
Average Size: 31.7
Average Fitness: 7294.654821904385
Fitness Variation: 4100.14831541963
Distribution: [] -> 0.238, #2 -> 0.162, append -> 0.096, 8 -> 0.067, length -> 0.058, 3 -> 0.056, times -> 0.047, 0 -> 0.045, #1 -> 0.041, access -> 0.040
------------
[507.650s]Generation 290
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 0 ; iter: 0; seedExpr: 0 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 8 ; iter: #0; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 435
Average Size: 31.498
Average Fitness: 7155.108801184445
Fitness Variation: 4200.222224937457
Distribution: [] -> 0.238, #2 -> 0.164, append -> 0.096, 8 -> 0.067, length -> 0.059, 3 -> 0.058, times -> 0.048, 0 -> 0.046, #1 -> 0.040, access -> 0.040
------------
[509.060s]Generation 291
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 0 ; iter: 4; seedExpr: 0 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 6 ; iter: 7; seedExpr: 6 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 424
Average Size: 31.714
Average Fitness: 7434.001081082223
Fitness Variation: 4016.713800751026
Distribution: [] -> 0.236, #2 -> 0.163, append -> 0.096, 8 -> 0.069, length -> 0.059, 3 -> 0.054, times -> 0.049, 0 -> 0.044, #1 -> 0.041, access -> 0.040
------------
[510.436s]Generation 292
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 5 ; iter: 8; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 436
Average Size: 31.738
Average Fitness: 7221.182894241584
Fitness Variation: 4147.101016884735
Distribution: [] -> 0.243, #2 -> 0.161, append -> 0.097, 8 -> 0.069, length -> 0.060, 3 -> 0.053, times -> 0.047, 0 -> 0.045, access -> 0.040, #1 -> 0.039
------------
[511.753s]Generation 293
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 8 ; iter: 8; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 421
Average Size: 32.028
Average Fitness: 6954.986778253142
Fitness Variation: 4252.608642913641
Distribution: [] -> 0.239, #2 -> 0.160, append -> 0.098, 8 -> 0.069, length -> 0.059, 3 -> 0.052, times -> 0.048, 0 -> 0.044, #1 -> 0.040, access -> 0.040
------------
[513.126s]Generation 294
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 3; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, #0, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 4 ; iter: 5; seedExpr: 4 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 412
Average Size: 31.524
Average Fitness: 7406.265633645673
Fitness Variation: 4083.3641913915467
Distribution: [] -> 0.241, #2 -> 0.166, append -> 0.097, 8 -> 0.069, length -> 0.060, 3 -> 0.056, times -> 0.048, 0 -> 0.043, access -> 0.040, #1 -> 0.036
------------
[514.407s]Generation 295
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 2 ; iter: #3; seedExpr: 2 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 8 ; iter: 5; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 427
Average Size: 31.962
Average Fitness: 7300.683816970887
Fitness Variation: 4061.6015099641236
Distribution: [] -> 0.240, #2 -> 0.162, append -> 0.097, 8 -> 0.070, length -> 0.060, 3 -> 0.052, times -> 0.048, 0 -> 0.042, access -> 0.039, #1 -> 0.036
------------
[515.623s]Generation 296
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: #0; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 428
Average Size: 32.038
Average Fitness: 7560.346014600465
Fitness Variation: 4032.523781721465
Distribution: [] -> 0.245, #2 -> 0.162, append -> 0.097, 8 -> 0.068, length -> 0.059, 3 -> 0.055, times -> 0.047, 0 -> 0.045, access -> 0.040, #1 -> 0.032
------------
[516.939s]Generation 297
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 0 ; iter: 0; seedExpr: 0 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 8 ; iter: #0; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 423
Average Size: 31.834
Average Fitness: 7272.57676390857
Fitness Variation: 4129.792194468665
Distribution: [] -> 0.243, #2 -> 0.163, append -> 0.099, 8 -> 0.070, length -> 0.059, 3 -> 0.055, times -> 0.048, 0 -> 0.045, access -> 0.038, #1 -> 0.036
------------
[518.224s]Generation 298
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #5
*
[S0: EInt]{ seed: 8 ; iter: #0; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 3 ; iter: 0; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), ...
Diversity: 424
Average Size: 31.87
Average Fitness: 7348.025692855065
Fitness Variation: 4078.5774804913854
Distribution: [] -> 0.237, #2 -> 0.163, append -> 0.096, 8 -> 0.072, length -> 0.060, 3 -> 0.055, times -> 0.049, 0 -> 0.043, #1 -> 0.039, access -> 0.038
------------
[519.736s]Generation 299
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 6; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#4, times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 3 ; iter: 6; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 425
Average Size: 31.942
Average Fitness: 7041.777338352213
Fitness Variation: 4204.716794782545
Distribution: [] -> 0.238, #2 -> 0.161, append -> 0.096, 8 -> 0.069, length -> 0.058, 3 -> 0.057, times -> 0.047, 0 -> 0.043, access -> 0.041, #1 -> 0.039
------------
[521.149s]Generation 300
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 6; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 8 ; iter: 8; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 419
Average Size: 31.982
Average Fitness: 7221.8809103522035
Fitness Variation: 4159.12842015126
Distribution: [] -> 0.232, #2 -> 0.160, append -> 0.097, 8 -> 0.070, length -> 0.058, 3 -> 0.056, times -> 0.047, 0 -> 0.042, #1 -> 0.042, access -> 0.039
------------
[522.306s]Generation 301
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 0; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#4, times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(prepend(0, []), prepend([], [])) }
[S3: EInt]{ seed: 3 ; iter: #3; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 419
Average Size: 31.636
Average Fitness: 7337.211959921531
Fitness Variation: 4145.9151297861135
Distribution: [] -> 0.237, #2 -> 0.162, append -> 0.097, 8 -> 0.070, length -> 0.059, 3 -> 0.058, times -> 0.049, 0 -> 0.045, #1 -> 0.040, access -> 0.040
------------
[523.611s]Generation 302
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #5
*
[S0: EInt]{ seed: 3 ; iter: #0; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 3 ; iter: 8; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), ...
Diversity: 429
Average Size: 31.576
Average Fitness: 7329.698033443858
Fitness Variation: 4151.432610352599
Distribution: [] -> 0.237, #2 -> 0.164, append -> 0.095, 8 -> 0.071, 3 -> 0.059, length -> 0.059, times -> 0.048, 0 -> 0.045, #1 -> 0.041, access -> 0.039
------------
[524.892s]Generation 303
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 6; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 0 ; iter: 3; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 444
Average Size: 32.134
Average Fitness: 7312.888664785078
Fitness Variation: 4138.468720592016
Distribution: [] -> 0.233, #2 -> 0.164, append -> 0.095, 8 -> 0.070, 3 -> 0.060, length -> 0.059, times -> 0.049, 0 -> 0.045, #1 -> 0.041, access -> 0.040
------------
[526.461s]Generation 304
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 7 ; iter: 8; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 437
Average Size: 31.74
Average Fitness: 7406.553487174099
Fitness Variation: 4117.72126257132
Distribution: [] -> 0.238, #2 -> 0.161, append -> 0.095, 8 -> 0.066, 3 -> 0.059, length -> 0.058, times -> 0.047, 0 -> 0.046, access -> 0.039, #1 -> 0.038
------------
[527.971s]Generation 305
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 8; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 8 ; iter: 8; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 444
Average Size: 31.802
Average Fitness: 7254.19766406297
Fitness Variation: 4127.997412074454
Distribution: [] -> 0.233, #2 -> 0.164, append -> 0.095, 8 -> 0.067, 3 -> 0.060, length -> 0.059, times -> 0.048, 0 -> 0.043, access -> 0.040, #1 -> 0.039
------------
[529.683s]Generation 306
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: 10; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 438
Average Size: 32.006
Average Fitness: 6908.493095839822
Fitness Variation: 4226.245707828946
Distribution: [] -> 0.234, #2 -> 0.160, append -> 0.094, 8 -> 0.067, length -> 0.059, 3 -> 0.057, times -> 0.048, 0 -> 0.043, access -> 0.039, #1 -> 0.036
------------
[531.286s]Generation 307
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: 10; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 426
Average Size: 31.75
Average Fitness: 7403.415924583904
Fitness Variation: 4072.3295436219446
Distribution: [] -> 0.240, #2 -> 0.161, append -> 0.094, 8 -> 0.066, length -> 0.058, 3 -> 0.056, times -> 0.047, 0 -> 0.045, access -> 0.040, #1 -> 0.034
------------
[532.815s]Generation 308
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 9 ; iter: #0; seedExpr: 9 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 442
Average Size: 31.456
Average Fitness: 7031.877728977161
Fitness Variation: 4202.258511928935
Distribution: [] -> 0.236, #2 -> 0.165, append -> 0.095, 8 -> 0.066, 3 -> 0.059, length -> 0.059, times -> 0.047, 0 -> 0.044, access -> 0.039, #1 -> 0.037
------------
[534.067s]Generation 309
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #5
*
[S0: EInt]{ seed: 8 ; iter: 1; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#4, times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 3 ; iter: #0; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), ...
Diversity: 432
Average Size: 31.932
Average Fitness: 7152.750375834222
Fitness Variation: 4214.186756678807
Distribution: [] -> 0.232, #2 -> 0.164, append -> 0.095, 8 -> 0.068, length -> 0.060, 3 -> 0.059, times -> 0.049, 0 -> 0.043, access -> 0.040, #1 -> 0.035
------------
[535.288s]Generation 310
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 3; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 8 ; iter: #3; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 445
Average Size: 31.52
Average Fitness: 7102.330581337196
Fitness Variation: 4220.868278755399
Distribution: [] -> 0.232, #2 -> 0.161, append -> 0.095, 8 -> 0.066, 3 -> 0.058, length -> 0.058, times -> 0.048, 0 -> 0.045, access -> 0.039, #1 -> 0.037
------------
[536.925s]Generation 311
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: 10; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 10 ; iter: 10; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 450
Average Size: 31.79
Average Fitness: 7160.9593466396
Fitness Variation: 4158.984624190832
Distribution: [] -> 0.232, #2 -> 0.160, append -> 0.093, 8 -> 0.067, 3 -> 0.058, length -> 0.057, times -> 0.047, 0 -> 0.044, access -> 0.041, #1 -> 0.037
------------
[538.319s]Generation 312
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 8; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#4, times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 8 ; iter: 8; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 423
Average Size: 31.862
Average Fitness: 7319.442699354935
Fitness Variation: 4092.6073069431523
Distribution: [] -> 0.227, #2 -> 0.164, append -> 0.095, 8 -> 0.067, length -> 0.060, 3 -> 0.057, times -> 0.049, 0 -> 0.043, access -> 0.040, #4 -> 0.036
------------
[539.793s]Generation 313
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 8; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#4, times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 8 ; iter: 8; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 424
Average Size: 32.08
Average Fitness: 7330.128100766979
Fitness Variation: 4139.663601150063
Distribution: [] -> 0.230, #2 -> 0.158, append -> 0.093, 8 -> 0.067, 3 -> 0.058, length -> 0.057, times -> 0.047, 0 -> 0.046, access -> 0.041, #1 -> 0.036
------------
[541.243s]Generation 314
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: #0; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 5 ; iter: 8; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 426
Average Size: 31.622
Average Fitness: 7040.812237785459
Fitness Variation: 4239.131118132356
Distribution: [] -> 0.233, #2 -> 0.159, append -> 0.095, 8 -> 0.067, 3 -> 0.058, length -> 0.057, times -> 0.047, 0 -> 0.044, access -> 0.039, #4 -> 0.035
------------
[542.805s]Generation 315
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 5 ; iter: 8; seedExpr: 5 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(#3, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 8 ; iter: 8; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 423
Average Size: 32.162
Average Fitness: 7144.42444554973
Fitness Variation: 4143.753882151179
Distribution: [] -> 0.233, #2 -> 0.159, append -> 0.093, 8 -> 0.067, length -> 0.059, 3 -> 0.057, times -> 0.047, 0 -> 0.043, access -> 0.040, #1 -> 0.036
------------
[544.288s]Generation 316
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: #0; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 2 ; iter: 5; seedExpr: 2 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 417
Average Size: 31.476
Average Fitness: 7291.593091037124
Fitness Variation: 4103.740053511037
Distribution: [] -> 0.236, #2 -> 0.161, append -> 0.093, 8 -> 0.067, length -> 0.059, 3 -> 0.056, times -> 0.048, 0 -> 0.046, #1 -> 0.040, access -> 0.039
------------
[545.892s]Generation 317
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: #0; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 8 ; iter: 8; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 430
Average Size: 31.836
Average Fitness: 7027.625185014045
Fitness Variation: 4219.654026299339
Distribution: [] -> 0.236, #2 -> 0.159, append -> 0.095, 8 -> 0.066, length -> 0.058, 3 -> 0.057, times -> 0.047, 0 -> 0.044, #1 -> 0.040, access -> 0.039
------------
[547.319s]Generation 318
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 5 ; iter: 9; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 432
Average Size: 31.918
Average Fitness: 7053.050677341294
Fitness Variation: 4229.814692329655
Distribution: [] -> 0.240, #2 -> 0.159, append -> 0.094, 8 -> 0.068, length -> 0.059, 3 -> 0.057, times -> 0.047, 0 -> 0.045, access -> 0.039, #1 -> 0.039
------------
[548.679s]Generation 319
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 3; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 7 ; iter: #3; seedExpr: 7 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 420
Average Size: 31.712
Average Fitness: 7345.148860929732
Fitness Variation: 4093.941646184813
Distribution: [] -> 0.237, #2 -> 0.160, append -> 0.094, 8 -> 0.068, length -> 0.060, 3 -> 0.058, times -> 0.048, 0 -> 0.046, access -> 0.039, #1 -> 0.037
------------
[549.880s]Generation 320
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 9 ; iter: 1; seedExpr: 9 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 8 ; iter: #0; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 421
Average Size: 31.906
Average Fitness: 7379.167910222423
Fitness Variation: 4119.455195512197
Distribution: [] -> 0.240, #2 -> 0.161, append -> 0.093, 8 -> 0.070, length -> 0.060, 3 -> 0.058, times -> 0.048, 0 -> 0.044, access -> 0.040, #1 -> 0.036
------------
[551.093s]Generation 321
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 3; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 1 ; iter: #3; seedExpr: 1 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 440
Average Size: 31.728
Average Fitness: 7085.940120894318
Fitness Variation: 4207.6170330889445
Distribution: [] -> 0.242, #2 -> 0.160, append -> 0.091, 8 -> 0.071, length -> 0.059, 3 -> 0.056, times -> 0.048, 0 -> 0.043, access -> 0.040, #1 -> 0.035
------------
[552.297s]Generation 322
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 1 ; iter: 3; seedExpr: 1 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#4, times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 3 ; iter: #0; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 438
Average Size: 31.6
Average Fitness: 6814.009356378128
Fitness Variation: 4282.759275611793
Distribution: [] -> 0.241, #2 -> 0.158, append -> 0.092, 8 -> 0.071, length -> 0.057, 3 -> 0.057, times -> 0.047, 0 -> 0.043, access -> 0.039, #1 -> 0.034
------------
[553.407s]Generation 323
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: #0; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 8 ; iter: 7; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 421
Average Size: 31.75
Average Fitness: 7374.385157356643
Fitness Variation: 4126.1027053873395
Distribution: [] -> 0.241, #2 -> 0.162, append -> 0.092, 8 -> 0.071, length -> 0.060, 3 -> 0.059, times -> 0.048, 0 -> 0.043, access -> 0.040, #1 -> 0.034
------------
[554.475s]Generation 324
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: 3; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#4, times(8, length(#2))), access(#2, #3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 3 ; iter: 3; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 419
Average Size: 31.598
Average Fitness: 7295.1183538063315
Fitness Variation: 4128.153001564059
Distribution: [] -> 0.237, #2 -> 0.159, append -> 0.092, 8 -> 0.071, 3 -> 0.059, length -> 0.059, times -> 0.047, 0 -> 0.041, access -> 0.040, #1 -> 0.036
------------
[555.641s]Generation 325
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 0; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 5 ; iter: 3; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 438
Average Size: 31.88
Average Fitness: 7108.693070352465
Fitness Variation: 4178.249998271399
Distribution: [] -> 0.237, #2 -> 0.156, append -> 0.091, 8 -> 0.069, 3 -> 0.059, length -> 0.056, times -> 0.047, 0 -> 0.041, access -> 0.040, #1 -> 0.038
------------
[556.737s]Generation 326
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 8; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 8 ; iter: 8; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 430
Average Size: 32.178
Average Fitness: 7260.110910152939
Fitness Variation: 4133.286880535983
Distribution: [] -> 0.243, #2 -> 0.159, append -> 0.092, 8 -> 0.070, length -> 0.059, 3 -> 0.059, times -> 0.047, 0 -> 0.042, access -> 0.041, #1 -> 0.033
------------
[557.883s]Generation 327
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: #0; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 5 ; iter: #0; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 448
Average Size: 31.902
Average Fitness: 6746.32991289633
Fitness Variation: 4295.041357395265
Distribution: [] -> 0.239, #2 -> 0.157, append -> 0.089, 8 -> 0.071, length -> 0.060, 3 -> 0.056, times -> 0.047, 0 -> 0.041, access -> 0.041, #1 -> 0.038
------------
[559.466s]Generation 328
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 3; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(prepend(0, []), prepend([], [])) }
[S3: EInt]{ seed: 1 ; iter: 10; seedExpr: 1 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 432
Average Size: 31.518
Average Fitness: 7009.538389083656
Fitness Variation: 4242.1141578165525
Distribution: [] -> 0.241, #2 -> 0.159, append -> 0.089, 8 -> 0.070, 3 -> 0.058, length -> 0.058, times -> 0.047, 0 -> 0.043, access -> 0.040, prepend -> 0.037
------------
[560.963s]Generation 329
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: #0; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 8 ; iter: #3; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 428
Average Size: 31.914
Average Fitness: 7279.677564367153
Fitness Variation: 4091.577968612141
Distribution: [] -> 0.243, #2 -> 0.160, append -> 0.085, 8 -> 0.071, length -> 0.059, 3 -> 0.056, times -> 0.048, 0 -> 0.044, access -> 0.041, prepend -> 0.037
------------
[562.326s]Generation 330
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 3; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 1 ; iter: 1; seedExpr: 1 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 430
Average Size: 31.966
Average Fitness: 7296.356676513562
Fitness Variation: 4189.436591516059
Distribution: [] -> 0.236, #2 -> 0.159, append -> 0.087, 8 -> 0.072, length -> 0.059, 3 -> 0.058, times -> 0.048, 0 -> 0.041, access -> 0.039, prepend -> 0.038
------------
[563.472s]Generation 331
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 3; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 1 ; iter: 1; seedExpr: 1 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 427
Average Size: 31.708
Average Fitness: 7189.544041671709
Fitness Variation: 4138.087174238988
Distribution: [] -> 0.237, #2 -> 0.160, append -> 0.088, 8 -> 0.072, length -> 0.059, 3 -> 0.058, times -> 0.048, 0 -> 0.043, access -> 0.039, prepend -> 0.038
------------
[564.630s]Generation 332
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 5 ; iter: 9; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 432
Average Size: 31.654
Average Fitness: 6912.348516062901
Fitness Variation: 4289.350991295906
Distribution: [] -> 0.241, #2 -> 0.160, append -> 0.089, 8 -> 0.071, length -> 0.058, 3 -> 0.058, times -> 0.047, 0 -> 0.043, access -> 0.039, prepend -> 0.036
------------
[565.714s]Generation 333
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 9 ; iter: #0; seedExpr: 9 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 5 ; iter: 9; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 421
Average Size: 31.752
Average Fitness: 7334.845346099642
Fitness Variation: 4131.820012741855
Distribution: [] -> 0.234, #2 -> 0.162, append -> 0.088, 8 -> 0.071, length -> 0.059, 3 -> 0.057, times -> 0.049, 0 -> 0.042, access -> 0.039, prepend -> 0.036
------------
[566.933s]Generation 334
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: #0; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 0 ; iter: 9; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 438
Average Size: 31.522
Average Fitness: 7111.461685513236
Fitness Variation: 4214.018600925075
Distribution: [] -> 0.235, #2 -> 0.163, append -> 0.090, 8 -> 0.071, length -> 0.059, 3 -> 0.058, times -> 0.048, 0 -> 0.044, access -> 0.040, #4 -> 0.035
------------
[568.034s]Generation 335
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 8; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#4, times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 8 ; iter: 5; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 433
Average Size: 31.944
Average Fitness: 7454.479658375256
Fitness Variation: 4091.426512489573
Distribution: [] -> 0.236, #2 -> 0.162, append -> 0.089, 8 -> 0.071, length -> 0.059, 3 -> 0.057, times -> 0.049, 0 -> 0.045, access -> 0.040, #1 -> 0.036
------------
[569.423s]Generation 336
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: 3; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 4 ; iter: 3; seedExpr: 4 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 441
Average Size: 31.742
Average Fitness: 7112.1937421861885
Fitness Variation: 4204.3408736467
Distribution: [] -> 0.229, #2 -> 0.161, append -> 0.086, 8 -> 0.068, length -> 0.057, 3 -> 0.057, times -> 0.046, 0 -> 0.044, access -> 0.040, #1 -> 0.037
------------
[570.689s]Generation 337
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 3; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 1 ; iter: 0; seedExpr: 1 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 418
Average Size: 31.586
Average Fitness: 7187.21068852059
Fitness Variation: 4177.305324084472
Distribution: [] -> 0.237, #2 -> 0.161, append -> 0.087, 8 -> 0.070, length -> 0.058, 3 -> 0.055, times -> 0.047, 0 -> 0.045, access -> 0.038, #1 -> 0.037
------------
[571.936s]Generation 338
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#4, times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 3 ; iter: #0; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 442
Average Size: 31.862
Average Fitness: 6826.133714788856
Fitness Variation: 4256.168566148554
Distribution: [] -> 0.237, #2 -> 0.159, append -> 0.087, 8 -> 0.067, length -> 0.058, 3 -> 0.057, times -> 0.047, 0 -> 0.045, access -> 0.039, prepend -> 0.037
------------
[573.275s]Generation 339
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 9 ; iter: #3; seedExpr: 9 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 5 ; iter: 9; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 433
Average Size: 31.902
Average Fitness: 7092.077303119581
Fitness Variation: 4204.372593216949
Distribution: [] -> 0.236, #2 -> 0.162, append -> 0.086, 8 -> 0.069, length -> 0.059, 3 -> 0.057, times -> 0.047, 0 -> 0.043, access -> 0.040, prepend -> 0.036
------------
[574.472s]Generation 340
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: 8; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 8 ; iter: 5; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 422
Average Size: 31.82
Average Fitness: 6928.935971242746
Fitness Variation: 4256.795950406664
Distribution: [] -> 0.234, #2 -> 0.161, append -> 0.086, 8 -> 0.070, length -> 0.059, 3 -> 0.056, times -> 0.048, 0 -> 0.043, access -> 0.039, #1 -> 0.036
------------
[575.660s]Generation 341
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 9 ; iter: #3; seedExpr: 9 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 5 ; iter: 9; seedExpr: 5 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 425
Average Size: 31.732
Average Fitness: 7480.480567112544
Fitness Variation: 4069.4478639117865
Distribution: [] -> 0.241, #2 -> 0.163, append -> 0.087, 8 -> 0.070, length -> 0.059, 3 -> 0.058, times -> 0.047, 0 -> 0.043, access -> 0.039, prepend -> 0.036
------------
[576.893s]Generation 342
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 11 ; iter: #0; seedExpr: 11 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 8 ; iter: 8; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 434
Average Size: 31.658
Average Fitness: 7140.20433514571
Fitness Variation: 4196.317576101853
Distribution: [] -> 0.236, #2 -> 0.162, append -> 0.089, 8 -> 0.071, 3 -> 0.060, length -> 0.059, times -> 0.047, 0 -> 0.043, access -> 0.040, #4 -> 0.037
------------
[577.932s]Generation 343
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 8; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 1 ; iter: #3; seedExpr: 1 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 423
Average Size: 31.816
Average Fitness: 7312.147179241736
Fitness Variation: 4101.505816276107
Distribution: [] -> 0.240, #2 -> 0.161, append -> 0.088, 8 -> 0.071, 3 -> 0.059, length -> 0.058, times -> 0.047, 0 -> 0.043, access -> 0.040, prepend -> 0.036
------------
[578.939s]Generation 344
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 0; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 4 ; iter: 3; seedExpr: 4 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 426
Average Size: 31.99
Average Fitness: 7292.024575293099
Fitness Variation: 4154.124738066488
Distribution: [] -> 0.244, #2 -> 0.162, append -> 0.087, 8 -> 0.071, 3 -> 0.059, length -> 0.058, times -> 0.047, 0 -> 0.043, access -> 0.041, prepend -> 0.037
------------
[580.029s]Generation 345
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 3; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 10 ; iter: 3; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 426
Average Size: 31.298
Average Fitness: 7403.409876313294
Fitness Variation: 4104.95227420802
Distribution: [] -> 0.243, #2 -> 0.165, append -> 0.089, 8 -> 0.073, length -> 0.061, 3 -> 0.056, times -> 0.049, 0 -> 0.045, access -> 0.039, prepend -> 0.035
------------
[581.002s]Generation 346
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: #0; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 8 ; iter: 8; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 420
Average Size: 31.384
Average Fitness: 7075.107689989994
Fitness Variation: 4234.625808014692
Distribution: [] -> 0.241, #2 -> 0.162, append -> 0.090, 8 -> 0.071, length -> 0.057, 3 -> 0.056, times -> 0.047, 0 -> 0.043, access -> 0.039, prepend -> 0.034
------------
[582.011s]Generation 347
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 0; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 4 ; iter: 3; seedExpr: 4 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 422
Average Size: 31.902
Average Fitness: 7423.220839790769
Fitness Variation: 4079.69808434651
Distribution: [] -> 0.243, #2 -> 0.159, append -> 0.090, 8 -> 0.070, length -> 0.058, 3 -> 0.056, times -> 0.048, 0 -> 0.044, access -> 0.040, prepend -> 0.034
------------
[583.091s]Generation 348
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 0; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 4 ; iter: 3; seedExpr: 4 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 431
Average Size: 31.754
Average Fitness: 7007.664391120302
Fitness Variation: 4259.888307827071
Distribution: [] -> 0.243, #2 -> 0.158, append -> 0.089, 8 -> 0.069, length -> 0.058, 3 -> 0.056, times -> 0.046, 0 -> 0.043, access -> 0.041, prepend -> 0.033
------------
[584.143s]Generation 349
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: #0; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(prepend(0, []), prepend([], [])) }
[S3: EInt]{ seed: 8 ; iter: #0; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 441
Average Size: 31.834
Average Fitness: 6931.810602017733
Fitness Variation: 4256.917573633639
Distribution: [] -> 0.245, #2 -> 0.162, append -> 0.088, 8 -> 0.070, length -> 0.060, 3 -> 0.058, times -> 0.048, 0 -> 0.045, access -> 0.040, prepend -> 0.034
------------
[585.192s]Generation 350
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 9 ; iter: #3; seedExpr: 9 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 4 ; iter: #3; seedExpr: 4 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 434
Average Size: 31.454
Average Fitness: 6834.873449166547
Fitness Variation: 4268.757894854642
Distribution: [] -> 0.252, #2 -> 0.158, append -> 0.090, 8 -> 0.068, length -> 0.057, 3 -> 0.056, times -> 0.046, 0 -> 0.046, access -> 0.040, prepend -> 0.034
------------
[586.120s]Generation 351
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: #0; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 1 ; iter: 0; seedExpr: 1 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 417
Average Size: 32.186
Average Fitness: 7038.914907407371
Fitness Variation: 4213.792066430214
Distribution: [] -> 0.242, #2 -> 0.157, append -> 0.091, 8 -> 0.067, length -> 0.057, 3 -> 0.055, times -> 0.048, 0 -> 0.045, access -> 0.040, prepend -> 0.034
------------
[587.143s]Generation 352
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 9 ; iter: #3; seedExpr: 9 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 8 ; iter: #0; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 413
Average Size: 32.256
Average Fitness: 7638.961397382631
Fitness Variation: 3922.2431763446693
Distribution: [] -> 0.242, #2 -> 0.160, append -> 0.092, 8 -> 0.068, length -> 0.059, 3 -> 0.056, times -> 0.048, 0 -> 0.043, access -> 0.039, prepend -> 0.033
------------
[588.201s]Generation 353
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 0; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 1 ; iter: 0; seedExpr: 1 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 422
Average Size: 31.668
Average Fitness: 7345.206128190435
Fitness Variation: 4110.712644273426
Distribution: [] -> 0.239, #2 -> 0.161, append -> 0.091, 8 -> 0.067, length -> 0.058, 3 -> 0.056, times -> 0.047, 0 -> 0.044, access -> 0.040, #4 -> 0.032
------------
[589.282s]Generation 354
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 9; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 8 ; iter: 9; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 443
Average Size: 31.776
Average Fitness: 6827.37815402406
Fitness Variation: 4276.4610683391575
Distribution: [] -> 0.238, #2 -> 0.162, append -> 0.094, 8 -> 0.068, length -> 0.058, 3 -> 0.055, times -> 0.048, 0 -> 0.046, access -> 0.039, #4 -> 0.033
------------
[590.332s]Generation 355
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 0; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 3 ; iter: 8; seedExpr: 3 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 423
Average Size: 32.114
Average Fitness: 7231.2121551013315
Fitness Variation: 4142.376619715698
Distribution: [] -> 0.237, #2 -> 0.160, append -> 0.093, 8 -> 0.068, length -> 0.059, 3 -> 0.055, times -> 0.048, 0 -> 0.044, access -> 0.039, #1 -> 0.033
------------
[591.399s]Generation 356
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 9; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 1 ; iter: 9; seedExpr: 1 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 426
Average Size: 31.928
Average Fitness: 7478.656320471344
Fitness Variation: 4086.811311721161
Distribution: [] -> 0.240, #2 -> 0.165, append -> 0.090, 8 -> 0.069, length -> 0.060, 3 -> 0.058, times -> 0.048, 0 -> 0.044, access -> 0.041, concat -> 0.032
------------
[593.063s]Generation 357
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #3; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 11 ; iter: 0; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 425
Average Size: 31.53
Average Fitness: 6958.407187499581
Fitness Variation: 4250.777029923089
Distribution: [] -> 0.245, #2 -> 0.163, append -> 0.092, 8 -> 0.068, length -> 0.060, 3 -> 0.056, times -> 0.048, 0 -> 0.043, access -> 0.039, prepend -> 0.030
------------
[594.668s]Generation 358
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #5
*
[S0: EInt]{ seed: 0 ; iter: 4; seedExpr: 0 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 0 ; iter: 8; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), ...
Diversity: 427
Average Size: 32.082
Average Fitness: 7380.40454523203
Fitness Variation: 4055.7245913899565
Distribution: [] -> 0.237, #2 -> 0.162, append -> 0.092, 8 -> 0.069, length -> 0.060, 3 -> 0.057, times -> 0.048, 0 -> 0.042, access -> 0.040, #4 -> 0.033
------------
[596.280s]Generation 359
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: #0; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#4, times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 10 ; iter: #0; seedExpr: 10 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 437
Average Size: 31.448
Average Fitness: 7030.549430804044
Fitness Variation: 4187.899103925529
Distribution: [] -> 0.236, #2 -> 0.158, append -> 0.091, 8 -> 0.065, length -> 0.057, 3 -> 0.057, times -> 0.046, 0 -> 0.044, access -> 0.040, #4 -> 0.037
------------
[597.777s]Generation 360
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: #3; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 0 ; iter: 8; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 424
Average Size: 31.52
Average Fitness: 7293.6875303576135
Fitness Variation: 4171.406676250711
Distribution: [] -> 0.234, #2 -> 0.163, append -> 0.094, 8 -> 0.068, length -> 0.058, 3 -> 0.056, times -> 0.047, 0 -> 0.046, #4 -> 0.040, access -> 0.038
------------
[599.413s]Generation 361
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: #3; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#4, times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 1 ; iter: #3; seedExpr: 1 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 441
Average Size: 31.538
Average Fitness: 7236.345631379987
Fitness Variation: 4201.067758237135
Distribution: [] -> 0.230, #2 -> 0.164, append -> 0.092, 8 -> 0.068, length -> 0.060, 3 -> 0.056, times -> 0.048, 0 -> 0.046, access -> 0.040, #4 -> 0.037
------------
[601.033s]Generation 362
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: #3; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 11 ; iter: 0; seedExpr: 11 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 439
Average Size: 31.844
Average Fitness: 7037.134265898285
Fitness Variation: 4241.60730734187
Distribution: [] -> 0.230, #2 -> 0.161, append -> 0.093, 8 -> 0.067, length -> 0.057, 3 -> 0.054, times -> 0.047, 0 -> 0.046, access -> 0.039, #4 -> 0.039
------------
[602.707s]Generation 363
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 10 ; iter: 8; seedExpr: 10 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 8 ; iter: 8; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #5; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 437
Average Size: 31.618
Average Fitness: 7016.208235992839
Fitness Variation: 4176.172800681193
Distribution: [] -> 0.233, #2 -> 0.161, append -> 0.092, 8 -> 0.069, length -> 0.058, 3 -> 0.056, times -> 0.048, 0 -> 0.046, access -> 0.039, #4 -> 0.037
------------
[604.206s]Generation 364
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: #0; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#4, times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 0 ; iter: 3; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 434
Average Size: 31.76
Average Fitness: 6958.767471700184
Fitness Variation: 4240.644356662018
Distribution: [] -> 0.235, #2 -> 0.162, append -> 0.093, 8 -> 0.069, length -> 0.060, 3 -> 0.056, times -> 0.048, 0 -> 0.045, access -> 0.040, #4 -> 0.039
------------
[605.702s]Generation 365
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: #0; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#4, times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 0 ; iter: 3; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 439
Average Size: 31.968
Average Fitness: 7094.760362810208
Fitness Variation: 4182.495414795628
Distribution: [] -> 0.231, #2 -> 0.160, append -> 0.094, 8 -> 0.069, length -> 0.058, 3 -> 0.057, times -> 0.047, 0 -> 0.045, #4 -> 0.041, access -> 0.040
------------
[607.359s]Generation 366
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 6 ; iter: #3; seedExpr: 6 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#4, times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 1 ; iter: #3; seedExpr: 1 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 440
Average Size: 31.674
Average Fitness: 6980.403605034185
Fitness Variation: 4215.576160411653
Distribution: [] -> 0.235, #2 -> 0.161, append -> 0.095, 8 -> 0.069, length -> 0.058, 3 -> 0.057, times -> 0.047, 0 -> 0.043, #4 -> 0.041, access -> 0.039
------------
[608.985s]Generation 367
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 0 ; iter: 4; seedExpr: 0 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, #3, []))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 1 ; iter: 3; seedExpr: 1 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 438
Average Size: 31.724
Average Fitness: 7042.0795578190155
Fitness Variation: 4145.922971056448
Distribution: [] -> 0.232, #2 -> 0.157, append -> 0.095, 8 -> 0.067, 3 -> 0.057, length -> 0.056, times -> 0.046, 0 -> 0.046, access -> 0.041, #4 -> 0.041
------------
[610.512s]Generation 368
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 0 ; iter: #3; seedExpr: 0 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 0 ; iter: 8; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 428
Average Size: 31.742
Average Fitness: 7062.415216686248
Fitness Variation: 4211.049344482312
Distribution: [] -> 0.236, #2 -> 0.159, append -> 0.097, 8 -> 0.067, length -> 0.057, 3 -> 0.057, times -> 0.047, 0 -> 0.046, access -> 0.040, #4 -> 0.037
------------
[612.099s]Generation 369
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 0; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 6 ; iter: #3; seedExpr: 6 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 433
Average Size: 31.574
Average Fitness: 7117.192924485653
Fitness Variation: 4220.257923814185
Distribution: [] -> 0.235, #2 -> 0.162, append -> 0.094, 8 -> 0.067, length -> 0.059, 3 -> 0.056, times -> 0.048, 0 -> 0.045, #4 -> 0.040, access -> 0.040
------------
[613.752s]Generation 370
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: #0; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 2 ; iter: 8; seedExpr: 2 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 437
Average Size: 31.804
Average Fitness: 7175.579020709739
Fitness Variation: 4158.98755640708
Distribution: [] -> 0.237, #2 -> 0.159, append -> 0.093, 8 -> 0.067, length -> 0.059, 3 -> 0.057, times -> 0.047, 0 -> 0.044, #4 -> 0.039, access -> 0.039
------------
[615.257s]Generation 371
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #5
*
[S0: EInt]{ seed: 3 ; iter: 8; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#4, times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 0 ; iter: 5; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([]), Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), ...
Diversity: 419
Average Size: 31.574
Average Fitness: 7249.825078452186
Fitness Variation: 4155.177174915167
Distribution: [] -> 0.237, #2 -> 0.159, append -> 0.093, 8 -> 0.066, length -> 0.057, 3 -> 0.056, times -> 0.047, 0 -> 0.045, access -> 0.039, #4 -> 0.038
------------
[616.846s]Generation 372
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 7 ; iter: #0; seedExpr: 7 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, []))); seedExpr: prepend(append([], 0), prepend([], [])) }
[S3: EInt]{ seed: 8 ; iter: #3; seedExpr: 8 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 431
Average Size: 31.78
Average Fitness: 7239.392870731427
Fitness Variation: 4178.973250297191
Distribution: [] -> 0.234, #2 -> 0.162, append -> 0.092, 8 -> 0.066, length -> 0.060, 3 -> 0.056, times -> 0.048, 0 -> 0.045, access -> 0.040, #4 -> 0.038
------------
[618.112s]Generation 373
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Crossover
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: #3; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append(#1, times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 9 ; iter: 10; seedExpr: 9 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: []; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 428
Average Size: 31.722
Average Fitness: 7338.441496487627
Fitness Variation: 4100.147723185971
Distribution: [] -> 0.232, #2 -> 0.162, append -> 0.092, 8 -> 0.067, length -> 0.059, 3 -> 0.055, times -> 0.048, 0 -> 0.045, access -> 0.040, #4 -> 0.037
------------
[619.218s]Generation 374
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 8 ; iter: 9; seedExpr: 8 }
[S1: EVect(EInt)]{ seed: [] ; iter: #4; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 1 ; iter: #3; seedExpr: 1 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 434
Average Size: 31.69
Average Fitness: 7286.1345761169205
Fitness Variation: 4138.208300014457
Distribution: [] -> 0.232, #2 -> 0.163, append -> 0.089, 8 -> 0.067, length -> 0.059, 3 -> 0.055, times -> 0.048, 0 -> 0.044, access -> 0.040, #4 -> 0.038
------------
[620.403s]Generation 375
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Copy
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 3 ; iter: 8; seedExpr: 3 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #4))); seedExpr: prepend(append([], 0), append([], [])) }
[S3: EInt]{ seed: 0 ; iter: 0; seedExpr: 0 }
[S4: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 436
Average Size: 31.842
Average Fitness: 7236.685873171516
Fitness Variation: 4178.311355575371
Distribution: [] -> 0.234, #2 -> 0.160, append -> 0.091, 8 -> 0.065, length -> 0.059, 3 -> 0.055, times -> 0.048, 0 -> 0.046, access -> 0.039, #4 -> 0.036
------------
[621.602s]Generation 376
Best Result: (fitness: 10268.5, performance: 10612.0), Created by Mutate
[O0: EVect(EVect(EInt))] -> #2
*
[S0: EInt]{ seed: 4 ; iter: #3; seedExpr: 4 }
[S1: EVect(EInt)]{ seed: [] ; iter: []; seedExpr: [] }
[S2: EVect(EVect(EInt))]{ seed: [[0],[]] ; iter: append(#2, concat(append([], times(8, length(#2))), access(#2, 3, #1))); seedExpr: prepend(prepend(0, []), append([], [])) }
[S3: EInt]{ seed: 1 ; iter: #3; seedExpr: 1 }
[S4: EVect(EInt)]{ seed: [] ; iter: #1; seedExpr: [] }
[S5: EVect(EVect(EInt))]{ seed: [] ; iter: #2; seedExpr: [] }
Best Individual Pattern: Vector([[0],[]]), Vector([[0],[],[16]]), Vector([[0],[],[16],[24,0]]), Vector([[0],[],[16],[24,0],[32,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0]]), Vector([[0],[],[16],[24,0],[32,24,0],[40,24,0],[48,24,0],[56,24,0]]), ...
Diversity: 437
Average Size: 31.52
Average Fitness: 7104.623837334157
Fitness Variation: 4206.439477504266
Distribution: [] -> 0.229, #2 -> 0.163, append -> 0.092, 8 -> 0.067, length -> 0.060, 3 -> 0.059, times -> 0.048, 0 -> 0.044, access -> 0.040, #4 -> 0.039
Evolution Finished!
